mkdir -p build/devices
mkdir -p build/filesys
mkdir -p build/lib
mkdir -p build/lib/kernel
mkdir -p build/lib/user
mkdir -p build/tests/filesys/base
mkdir -p build/tests/userprog
mkdir -p build/tests/userprog/no-vm
mkdir -p build/threads
mkdir -p build/userprog
cp ../Makefile.build build/Makefile
cd build && make grade
make[1]: Entering directory `/home/jata/pintos/src/userprog/build'
gcc -E -nostdinc -I../.. -I../../lib -I../../lib/kernel -P ../../threads/kernel.lds.S > threads/kernel.lds.s
gcc -c ../../threads/start.S -o threads/start.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -MMD -MF threads/start.d
gcc -c ../../threads/init.c -o threads/init.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/init.d
gcc -c ../../threads/thread.c -o threads/thread.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/thread.d
gcc -c ../../threads/switch.S -o threads/switch.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -MMD -MF threads/switch.d
gcc -c ../../threads/interrupt.c -o threads/interrupt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/interrupt.d
gcc -c ../../threads/intr-stubs.S -o threads/intr-stubs.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -MMD -MF threads/intr-stubs.d
gcc -c ../../threads/synch.c -o threads/synch.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/synch.d
gcc -c ../../threads/palloc.c -o threads/palloc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/palloc.d
gcc -c ../../threads/malloc.c -o threads/malloc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/malloc.d
gcc -c ../../devices/pit.c -o devices/pit.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/pit.d
gcc -c ../../devices/timer.c -o devices/timer.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/timer.d
gcc -c ../../devices/kbd.c -o devices/kbd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/kbd.d
gcc -c ../../devices/vga.c -o devices/vga.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/vga.d
gcc -c ../../devices/serial.c -o devices/serial.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/serial.d
gcc -c ../../devices/block.c -o devices/block.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/block.d
gcc -c ../../devices/partition.c -o devices/partition.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/partition.d
gcc -c ../../devices/ide.c -o devices/ide.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/ide.d
gcc -c ../../devices/input.c -o devices/input.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/input.d
gcc -c ../../devices/intq.c -o devices/intq.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/intq.d
gcc -c ../../devices/rtc.c -o devices/rtc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/rtc.d
gcc -c ../../devices/shutdown.c -o devices/shutdown.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/shutdown.d
gcc -c ../../devices/speaker.c -o devices/speaker.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/speaker.d
gcc -c ../../lib/debug.c -o lib/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/debug.d
gcc -c ../../lib/random.c -o lib/random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/random.d
gcc -c ../../lib/stdio.c -o lib/stdio.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/stdio.d
gcc -c ../../lib/stdlib.c -o lib/stdlib.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/stdlib.d
gcc -c ../../lib/string.c -o lib/string.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/string.d
gcc -c ../../lib/arithmetic.c -o lib/arithmetic.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/arithmetic.d
gcc -c ../../lib/ustar.c -o lib/ustar.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/ustar.d
gcc -c ../../lib/kernel/debug.c -o lib/kernel/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/debug.d
gcc -c ../../lib/kernel/list.c -o lib/kernel/list.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/list.d
gcc -c ../../lib/kernel/bitmap.c -o lib/kernel/bitmap.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/bitmap.d
gcc -c ../../lib/kernel/hash.c -o lib/kernel/hash.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/hash.d
gcc -c ../../lib/kernel/console.c -o lib/kernel/console.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/console.d
gcc -c ../../userprog/process.c -o userprog/process.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/process.d
gcc -c ../../userprog/pagedir.c -o userprog/pagedir.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/pagedir.d
gcc -c ../../userprog/exception.c -o userprog/exception.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/exception.d
gcc -c ../../userprog/syscall.c -o userprog/syscall.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/syscall.d
gcc -c ../../userprog/gdt.c -o userprog/gdt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/gdt.d
gcc -c ../../userprog/tss.c -o userprog/tss.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/tss.d
gcc -c ../../filesys/filesys.c -o filesys/filesys.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/filesys.d
gcc -c ../../filesys/free-map.c -o filesys/free-map.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/free-map.d
gcc -c ../../filesys/file.c -o filesys/file.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/file.d
gcc -c ../../filesys/directory.c -o filesys/directory.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/directory.d
gcc -c ../../filesys/inode.c -o filesys/inode.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/inode.d
gcc -c ../../filesys/fsutil.c -o filesys/fsutil.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/fsutil.d
ld -T threads/kernel.lds.s -o kernel.o threads/start.o threads/init.o threads/thread.o threads/switch.o threads/interrupt.o threads/intr-stubs.o threads/synch.o threads/palloc.o threads/malloc.o devices/pit.o devices/timer.o devices/kbd.o devices/vga.o devices/serial.o devices/block.o devices/partition.o devices/ide.o devices/input.o devices/intq.o devices/rtc.o devices/shutdown.o devices/speaker.o lib/debug.o lib/random.o lib/stdio.o lib/stdlib.o lib/string.o lib/arithmetic.o lib/ustar.o lib/kernel/debug.o lib/kernel/list.o lib/kernel/bitmap.o lib/kernel/hash.o lib/kernel/console.o userprog/process.o userprog/pagedir.o userprog/exception.o userprog/syscall.o userprog/gdt.o userprog/tss.o filesys/filesys.o filesys/free-map.o filesys/file.o filesys/directory.o filesys/inode.o filesys/fsutil.o
objcopy -R .note -R .comment -S kernel.o kernel.bin
gcc -c ../../threads/loader.S -o threads/loader.o -Wa,--gstabs -nostdinc -I../.. -I../../lib 
ld -N -e 0 -Ttext 0x7c00 --oformat binary -o loader.bin threads/loader.o
gcc -c ../../tests/userprog/args.c -o tests/userprog/args.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/args.d
gcc -c ../../tests/lib.c -o tests/lib.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/lib.d
gcc -c ../../lib/user/entry.c -o lib/user/entry.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/entry.d
gcc -c ../../lib/user/debug.c -o lib/user/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/debug.d
gcc -c ../../lib/user/syscall.c -o lib/user/syscall.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/syscall.d
gcc -c ../../lib/user/console.c -o lib/user/console.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/console.d
rm -f libc.a
ar r libc.a lib/debug.o lib/random.o lib/stdio.o lib/stdlib.o lib/string.o lib/arithmetic.o lib/ustar.o lib/user/debug.o lib/user/syscall.o lib/user/console.o
ranlib libc.a
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-none
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/args-none -a args-none -- -q    -f run args-none < /dev/null 2> tests/userprog/args-none.errors |tee tests/userprog/args-none.output
Copying tests/userprog/args-none to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run args-none
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-none' into the file system...
Erasing ustar archive...
Executing 'args-none':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 61 72-67 73 2d 6e 6f 6e 65 00 |......args-none.|
(args) begin
(args) argc = 1
(args) argv[0] = 'args-none'
(args) argv[1] = null
(args) end
args-none : exit(0)
Execution of 'args-none' complete.
Timer: 307 ticks
Thread: 41 idle ticks, 212 kernel ticks, 56 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1096 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/args-none.ck tests/userprog/args-none tests/userprog/args-none.result
FAIL tests/userprog/args-none
Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 1
  (args) argv[0] = 'args-none'
  (args) argv[1] = null
  (args) end
  args-none: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 61 72-67 73 2d 6e 6f 6e 65 00 |......args-none.|
  (args) begin
  (args) argc = 1
  (args) argv[0] = 'args-none'
  (args) argv[1] = null
  (args) end
- args-none: exit(0)
+ args-none : exit(0)
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-single
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/args-single -a args-single -- -q    -f run 'args-single onearg' < /dev/null 2> tests/userprog/args-single.errors |tee tests/userprog/args-single.output
Copying tests/userprog/args-single to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'args-single onearg'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-single' into the file system...
Erasing ustar archive...
Executing 'args-single onearg':
bfffffd0                 00 00 00-00 02 00 00 00 e1 ff ff |     ...........|
bfffffe0  bf ed ff ff bf f9 ff ff-bf 00 00 00 00 61 72 67 |.............arg|
bffffff0  73 2d 73 69 6e 67 6c 65-00 6f 6e 65 61 72 67 00 |s-single.onearg.|
(args) begin
(args) argc = 2
(args) argv[0] = 'args-single'
(args) argv[1] = 'onearg'
(args) argv[2] = null
(args) end
args-single : exit(0)
Execution of 'args-single onearg' complete.
Timer: 325 ticks
Thread: 42 idle ticks, 217 kernel ticks, 69 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1234 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/args-single.ck tests/userprog/args-single tests/userprog/args-single.result
FAIL tests/userprog/args-single
Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 2
  (args) argv[0] = 'args-single'
  (args) argv[1] = 'onearg'
  (args) argv[2] = null
  (args) end
  args-single: exit(0)
Differences in `diff -u' format:
+ bfffffd0                 00 00 00-00 02 00 00 00 e1 ff ff |     ...........|
+ bfffffe0  bf ed ff ff bf f9 ff ff-bf 00 00 00 00 61 72 67 |.............arg|
+ bffffff0  73 2d 73 69 6e 67 6c 65-00 6f 6e 65 61 72 67 00 |s-single.onearg.|
  (args) begin
  (args) argc = 2
  (args) argv[0] = 'args-single'
  (args) argv[1] = 'onearg'
  (args) argv[2] = null
  (args) end
- args-single: exit(0)
+ args-single : exit(0)
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-multiple
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/args-multiple -a args-multiple -- -q    -f run 'args-multiple some arguments for you!' < /dev/null 2> tests/userprog/args-multiple.errors |tee tests/userprog/args-multiple.output
Copying tests/userprog/args-multiple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'args-multiple some arguments for you!'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-multiple' into the file system...
Erasing ustar archive...
Executing 'args-multiple some arguments for you!':
bfffffb0                    00 00-00 00 05 00 00 00 c2 ff |      ..........|
bfffffc0  ff bf da ff ff bf e8 ff-ff bf ed ff ff bf f7 ff |................|
bfffffd0  ff bf fb ff ff bf 00 00-00 00 61 72 67 73 2d 6d |..........args-m|
bfffffe0  75 6c 74 69 70 6c 65 00-73 6f 6d 65 00 61 72 67 |ultiple.some.arg|
bffffff0  75 6d 65 6e 74 73 00 66-6f 72 00 79 6f 75 21 00 |uments.for.you!.|
(args) begin
(args) argc = 5
(args) argv[0] = 'args-multiple'
(args) argv[1] = 'some'
(args) argv[2] = 'arguments'
(args) argv[3] = 'for'
(args) argv[4] = 'you!'
(args) argv[5] = null
(args) end
args-multiple : exit(0)
Execution of 'args-multiple some arguments for you!' complete.
Timer: 360 ticks
Thread: 40 idle ticks, 222 kernel ticks, 101 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1526 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/args-multiple.ck tests/userprog/args-multiple tests/userprog/args-multiple.result
FAIL tests/userprog/args-multiple
Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 5
  (args) argv[0] = 'args-multiple'
  (args) argv[1] = 'some'
  (args) argv[2] = 'arguments'
  (args) argv[3] = 'for'
  (args) argv[4] = 'you!'
  (args) argv[5] = null
  (args) end
  args-multiple: exit(0)
Differences in `diff -u' format:
+ bfffffb0                    00 00-00 00 05 00 00 00 c2 ff |      ..........|
+ bfffffc0  ff bf da ff ff bf e8 ff-ff bf ed ff ff bf f7 ff |................|
+ bfffffd0  ff bf fb ff ff bf 00 00-00 00 61 72 67 73 2d 6d |..........args-m|
+ bfffffe0  75 6c 74 69 70 6c 65 00-73 6f 6d 65 00 61 72 67 |ultiple.some.arg|
+ bffffff0  75 6d 65 6e 74 73 00 66-6f 72 00 79 6f 75 21 00 |uments.for.you!.|
  (args) begin
  (args) argc = 5
  (args) argv[0] = 'args-multiple'
  (args) argv[1] = 'some'
  (args) argv[2] = 'arguments'
  (args) argv[3] = 'for'
  (args) argv[4] = 'you!'
  (args) argv[5] = null
  (args) end
- args-multiple: exit(0)
+ args-multiple : exit(0)
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-many
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/args-many -a args-many -- -q    -f run 'args-many a b c d e f g h i j k l m n o p q r s t u v' < /dev/null 2> tests/userprog/args-many.errors |tee tests/userprog/args-many.output
Copying tests/userprog/args-many to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'args-many a b c d e f g h i j k l m n o p q r s t u v'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-many' into the file system...
Erasing ustar archive...
Executing 'args-many a b c d e f g h i j k l m n o p q r s t u v':
bfffff50                                            00 00 |              ..|
bfffff60  00 00 17 00 00 00 6a ff-ff bf ca ff ff bf d4 ff |......j.........|
bfffff70  ff bf d6 ff ff bf d8 ff-ff bf da ff ff bf dc ff |................|
bfffff80  ff bf de ff ff bf e0 ff-ff bf e2 ff ff bf e4 ff |................|
bfffff90  ff bf e6 ff ff bf e8 ff-ff bf ea ff ff bf ec ff |................|
bfffffa0  ff bf ee ff ff bf f0 ff-ff bf f2 ff ff bf f4 ff |................|
bfffffb0  ff bf f6 ff ff bf f8 ff-ff bf fa ff ff bf fc ff |................|
bfffffc0  ff bf fe ff ff bf 00 00-00 00 61 72 67 73 2d 6d |..........args-m|
bfffffd0  61 6e 79 00 61 00 62 00-63 00 64 00 65 00 66 00 |any.a.b.c.d.e.f.|
bfffffe0  67 00 68 00 69 00 6a 00-6b 00 6c 00 6d 00 6e 00 |g.h.i.j.k.l.m.n.|
bffffff0  6f 00 70 00 71 00 72 00-73 00 74 00 75 00 76 00 |o.p.q.r.s.t.u.v.|
(args) begin
(args) argc = 23
(args) argv[0] = 'args-many'
(args) argv[1] = 'a'
(args) argv[2] = 'b'
(args) argv[3] = 'c'
(args) argv[4] = 'd'
(args) argv[5] = 'e'
(args) argv[6] = 'f'
(args) argv[7] = 'g'
(args) argv[8] = 'h'
(args) argv[9] = 'i'
(args) argv[10] = 'j'
(args) argv[11] = 'k'
(args) argv[12] = 'l'
(args) argv[13] = 'm'
(args) argv[14] = 'n'
(args) argv[15] = 'o'
(args) argv[16] = 'p'
(args) argv[17] = 'q'
(args) argv[18] = 'r'
(args) argv[19] = 's'
(args) argv[20] = 't'
(args) argv[21] = 'u'
(args) argv[22] = 'v'
(args) argv[23] = null
(args) end
args-many : exit(0)
Execution of 'args-many a b c d e f g h i j k l m n o p q r s t u v' complete.
Timer: 482 ticks
Thread: 41 idle ticks, 230 kernel ticks, 214 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 2401 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/args-many.ck tests/userprog/args-many tests/userprog/args-many.result
FAIL tests/userprog/args-many
Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 23
  (args) argv[0] = 'args-many'
  (args) argv[1] = 'a'
  (args) argv[2] = 'b'
  (args) argv[3] = 'c'
  (args) argv[4] = 'd'
  (args) argv[5] = 'e'
  (args) argv[6] = 'f'
  (args) argv[7] = 'g'
  (args) argv[8] = 'h'
  (args) argv[9] = 'i'
  (args) argv[10] = 'j'
  (args) argv[11] = 'k'
  (args) argv[12] = 'l'
  (args) argv[13] = 'm'
  (args) argv[14] = 'n'
  (args) argv[15] = 'o'
  (args) argv[16] = 'p'
  (args) argv[17] = 'q'
  (args) argv[18] = 'r'
  (args) argv[19] = 's'
  (args) argv[20] = 't'
  (args) argv[21] = 'u'
  (args) argv[22] = 'v'
  (args) argv[23] = null
  (args) end
  args-many: exit(0)
Differences in `diff -u' format:
+ bfffff50                                            00 00 |              ..|
+ bfffff60  00 00 17 00 00 00 6a ff-ff bf ca ff ff bf d4 ff |......j.........|
+ bfffff70  ff bf d6 ff ff bf d8 ff-ff bf da ff ff bf dc ff |................|
+ bfffff80  ff bf de ff ff bf e0 ff-ff bf e2 ff ff bf e4 ff |................|
+ bfffff90  ff bf e6 ff ff bf e8 ff-ff bf ea ff ff bf ec ff |................|
+ bfffffa0  ff bf ee ff ff bf f0 ff-ff bf f2 ff ff bf f4 ff |................|
+ bfffffb0  ff bf f6 ff ff bf f8 ff-ff bf fa ff ff bf fc ff |................|
+ bfffffc0  ff bf fe ff ff bf 00 00-00 00 61 72 67 73 2d 6d |..........args-m|
+ bfffffd0  61 6e 79 00 61 00 62 00-63 00 64 00 65 00 66 00 |any.a.b.c.d.e.f.|
+ bfffffe0  67 00 68 00 69 00 6a 00-6b 00 6c 00 6d 00 6e 00 |g.h.i.j.k.l.m.n.|
+ bffffff0  6f 00 70 00 71 00 72 00-73 00 74 00 75 00 76 00 |o.p.q.r.s.t.u.v.|
  (args) begin
  (args) argc = 23
  (args) argv[0] = 'args-many'
  (args) argv[1] = 'a'
  (args) argv[2] = 'b'
  (args) argv[3] = 'c'
  (args) argv[4] = 'd'
  (args) argv[5] = 'e'
  (args) argv[6] = 'f'
  (args) argv[7] = 'g'
  (args) argv[8] = 'h'
  (args) argv[9] = 'i'
  (args) argv[10] = 'j'
  (args) argv[11] = 'k'
  (args) argv[12] = 'l'
  (args) argv[13] = 'm'
  (args) argv[14] = 'n'
  (args) argv[15] = 'o'
  (args) argv[16] = 'p'
  (args) argv[17] = 'q'
  (args) argv[18] = 'r'
  (args) argv[19] = 's'
  (args) argv[20] = 't'
  (args) argv[21] = 'u'
  (args) argv[22] = 'v'
  (args) argv[23] = null
  (args) end
- args-many: exit(0)
+ args-many : exit(0)
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-dbl-space
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/args-dbl-space -a args-dbl-space -- -q    -f run 'args-dbl-space two  spaces!' < /dev/null 2> tests/userprog/args-dbl-space.errors |tee tests/userprog/args-dbl-space.output
Copying tests/userprog/args-dbl-space to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'args-dbl-space two  spaces!'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-dbl-space' into the file system...
Erasing ustar archive...
Executing 'args-dbl-space two  spaces!':
bfffffc0                             00 00 00 00 03 00 00 |         .......|
bfffffd0  00 d5 ff ff bf e5 ff ff-bf f4 ff ff bf f8 ff ff |................|
bfffffe0  bf 00 00 00 00 61 72 67-73 2d 64 62 6c 2d 73 70 |.....args-dbl-sp|
bffffff0  61 63 65 00 74 77 6f 00-73 70 61 63 65 73 21 00 |ace.two.spaces!.|
(args) begin
(args) argc = 3
(args) argv[0] = 'args-dbl-space'
(args) argv[1] = 'two'
(args) argv[2] = 'spaces!'
(args) argv[3] = null
(args) end
args-dbl-space : exit(0)
Execution of 'args-dbl-space two  spaces!' complete.
Timer: 341 ticks
Thread: 41 idle ticks, 220 kernel ticks, 83 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1371 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/args-dbl-space.ck tests/userprog/args-dbl-space tests/userprog/args-dbl-space.result
FAIL tests/userprog/args-dbl-space
Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 3
  (args) argv[0] = 'args-dbl-space'
  (args) argv[1] = 'two'
  (args) argv[2] = 'spaces!'
  (args) argv[3] = null
  (args) end
  args-dbl-space: exit(0)
Differences in `diff -u' format:
+ bfffffc0                             00 00 00 00 03 00 00 |         .......|
+ bfffffd0  00 d5 ff ff bf e5 ff ff-bf f4 ff ff bf f8 ff ff |................|
+ bfffffe0  bf 00 00 00 00 61 72 67-73 2d 64 62 6c 2d 73 70 |.....args-dbl-sp|
+ bffffff0  61 63 65 00 74 77 6f 00-73 70 61 63 65 73 21 00 |ace.two.spaces!.|
  (args) begin
  (args) argc = 3
  (args) argv[0] = 'args-dbl-space'
  (args) argv[1] = 'two'
  (args) argv[2] = 'spaces!'
  (args) argv[3] = null
  (args) end
- args-dbl-space: exit(0)
+ args-dbl-space : exit(0)
gcc -c ../../tests/userprog/sc-bad-sp.c -o tests/userprog/sc-bad-sp.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-bad-sp.d
gcc -c ../../tests/main.c -o tests/main.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/main.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-bad-sp.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-bad-sp
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/sc-bad-sp -a sc-bad-sp -- -q    -f run sc-bad-sp < /dev/null 2> tests/userprog/sc-bad-sp.errors |tee tests/userprog/sc-bad-sp.output
Copying tests/userprog/sc-bad-sp to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-bad-sp
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-sp' into the file system...
Erasing ustar archive...
Executing 'sc-bad-sp':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 73 63-2d 62 61 64 2d 73 70 00 |......sc-bad-sp.|
(sc-bad-sp) begin
Invalid Memory Access : 0x40480a3
sc-bad-sp : exit(-1)
Execution of 'sc-bad-sp' complete.
Timer: 301 ticks
Thread: 41 idle ticks, 212 kernel ticks, 50 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1058 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/sc-bad-sp.ck tests/userprog/sc-bad-sp tests/userprog/sc-bad-sp.result
FAIL tests/userprog/sc-bad-sp
Test output failed to match any acceptable form.

Acceptable output:
  (sc-bad-sp) begin
  sc-bad-sp: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 73 63-2d 62 61 64 2d 73 70 00 |......sc-bad-sp.|
  (sc-bad-sp) begin
- sc-bad-sp: exit(-1)
+ Invalid Memory Access : 0x40480a3
+ sc-bad-sp : exit(-1)
gcc -c ../../tests/userprog/sc-bad-arg.c -o tests/userprog/sc-bad-arg.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-bad-arg.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-bad-arg.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-bad-arg
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/sc-bad-arg -a sc-bad-arg -- -q    -f run sc-bad-arg < /dev/null 2> tests/userprog/sc-bad-arg.errors |tee tests/userprog/sc-bad-arg.output
Copying tests/userprog/sc-bad-arg to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-bad-arg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-arg' into the file system...
Erasing ustar archive...
Executing 'sc-bad-arg':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 73 63 2d-62 61 64 2d 61 72 67 00 |.....sc-bad-arg.|
(sc-bad-arg) begin
Invalid Memory Access : 0xc0000000
sc-bad-arg : exit(-1)
Execution of 'sc-bad-arg' complete.
Timer: 302 ticks
Thread: 43 idle ticks, 212 kernel ticks, 50 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1065 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/sc-bad-arg.ck tests/userprog/sc-bad-arg tests/userprog/sc-bad-arg.result
FAIL tests/userprog/sc-bad-arg
Test output failed to match any acceptable form.

Acceptable output:
  (sc-bad-arg) begin
  sc-bad-arg: exit(-1)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 73 63 2d-62 61 64 2d 61 72 67 00 |.....sc-bad-arg.|
  (sc-bad-arg) begin
- sc-bad-arg: exit(-1)
+ Invalid Memory Access : 0xc0000000
+ sc-bad-arg : exit(-1)
gcc -c ../../tests/userprog/sc-boundary.c -o tests/userprog/sc-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-boundary.d
gcc -c ../../tests/userprog/boundary.c -o tests/userprog/boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/boundary.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-boundary
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/sc-boundary -a sc-boundary -- -q    -f run sc-boundary < /dev/null 2> tests/userprog/sc-boundary.errors |tee tests/userprog/sc-boundary.output
Copying tests/userprog/sc-boundary to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-boundary' into the file system...
Erasing ustar archive...
Executing 'sc-boundary':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 73 63 2d 62-6f 75 6e 64 61 72 79 00 |....sc-boundary.|
(sc-boundary) begin
sc-boundary : exit(42)
Execution of 'sc-boundary' complete.
Timer: 307 ticks
Thread: 41 idle ticks, 219 kernel ticks, 50 user ticks
hda2 (filesys): 65 reads, 192 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1036 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/sc-boundary.ck tests/userprog/sc-boundary tests/userprog/sc-boundary.result
FAIL tests/userprog/sc-boundary
Test output failed to match any acceptable form.

Acceptable output:
  (sc-boundary) begin
  sc-boundary: exit(42)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 73 63 2d 62-6f 75 6e 64 61 72 79 00 |....sc-boundary.|
  (sc-boundary) begin
- sc-boundary: exit(42)
+ sc-boundary : exit(42)
gcc -c ../../tests/userprog/sc-boundary-2.c -o tests/userprog/sc-boundary-2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-boundary-2.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-boundary-2.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-boundary-2
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/sc-boundary-2 -a sc-boundary-2 -- -q    -f run sc-boundary-2 < /dev/null 2> tests/userprog/sc-boundary-2.errors |tee tests/userprog/sc-boundary-2.output
Copying tests/userprog/sc-boundary-2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-boundary-2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-boundary-2' into the file system...
Erasing ustar archive...
Executing 'sc-boundary-2':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 73 63 2d 62 6f 75-6e 64 61 72 79 2d 32 00 |..sc-boundary-2.|
(sc-boundary-2) begin
sc-boundary-2 : exit(67)
Execution of 'sc-boundary-2' complete.
Timer: 317 ticks
Thread: 43 idle ticks, 218 kernel ticks, 59 user ticks
hda2 (filesys): 65 reads, 192 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1125 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/sc-boundary-2.ck tests/userprog/sc-boundary-2 tests/userprog/sc-boundary-2.result
FAIL tests/userprog/sc-boundary-2
Test output failed to match any acceptable form.

Acceptable output:
  (sc-boundary-2) begin
  sc-boundary-2: exit(67)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 73 63 2d 62 6f 75-6e 64 61 72 79 2d 32 00 |..sc-boundary-2.|
  (sc-boundary-2) begin
- sc-boundary-2: exit(67)
+ sc-boundary-2 : exit(67)
gcc -c ../../tests/userprog/halt.c -o tests/userprog/halt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/halt.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/halt.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/halt
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/halt -a halt -- -q    -f run halt < /dev/null 2> tests/userprog/halt.errors |tee tests/userprog/halt.output
Copying tests/userprog/halt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run halt
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'halt' into the file system...
Erasing ustar archive...
Executing 'halt':
bfffffe0                       00-00 00 00 01 00 00 00 f3 |       .........|
bffffff0  ff ff bf fb ff ff bf 00-00 00 00 68 61 6c 74 00 |...........halt.|
(halt) begin
Timer: 267 ticks
Thread: 39 idle ticks, 186 kernel ticks, 45 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 948 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/halt.ck tests/userprog/halt tests/userprog/halt.result
pass tests/userprog/halt
gcc -c ../../tests/userprog/exit.c -o tests/userprog/exit.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exit.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exit.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exit
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/exit -a exit -- -q    -f run exit < /dev/null 2> tests/userprog/exit.errors |tee tests/userprog/exit.output
Copying tests/userprog/exit to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exit
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exit' into the file system...
Erasing ustar archive...
Executing 'exit':
bfffffe0                       00-00 00 00 01 00 00 00 f3 |       .........|
bffffff0  ff ff bf fb ff ff bf 00-00 00 00 65 78 69 74 00 |...........exit.|
(exit) begin
exit : exit(57)
Execution of 'exit' complete.
Timer: 294 ticks
Thread: 39 idle ticks, 213 kernel ticks, 45 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 994 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/exit.ck tests/userprog/exit tests/userprog/exit.result
FAIL tests/userprog/exit
Test output failed to match any acceptable form.

Acceptable output:
  (exit) begin
  exit: exit(57)
Differences in `diff -u' format:
+ bfffffe0                       00-00 00 00 01 00 00 00 f3 |       .........|
+ bffffff0  ff ff bf fb ff ff bf 00-00 00 00 65 78 69 74 00 |...........exit.|
  (exit) begin
- exit: exit(57)
+ exit : exit(57)
gcc -c ../../tests/userprog/create-normal.c -o tests/userprog/create-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-normal.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-normal
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/create-normal -a create-normal -- -q    -f run create-normal < /dev/null 2> tests/userprog/create-normal.errors |tee tests/userprog/create-normal.output
Copying tests/userprog/create-normal to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-normal' into the file system...
Erasing ustar archive...
Executing 'create-normal':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 63 72 65 61 74 65-2d 6e 6f 72 6d 61 6c 00 |..create-normal.|
(create-normal) begin
(create-normal) create quux.dat
(create-normal) end
create-normal : exit(0)
Execution of 'create-normal' complete.
Timer: 326 ticks
Thread: 39 idle ticks, 216 kernel ticks, 74 user ticks
hda2 (filesys): 83 reads, 190 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1176 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/create-normal.ck tests/userprog/create-normal tests/userprog/create-normal.result
FAIL tests/userprog/create-normal
Test output failed to match any acceptable form.

Acceptable output:
  (create-normal) begin
  (create-normal) create quux.dat
  (create-normal) end
  create-normal: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 63 72 65 61 74 65-2d 6e 6f 72 6d 61 6c 00 |..create-normal.|
  (create-normal) begin
  (create-normal) create quux.dat
  (create-normal) end
- create-normal: exit(0)
+ create-normal : exit(0)
gcc -c ../../tests/userprog/create-empty.c -o tests/userprog/create-empty.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-empty.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-empty.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-empty
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/create-empty -a create-empty -- -q    -f run create-empty < /dev/null 2> tests/userprog/create-empty.errors |tee tests/userprog/create-empty.output
Copying tests/userprog/create-empty to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-empty
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-empty' into the file system...
Erasing ustar archive...
Executing 'create-empty':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 72 65 61 74-65 2d 65 6d 70 74 79 00 |...create-empty.|
(create-empty) begin
(create-empty) create(""): 0
(create-empty) end
create-empty : exit(0)
Execution of 'create-empty' complete.
Timer: 316 ticks
Thread: 42 idle ticks, 213 kernel ticks, 64 user ticks
hda2 (filesys): 64 reads, 190 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1166 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/create-empty.ck tests/userprog/create-empty tests/userprog/create-empty.result
FAIL tests/userprog/create-empty
Test output failed to match any acceptable form.

Acceptable output:
  (create-empty) begin
  create-empty: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 72 65 61 74-65 2d 65 6d 70 74 79 00 |...create-empty.|
  (create-empty) begin
- create-empty: exit(-1)
+ (create-empty) create(""): 0
+ (create-empty) end
+ create-empty : exit(0)
Acceptable output:
  (create-empty) begin
  (create-empty) create(""): 0
  (create-empty) end
  create-empty: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 72 65 61 74-65 2d 65 6d 70 74 79 00 |...create-empty.|
  (create-empty) begin
  (create-empty) create(""): 0
  (create-empty) end
- create-empty: exit(0)
+ create-empty : exit(0)
gcc -c ../../tests/userprog/create-null.c -o tests/userprog/create-null.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-null.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-null.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-null
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/create-null -a create-null -- -q    -f run create-null < /dev/null 2> tests/userprog/create-null.errors |tee tests/userprog/create-null.output
Copying tests/userprog/create-null to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-null
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-null' into the file system...
Erasing ustar archive...
Executing 'create-null':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 63 72 65 61-74 65 2d 6e 75 6c 6c 00 |....create-null.|
(create-null) begin
Invalid Memory Access : 0
create-null : exit(-1)
Execution of 'create-null' complete.
Timer: 301 ticks
Thread: 42 idle ticks, 213 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1062 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/create-null.ck tests/userprog/create-null tests/userprog/create-null.result
FAIL tests/userprog/create-null
Test output failed to match any acceptable form.

Acceptable output:
  (create-null) begin
  create-null: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 72 65 61-74 65 2d 6e 75 6c 6c 00 |....create-null.|
  (create-null) begin
- create-null: exit(-1)
+ Invalid Memory Access : 0
+ create-null : exit(-1)
gcc -c ../../tests/userprog/create-bad-ptr.c -o tests/userprog/create-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-bad-ptr.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-bad-ptr
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/create-bad-ptr -a create-bad-ptr -- -q    -f run create-bad-ptr < /dev/null 2> tests/userprog/create-bad-ptr.errors |tee tests/userprog/create-bad-ptr.output
Copying tests/userprog/create-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'create-bad-ptr':
bfffffd0                                         00 00 00 |             ...|
bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
bffffff0  00 63 72 65 61 74 65 2d-62 61 64 2d 70 74 72 00 |.create-bad-ptr.|
(create-bad-ptr) begin
PAGE FAULT!!!
create-bad-ptr : exit(-1)
Execution of 'create-bad-ptr' complete.
Timer: 312 ticks
Thread: 40 idle ticks, 213 kernel ticks, 61 user ticks
hda2 (filesys): 64 reads, 189 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1145 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/create-bad-ptr.ck tests/userprog/create-bad-ptr tests/userprog/create-bad-ptr.result
FAIL tests/userprog/create-bad-ptr
Test output failed to match any acceptable form.

Acceptable output:
  (create-bad-ptr) begin
  create-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 63 72 65 61 74 65 2d-62 61 64 2d 70 74 72 00 |.create-bad-ptr.|
  (create-bad-ptr) begin
- create-bad-ptr: exit(-1)
+ PAGE FAULT!!!
+ create-bad-ptr : exit(-1)
gcc -c ../../tests/userprog/create-long.c -o tests/userprog/create-long.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-long.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-long.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-long
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/create-long -a create-long -- -q    -f run create-long < /dev/null 2> tests/userprog/create-long.errors |tee tests/userprog/create-long.output
Copying tests/userprog/create-long to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-long
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-long' into the file system...
Erasing ustar archive...
Executing 'create-long':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 63 72 65 61-74 65 2d 6c 6f 6e 67 00 |....create-long.|
(create-long) begin
(create-long) create("x..."): 0
(create-long) end
create-long : exit(0)
Execution of 'create-long' complete.
Timer: 307 ticks
Thread: 42 idle ticks, 213 kernel ticks, 54 user ticks
hda2 (filesys): 64 reads, 192 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1085 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/create-long.ck tests/userprog/create-long tests/userprog/create-long.result
FAIL tests/userprog/create-long
Test output failed to match any acceptable form.

Acceptable output:
  (create-long) begin
  (create-long) create("x..."): 0
  (create-long) end
  create-long: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 72 65 61-74 65 2d 6c 6f 6e 67 00 |....create-long.|
  (create-long) begin
  (create-long) create("x..."): 0
  (create-long) end
- create-long: exit(0)
+ create-long : exit(0)
gcc -c ../../tests/userprog/create-exists.c -o tests/userprog/create-exists.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-exists.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-exists.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-exists
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/create-exists -a create-exists -- -q    -f run create-exists < /dev/null 2> tests/userprog/create-exists.errors |tee tests/userprog/create-exists.output
Copying tests/userprog/create-exists to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-exists
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-exists' into the file system...
Erasing ustar archive...
Executing 'create-exists':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 63 72 65 61 74 65-2d 65 78 69 73 74 73 00 |..create-exists.|
(create-exists) begin
(create-exists) create quux.dat
(create-exists) create warble.dat
(create-exists) try to re-create quux.dat
(create-exists) create baffle.dat
(create-exists) try to re-create quux.dat
(create-exists) end
create-exists : exit(0)
Execution of 'create-exists' complete.
Timer: 377 ticks
Thread: 42 idle ticks, 214 kernel ticks, 124 user ticks
hda2 (filesys): 135 reads, 208 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1330 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/create-exists.ck tests/userprog/create-exists tests/userprog/create-exists.result
FAIL tests/userprog/create-exists
Test output failed to match any acceptable form.

Acceptable output:
  (create-exists) begin
  (create-exists) create quux.dat
  (create-exists) create warble.dat
  (create-exists) try to re-create quux.dat
  (create-exists) create baffle.dat
  (create-exists) try to re-create quux.dat
  (create-exists) end
  create-exists: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 63 72 65 61 74 65-2d 65 78 69 73 74 73 00 |..create-exists.|
  (create-exists) begin
  (create-exists) create quux.dat
  (create-exists) create warble.dat
  (create-exists) try to re-create quux.dat
  (create-exists) create baffle.dat
  (create-exists) try to re-create quux.dat
  (create-exists) end
- create-exists: exit(0)
+ create-exists : exit(0)
gcc -c ../../tests/userprog/create-bound.c -o tests/userprog/create-bound.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-bound.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-bound.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-bound
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/create-bound -a create-bound -- -q    -f run create-bound < /dev/null 2> tests/userprog/create-bound.errors |tee tests/userprog/create-bound.output
Copying tests/userprog/create-bound to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-bound
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bound' into the file system...
Erasing ustar archive...
Executing 'create-bound':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 72 65 61 74-65 2d 62 6f 75 6e 64 00 |...create-bound.|
(create-bound) begin
(create-bound) create("quux.dat"): 1
(create-bound) end
create-bound : exit(0)
Execution of 'create-bound' complete.
Timer: 336 ticks
Thread: 43 idle ticks, 218 kernel ticks, 77 user ticks
hda2 (filesys): 85 reads, 196 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1174 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/create-bound.ck tests/userprog/create-bound tests/userprog/create-bound.result
FAIL tests/userprog/create-bound
Test output failed to match any acceptable form.

Acceptable output:
  (create-bound) begin
  (create-bound) create("quux.dat"): 1
  (create-bound) end
  create-bound: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 72 65 61 74-65 2d 62 6f 75 6e 64 00 |...create-bound.|
  (create-bound) begin
  (create-bound) create("quux.dat"): 1
  (create-bound) end
- create-bound: exit(0)
+ create-bound : exit(0)
gcc -c ../../tests/userprog/open-normal.c -o tests/userprog/open-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-normal.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-normal
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/open-normal -a open-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run open-normal < /dev/null 2> tests/userprog/open-normal.errors |tee tests/userprog/open-normal.output
Copying tests/userprog/open-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-normal':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 6f 70 65 6e-2d 6e 6f 72 6d 61 6c 00 |....open-normal.|
(open-normal) begin
(open-normal) end
open-normal : exit(0)
Execution of 'open-normal' complete.
Timer: 329 ticks
Thread: 43 idle ticks, 235 kernel ticks, 53 user ticks
hda2 (filesys): 92 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1098 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/open-normal.ck tests/userprog/open-normal tests/userprog/open-normal.result
FAIL tests/userprog/open-normal
Test output failed to match any acceptable form.

Acceptable output:
  (open-normal) begin
  (open-normal) end
  open-normal: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 6f 70 65 6e-2d 6e 6f 72 6d 61 6c 00 |....open-normal.|
  (open-normal) begin
  (open-normal) end
- open-normal: exit(0)
+ open-normal : exit(0)
gcc -c ../../tests/userprog/open-missing.c -o tests/userprog/open-missing.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-missing.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-missing.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-missing
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/open-missing -a open-missing -- -q    -f run open-missing < /dev/null 2> tests/userprog/open-missing.errors |tee tests/userprog/open-missing.output
Copying tests/userprog/open-missing to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-missing
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-missing' into the file system...
Erasing ustar archive...
Executing 'open-missing':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 6f 70 65 6e 2d-6d 69 73 73 69 6e 67 00 |...open-missing.|
(open-missing) begin
(open-missing) end
open-missing : exit(0)
Execution of 'open-missing' complete.
Timer: 319 ticks
Thread: 42 idle ticks, 214 kernel ticks, 66 user ticks
hda2 (filesys): 80 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1137 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/open-missing.ck tests/userprog/open-missing tests/userprog/open-missing.result
FAIL tests/userprog/open-missing
Test output failed to match any acceptable form.

Acceptable output:
  (open-missing) begin
  (open-missing) end
  open-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 6f 70 65 6e 2d-6d 69 73 73 69 6e 67 00 |...open-missing.|
  (open-missing) begin
  (open-missing) end
- open-missing: exit(0)
+ open-missing : exit(0)
gcc -c ../../tests/userprog/open-boundary.c -o tests/userprog/open-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-boundary.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-boundary
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/open-boundary -a open-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run open-boundary < /dev/null 2> tests/userprog/open-boundary.errors |tee tests/userprog/open-boundary.output
Copying tests/userprog/open-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 96 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-boundary':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 6f 70 65 6e 2d 62-6f 75 6e 64 61 72 79 00 |..open-boundary.|
(open-boundary) begin
(open-boundary) open "sample.txt"
(open-boundary) end
open-boundary : exit(0)
Execution of 'open-boundary' complete.
Timer: 352 ticks
Thread: 47 idle ticks, 238 kernel ticks, 69 user ticks
hda2 (filesys): 94 reads, 198 writes
hda3 (scratch): 95 reads, 2 writes
Console: 1223 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/open-boundary.ck tests/userprog/open-boundary tests/userprog/open-boundary.result
FAIL tests/userprog/open-boundary
Test output failed to match any acceptable form.

Acceptable output:
  (open-boundary) begin
  (open-boundary) open "sample.txt"
  (open-boundary) end
  open-boundary: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 6f 70 65 6e 2d 62-6f 75 6e 64 61 72 79 00 |..open-boundary.|
  (open-boundary) begin
  (open-boundary) open "sample.txt"
  (open-boundary) end
- open-boundary: exit(0)
+ open-boundary : exit(0)
gcc -c ../../tests/userprog/open-empty.c -o tests/userprog/open-empty.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-empty.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-empty.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-empty
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/open-empty -a open-empty -- -q    -f run open-empty < /dev/null 2> tests/userprog/open-empty.errors |tee tests/userprog/open-empty.output
Copying tests/userprog/open-empty to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-empty
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-empty' into the file system...
Erasing ustar archive...
Executing 'open-empty':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 6f 70 65-6e 2d 65 6d 70 74 79 00 |.....open-empty.|
(open-empty) begin
(open-empty) end
open-empty : exit(0)
Execution of 'open-empty' complete.
Timer: 309 ticks
Thread: 43 idle ticks, 211 kernel ticks, 57 user ticks
hda2 (filesys): 80 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1046 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/open-empty.ck tests/userprog/open-empty tests/userprog/open-empty.result
FAIL tests/userprog/open-empty
Test output failed to match any acceptable form.

Acceptable output:
  (open-empty) begin
  (open-empty) end
  open-empty: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 6f 70 65-6e 2d 65 6d 70 74 79 00 |.....open-empty.|
  (open-empty) begin
  (open-empty) end
- open-empty: exit(0)
+ open-empty : exit(0)
gcc -c ../../tests/userprog/open-null.c -o tests/userprog/open-null.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-null.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-null.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-null
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/open-null -a open-null -- -q    -f run open-null < /dev/null 2> tests/userprog/open-null.errors |tee tests/userprog/open-null.output
Copying tests/userprog/open-null to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-null
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-null' into the file system...
Erasing ustar archive...
Executing 'open-null':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 6f 70-65 6e 2d 6e 75 6c 6c 00 |......open-null.|
(open-null) begin
Invalid Memory Access : 0
open-null : exit(-1)
Execution of 'open-null' complete.
Timer: 300 ticks
Thread: 41 idle ticks, 213 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1050 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/open-null.ck tests/userprog/open-null tests/userprog/open-null.result
FAIL tests/userprog/open-null
Test output failed to match any acceptable form.

Acceptable output:
  (open-null) begin
  (open-null) end
  open-null: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 6f 70-65 6e 2d 6e 75 6c 6c 00 |......open-null.|
  (open-null) begin
- (open-null) end
- open-null: exit(0)
+ Invalid Memory Access : 0
+ open-null : exit(-1)
Acceptable output:
  (open-null) begin
  open-null: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 6f 70-65 6e 2d 6e 75 6c 6c 00 |......open-null.|
  (open-null) begin
- open-null: exit(-1)
+ Invalid Memory Access : 0
+ open-null : exit(-1)
gcc -c ../../tests/userprog/open-bad-ptr.c -o tests/userprog/open-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-bad-ptr.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-bad-ptr
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/open-bad-ptr -a open-bad-ptr -- -q    -f run open-bad-ptr < /dev/null 2> tests/userprog/open-bad-ptr.errors |tee tests/userprog/open-bad-ptr.output
Copying tests/userprog/open-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'open-bad-ptr':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 6f 70 65 6e 2d-62 61 64 2d 70 74 72 00 |...open-bad-ptr.|
(open-bad-ptr) begin
PAGE FAULT!!!
open-bad-ptr : exit(-1)
Execution of 'open-bad-ptr' complete.
Timer: 309 ticks
Thread: 42 idle ticks, 211 kernel ticks, 58 user ticks
hda2 (filesys): 65 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1133 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/open-bad-ptr.ck tests/userprog/open-bad-ptr tests/userprog/open-bad-ptr.result
FAIL tests/userprog/open-bad-ptr
Test output failed to match any acceptable form.

Acceptable output:
  (open-bad-ptr) begin
  (open-bad-ptr) end
  open-bad-ptr: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 6f 70 65 6e 2d-62 61 64 2d 70 74 72 00 |...open-bad-ptr.|
  (open-bad-ptr) begin
- (open-bad-ptr) end
- open-bad-ptr: exit(0)
+ PAGE FAULT!!!
+ open-bad-ptr : exit(-1)
Acceptable output:
  (open-bad-ptr) begin
  open-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 6f 70 65 6e 2d-62 61 64 2d 70 74 72 00 |...open-bad-ptr.|
  (open-bad-ptr) begin
- open-bad-ptr: exit(-1)
+ PAGE FAULT!!!
+ open-bad-ptr : exit(-1)
gcc -c ../../tests/userprog/open-twice.c -o tests/userprog/open-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-twice.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-twice
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/open-twice -a open-twice -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run open-twice < /dev/null 2> tests/userprog/open-twice.errors |tee tests/userprog/open-twice.output
Copying tests/userprog/open-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-twice':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 6f 70 65-6e 2d 74 77 69 63 65 00 |.....open-twice.|
(open-twice) begin
(open-twice) open "sample.txt" once
(open-twice) open "sample.txt" again
(open-twice) end
open-twice : exit(0)
Execution of 'open-twice' complete.
Timer: 342 ticks
Thread: 44 idle ticks, 234 kernel ticks, 67 user ticks
hda2 (filesys): 103 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1165 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/open-twice.ck tests/userprog/open-twice tests/userprog/open-twice.result
FAIL tests/userprog/open-twice
Test output failed to match any acceptable form.

Acceptable output:
  (open-twice) begin
  (open-twice) open "sample.txt" once
  (open-twice) open "sample.txt" again
  (open-twice) end
  open-twice: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 6f 70 65-6e 2d 74 77 69 63 65 00 |.....open-twice.|
  (open-twice) begin
  (open-twice) open "sample.txt" once
  (open-twice) open "sample.txt" again
  (open-twice) end
- open-twice: exit(0)
+ open-twice : exit(0)
gcc -c ../../tests/userprog/close-normal.c -o tests/userprog/close-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-normal.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-normal
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/close-normal -a close-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run close-normal < /dev/null 2> tests/userprog/close-normal.errors |tee tests/userprog/close-normal.output
Copying tests/userprog/close-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-normal':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 6c 6f 73 65-2d 6e 6f 72 6d 61 6c 00 |...close-normal.|
(close-normal) begin
(close-normal) open "sample.txt"
(close-normal) close "sample.txt"
(close-normal) end
close-normal : exit(0)
Execution of 'close-normal' complete.
Timer: 346 ticks
Thread: 45 idle ticks, 234 kernel ticks, 70 user ticks
hda2 (filesys): 92 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1249 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/close-normal.ck tests/userprog/close-normal tests/userprog/close-normal.result
FAIL tests/userprog/close-normal
Test output failed to match any acceptable form.

Acceptable output:
  (close-normal) begin
  (close-normal) open "sample.txt"
  (close-normal) close "sample.txt"
  (close-normal) end
  close-normal: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 6e 6f 72 6d 61 6c 00 |...close-normal.|
  (close-normal) begin
  (close-normal) open "sample.txt"
  (close-normal) close "sample.txt"
  (close-normal) end
- close-normal: exit(0)
+ close-normal : exit(0)
gcc -c ../../tests/userprog/close-twice.c -o tests/userprog/close-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-twice.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-twice
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/close-twice -a close-twice -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run close-twice < /dev/null 2> tests/userprog/close-twice.errors |tee tests/userprog/close-twice.output
Copying tests/userprog/close-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-twice':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 63 6c 6f 73-65 2d 74 77 69 63 65 00 |....close-twice.|
(close-twice) begin
(close-twice) open "sample.txt"
(close-twice) close "sample.txt"
(close-twice) close "sample.txt" again
(close-twice) end
close-twice : exit(0)
Execution of 'close-twice' complete.
Timer: 341 ticks
Thread: 46 idle ticks, 233 kernel ticks, 65 user ticks
hda2 (filesys): 93 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1202 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/close-twice.ck tests/userprog/close-twice tests/userprog/close-twice.result
FAIL tests/userprog/close-twice
Test output failed to match any acceptable form.

Acceptable output:
  (close-twice) begin
  (close-twice) open "sample.txt"
  (close-twice) close "sample.txt"
  (close-twice) close "sample.txt" again
  (close-twice) end
  close-twice: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 6c 6f 73-65 2d 74 77 69 63 65 00 |....close-twice.|
  (close-twice) begin
  (close-twice) open "sample.txt"
  (close-twice) close "sample.txt"
  (close-twice) close "sample.txt" again
  (close-twice) end
- close-twice: exit(0)
+ close-twice : exit(0)
Acceptable output:
  (close-twice) begin
  (close-twice) open "sample.txt"
  (close-twice) close "sample.txt"
  (close-twice) close "sample.txt" again
  close-twice: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 6c 6f 73-65 2d 74 77 69 63 65 00 |....close-twice.|
  (close-twice) begin
  (close-twice) open "sample.txt"
  (close-twice) close "sample.txt"
  (close-twice) close "sample.txt" again
- close-twice: exit(-1)
+ (close-twice) end
+ close-twice : exit(0)
gcc -c ../../tests/userprog/close-stdin.c -o tests/userprog/close-stdin.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-stdin.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-stdin.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-stdin
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/close-stdin -a close-stdin -- -q    -f run close-stdin < /dev/null 2> tests/userprog/close-stdin.errors |tee tests/userprog/close-stdin.output
Copying tests/userprog/close-stdin to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-stdin
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-stdin' into the file system...
Erasing ustar archive...
Executing 'close-stdin':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 63 6c 6f 73-65 2d 73 74 64 69 6e 00 |....close-stdin.|
(close-stdin) begin
(close-stdin) end
close-stdin : exit(0)
Execution of 'close-stdin' complete.
Timer: 300 ticks
Thread: 43 idle ticks, 212 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/close-stdin.ck tests/userprog/close-stdin tests/userprog/close-stdin.result
FAIL tests/userprog/close-stdin
Test output failed to match any acceptable form.

Acceptable output:
  (close-stdin) begin
  close-stdin: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 6c 6f 73-65 2d 73 74 64 69 6e 00 |....close-stdin.|
  (close-stdin) begin
- close-stdin: exit(-1)
+ (close-stdin) end
+ close-stdin : exit(0)
Acceptable output:
  (close-stdin) begin
  (close-stdin) end
  close-stdin: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 6c 6f 73-65 2d 73 74 64 69 6e 00 |....close-stdin.|
  (close-stdin) begin
  (close-stdin) end
- close-stdin: exit(0)
+ close-stdin : exit(0)
gcc -c ../../tests/userprog/close-stdout.c -o tests/userprog/close-stdout.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-stdout.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-stdout.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-stdout
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/close-stdout -a close-stdout -- -q    -f run close-stdout < /dev/null 2> tests/userprog/close-stdout.errors |tee tests/userprog/close-stdout.output
Copying tests/userprog/close-stdout to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-stdout
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-stdout' into the file system...
Erasing ustar archive...
Executing 'close-stdout':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 6c 6f 73 65-2d 73 74 64 6f 75 74 00 |...close-stdout.|
(close-stdout) begin
(close-stdout) end
close-stdout : exit(0)
Execution of 'close-stdout' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 213 kernel ticks, 58 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1137 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/close-stdout.ck tests/userprog/close-stdout tests/userprog/close-stdout.result
FAIL tests/userprog/close-stdout
Test output failed to match any acceptable form.

Acceptable output:
  (close-stdout) begin
  close-stdout: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 73 74 64 6f 75 74 00 |...close-stdout.|
  (close-stdout) begin
- close-stdout: exit(-1)
+ (close-stdout) end
+ close-stdout : exit(0)
Acceptable output:
  (close-stdout) begin
  (close-stdout) end
  close-stdout: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 73 74 64 6f 75 74 00 |...close-stdout.|
  (close-stdout) begin
  (close-stdout) end
- close-stdout: exit(0)
+ close-stdout : exit(0)
gcc -c ../../tests/userprog/close-bad-fd.c -o tests/userprog/close-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-bad-fd.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-bad-fd
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/close-bad-fd -a close-bad-fd -- -q    -f run close-bad-fd < /dev/null 2> tests/userprog/close-bad-fd.errors |tee tests/userprog/close-bad-fd.output
Copying tests/userprog/close-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-bad-fd' into the file system...
Erasing ustar archive...
Executing 'close-bad-fd':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 6c 6f 73 65-2d 62 61 64 2d 66 64 00 |...close-bad-fd.|
(close-bad-fd) begin
(close-bad-fd) end
close-bad-fd : exit(0)
Execution of 'close-bad-fd' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 213 kernel ticks, 58 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1137 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/close-bad-fd.ck tests/userprog/close-bad-fd tests/userprog/close-bad-fd.result
FAIL tests/userprog/close-bad-fd
Test output failed to match any acceptable form.

Acceptable output:
  (close-bad-fd) begin
  (close-bad-fd) end
  close-bad-fd: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 62 61 64 2d 66 64 00 |...close-bad-fd.|
  (close-bad-fd) begin
  (close-bad-fd) end
- close-bad-fd: exit(0)
+ close-bad-fd : exit(0)
Acceptable output:
  (close-bad-fd) begin
  close-bad-fd: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 62 61 64 2d 66 64 00 |...close-bad-fd.|
  (close-bad-fd) begin
- close-bad-fd: exit(-1)
+ (close-bad-fd) end
+ close-bad-fd : exit(0)
gcc -c ../../tests/userprog/read-normal.c -o tests/userprog/read-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-normal.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-normal
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/read-normal -a read-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run read-normal < /dev/null 2> tests/userprog/read-normal.errors |tee tests/userprog/read-normal.output
Copying tests/userprog/read-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-normal':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 72 65 61 64-2d 6e 6f 72 6d 61 6c 00 |....read-normal.|
(read-normal) begin
(read-normal) open "sample.txt" for verification
(read-normal) verified contents of "sample.txt"
(read-normal) close "sample.txt"
(read-normal) end
read-normal : exit(0)
Execution of 'read-normal' complete.
Timer: 344 ticks
Thread: 46 idle ticks, 233 kernel ticks, 68 user ticks
hda2 (filesys): 94 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1228 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/read-normal.ck tests/userprog/read-normal tests/userprog/read-normal.result
FAIL tests/userprog/read-normal
Test output failed to match any acceptable form.

Acceptable output:
  (read-normal) begin
  (read-normal) open "sample.txt" for verification
  (read-normal) verified contents of "sample.txt"
  (read-normal) close "sample.txt"
  (read-normal) end
  read-normal: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 6e 6f 72 6d 61 6c 00 |....read-normal.|
  (read-normal) begin
  (read-normal) open "sample.txt" for verification
  (read-normal) verified contents of "sample.txt"
  (read-normal) close "sample.txt"
  (read-normal) end
- read-normal: exit(0)
+ read-normal : exit(0)
gcc -c ../../tests/userprog/read-bad-ptr.c -o tests/userprog/read-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-bad-ptr.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-bad-ptr
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/read-bad-ptr -a read-bad-ptr -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run read-bad-ptr < /dev/null 2> tests/userprog/read-bad-ptr.errors |tee tests/userprog/read-bad-ptr.output
Copying tests/userprog/read-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-bad-ptr':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 72 65 61 64 2d-62 61 64 2d 70 74 72 00 |...read-bad-ptr.|
(read-bad-ptr) begin
(read-bad-ptr) open "sample.txt"
Invalid Memory Access : 0xc0100000
read-bad-ptr : exit(-1)
Execution of 'read-bad-ptr' complete.
Timer: 344 ticks
Thread: 45 idle ticks, 233 kernel ticks, 68 user ticks
hda2 (filesys): 92 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1232 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/read-bad-ptr.ck tests/userprog/read-bad-ptr tests/userprog/read-bad-ptr.result
FAIL tests/userprog/read-bad-ptr
Test output failed to match any acceptable form.

Acceptable output:
  (read-bad-ptr) begin
  (read-bad-ptr) open "sample.txt"
  (read-bad-ptr) end
  read-bad-ptr: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 72 65 61 64 2d-62 61 64 2d 70 74 72 00 |...read-bad-ptr.|
  (read-bad-ptr) begin
  (read-bad-ptr) open "sample.txt"
- (read-bad-ptr) end
- read-bad-ptr: exit(0)
+ Invalid Memory Access : 0xc0100000
+ read-bad-ptr : exit(-1)
Acceptable output:
  (read-bad-ptr) begin
  (read-bad-ptr) open "sample.txt"
  read-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 72 65 61 64 2d-62 61 64 2d 70 74 72 00 |...read-bad-ptr.|
  (read-bad-ptr) begin
  (read-bad-ptr) open "sample.txt"
- read-bad-ptr: exit(-1)
+ Invalid Memory Access : 0xc0100000
+ read-bad-ptr : exit(-1)
gcc -c ../../tests/userprog/read-boundary.c -o tests/userprog/read-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-boundary.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-boundary
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/read-boundary -a read-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run read-boundary < /dev/null 2> tests/userprog/read-boundary.errors |tee tests/userprog/read-boundary.output
Copying tests/userprog/read-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 97 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-boundary':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 72 65 61 64 2d 62-6f 75 6e 64 61 72 79 00 |..read-boundary.|
(read-boundary) begin
(read-boundary) open "sample.txt"
(read-boundary) end
read-boundary : exit(0)
Execution of 'read-boundary' complete.
Timer: 354 ticks
Thread: 47 idle ticks, 239 kernel ticks, 70 user ticks
hda2 (filesys): 96 reads, 200 writes
hda3 (scratch): 96 reads, 2 writes
Console: 1223 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/read-boundary.ck tests/userprog/read-boundary tests/userprog/read-boundary.result
FAIL tests/userprog/read-boundary
Test output failed to match any acceptable form.

Acceptable output:
  (read-boundary) begin
  (read-boundary) open "sample.txt"
  (read-boundary) end
  read-boundary: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 72 65 61 64 2d 62-6f 75 6e 64 61 72 79 00 |..read-boundary.|
  (read-boundary) begin
  (read-boundary) open "sample.txt"
  (read-boundary) end
- read-boundary: exit(0)
+ read-boundary : exit(0)
gcc -c ../../tests/userprog/read-zero.c -o tests/userprog/read-zero.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-zero.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-zero.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-zero
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/read-zero -a read-zero -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run read-zero < /dev/null 2> tests/userprog/read-zero.errors |tee tests/userprog/read-zero.output
Copying tests/userprog/read-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-zero':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 72 65-61 64 2d 7a 65 72 6f 00 |......read-zero.|
(read-zero) begin
(read-zero) open "sample.txt"
(read-zero) end
read-zero : exit(0)
Execution of 'read-zero' complete.
Timer: 331 ticks
Thread: 44 idle ticks, 234 kernel ticks, 56 user ticks
hda2 (filesys): 94 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1114 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/read-zero.ck tests/userprog/read-zero tests/userprog/read-zero.result
FAIL tests/userprog/read-zero
Test output failed to match any acceptable form.

Acceptable output:
  (read-zero) begin
  (read-zero) open "sample.txt"
  (read-zero) end
  read-zero: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 72 65-61 64 2d 7a 65 72 6f 00 |......read-zero.|
  (read-zero) begin
  (read-zero) open "sample.txt"
  (read-zero) end
- read-zero: exit(0)
+ read-zero : exit(0)
gcc -c ../../tests/userprog/read-stdout.c -o tests/userprog/read-stdout.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-stdout.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-stdout.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-stdout
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/read-stdout -a read-stdout -- -q    -f run read-stdout < /dev/null 2> tests/userprog/read-stdout.errors |tee tests/userprog/read-stdout.output
Copying tests/userprog/read-stdout to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-stdout
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-stdout' into the file system...
Erasing ustar archive...
Executing 'read-stdout':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 72 65 61 64-2d 73 74 64 6f 75 74 00 |....read-stdout.|
(read-stdout) begin
(read-stdout) end
read-stdout : exit(0)
Execution of 'read-stdout' complete.
Timer: 301 ticks
Thread: 42 idle ticks, 213 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/read-stdout.ck tests/userprog/read-stdout tests/userprog/read-stdout.result
FAIL tests/userprog/read-stdout
Test output failed to match any acceptable form.

Acceptable output:
  (read-stdout) begin
  (read-stdout) end
  read-stdout: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 73 74 64 6f 75 74 00 |....read-stdout.|
  (read-stdout) begin
  (read-stdout) end
- read-stdout: exit(0)
+ read-stdout : exit(0)
Acceptable output:
  (read-stdout) begin
  read-stdout: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 73 74 64 6f 75 74 00 |....read-stdout.|
  (read-stdout) begin
- read-stdout: exit(-1)
+ (read-stdout) end
+ read-stdout : exit(0)
gcc -c ../../tests/userprog/read-bad-fd.c -o tests/userprog/read-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-bad-fd.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-bad-fd
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/read-bad-fd -a read-bad-fd -- -q    -f run read-bad-fd < /dev/null 2> tests/userprog/read-bad-fd.errors |tee tests/userprog/read-bad-fd.output
Copying tests/userprog/read-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-fd' into the file system...
Erasing ustar archive...
Executing 'read-bad-fd':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 72 65 61 64-2d 62 61 64 2d 66 64 00 |....read-bad-fd.|
(read-bad-fd) begin
(read-bad-fd) end
read-bad-fd : exit(0)
Execution of 'read-bad-fd' complete.
Timer: 301 ticks
Thread: 42 idle ticks, 213 kernel ticks, 49 user ticks
hda2 (filesys): 64 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/read-bad-fd.ck tests/userprog/read-bad-fd tests/userprog/read-bad-fd.result
FAIL tests/userprog/read-bad-fd
Test output failed to match any acceptable form.

Acceptable output:
  (read-bad-fd) begin
  (read-bad-fd) end
  read-bad-fd: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 62 61 64 2d 66 64 00 |....read-bad-fd.|
  (read-bad-fd) begin
  (read-bad-fd) end
- read-bad-fd: exit(0)
+ read-bad-fd : exit(0)
Acceptable output:
  (read-bad-fd) begin
  read-bad-fd: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 62 61 64 2d 66 64 00 |....read-bad-fd.|
  (read-bad-fd) begin
- read-bad-fd: exit(-1)
+ (read-bad-fd) end
+ read-bad-fd : exit(0)
gcc -c ../../tests/userprog/write-normal.c -o tests/userprog/write-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-normal.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-normal
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/write-normal -a write-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run write-normal < /dev/null 2> tests/userprog/write-normal.errors |tee tests/userprog/write-normal.output
Copying tests/userprog/write-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-normal':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 77 72 69 74 65-2d 6e 6f 72 6d 61 6c 00 |...write-normal.|
(write-normal) begin
(write-normal) create "test.txt"
(write-normal) open "test.txt"
(write-normal) end
write-normal : exit(0)
Execution of 'write-normal' complete.
Timer: 361 ticks
Thread: 45 idle ticks, 235 kernel ticks, 84 user ticks
hda2 (filesys): 117 reads, 202 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1247 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/write-normal.ck tests/userprog/write-normal tests/userprog/write-normal.result
FAIL tests/userprog/write-normal
Test output failed to match any acceptable form.

Acceptable output:
  (write-normal) begin
  (write-normal) create "test.txt"
  (write-normal) open "test.txt"
  (write-normal) end
  write-normal: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 72 69 74 65-2d 6e 6f 72 6d 61 6c 00 |...write-normal.|
  (write-normal) begin
  (write-normal) create "test.txt"
  (write-normal) open "test.txt"
  (write-normal) end
- write-normal: exit(0)
+ write-normal : exit(0)
gcc -c ../../tests/userprog/write-bad-ptr.c -o tests/userprog/write-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-bad-ptr.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-bad-ptr
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/write-bad-ptr -a write-bad-ptr -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run write-bad-ptr < /dev/null 2> tests/userprog/write-bad-ptr.errors |tee tests/userprog/write-bad-ptr.output
Copying tests/userprog/write-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-bad-ptr':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 77 72 69 74 65 2d-62 61 64 2d 70 74 72 00 |..write-bad-ptr.|
(write-bad-ptr) begin
(write-bad-ptr) open "sample.txt"
PAGE FAULT!!!
write-bad-ptr : exit(-1)
Execution of 'write-bad-ptr' complete.
Timer: 343 ticks
Thread: 46 idle ticks, 233 kernel ticks, 66 user ticks
hda2 (filesys): 93 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1218 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/write-bad-ptr.ck tests/userprog/write-bad-ptr tests/userprog/write-bad-ptr.result
FAIL tests/userprog/write-bad-ptr
Test output failed to match any acceptable form.

Acceptable output:
  (write-bad-ptr) begin
  (write-bad-ptr) open "sample.txt"
  (write-bad-ptr) end
  write-bad-ptr: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 77 72 69 74 65 2d-62 61 64 2d 70 74 72 00 |..write-bad-ptr.|
  (write-bad-ptr) begin
  (write-bad-ptr) open "sample.txt"
- (write-bad-ptr) end
- write-bad-ptr: exit(0)
+ PAGE FAULT!!!
+ write-bad-ptr : exit(-1)
Acceptable output:
  (write-bad-ptr) begin
  (write-bad-ptr) open "sample.txt"
  write-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 77 72 69 74 65 2d-62 61 64 2d 70 74 72 00 |..write-bad-ptr.|
  (write-bad-ptr) begin
  (write-bad-ptr) open "sample.txt"
- write-bad-ptr: exit(-1)
+ PAGE FAULT!!!
+ write-bad-ptr : exit(-1)
gcc -c ../../tests/userprog/write-boundary.c -o tests/userprog/write-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-boundary.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-boundary
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/write-boundary -a write-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run write-boundary < /dev/null 2> tests/userprog/write-boundary.errors |tee tests/userprog/write-boundary.output
Copying tests/userprog/write-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 97 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-boundary':
bfffffd0                                         00 00 00 |             ...|
bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
bffffff0  00 77 72 69 74 65 2d 62-6f 75 6e 64 61 72 79 00 |.write-boundary.|
(write-boundary) begin
(write-boundary) open "sample.txt"
(write-boundary) end
write-boundary : exit(0)
Execution of 'write-boundary' complete.
Timer: 354 ticks
Thread: 46 idle ticks, 238 kernel ticks, 73 user ticks
hda2 (filesys): 95 reads, 201 writes
hda3 (scratch): 96 reads, 2 writes
Console: 1231 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/write-boundary.ck tests/userprog/write-boundary tests/userprog/write-boundary.result
FAIL tests/userprog/write-boundary
Test output failed to match any acceptable form.

Acceptable output:
  (write-boundary) begin
  (write-boundary) open "sample.txt"
  (write-boundary) end
  write-boundary: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 77 72 69 74 65 2d 62-6f 75 6e 64 61 72 79 00 |.write-boundary.|
  (write-boundary) begin
  (write-boundary) open "sample.txt"
  (write-boundary) end
- write-boundary: exit(0)
+ write-boundary : exit(0)
gcc -c ../../tests/userprog/write-zero.c -o tests/userprog/write-zero.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-zero.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-zero.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-zero
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/write-zero -a write-zero -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run write-zero < /dev/null 2> tests/userprog/write-zero.errors |tee tests/userprog/write-zero.output
Copying tests/userprog/write-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-zero':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 77 72 69-74 65 2d 7a 65 72 6f 00 |.....write-zero.|
(write-zero) begin
(write-zero) open "sample.txt"
(write-zero) end
write-zero : exit(0)
Execution of 'write-zero' complete.
Timer: 331 ticks
Thread: 44 idle ticks, 234 kernel ticks, 56 user ticks
hda2 (filesys): 92 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1122 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/write-zero.ck tests/userprog/write-zero tests/userprog/write-zero.result
FAIL tests/userprog/write-zero
Test output failed to match any acceptable form.

Acceptable output:
  (write-zero) begin
  (write-zero) open "sample.txt"
  (write-zero) end
  write-zero: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 77 72 69-74 65 2d 7a 65 72 6f 00 |.....write-zero.|
  (write-zero) begin
  (write-zero) open "sample.txt"
  (write-zero) end
- write-zero: exit(0)
+ write-zero : exit(0)
gcc -c ../../tests/userprog/write-stdin.c -o tests/userprog/write-stdin.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-stdin.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-stdin.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-stdin
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/write-stdin -a write-stdin -- -q    -f run write-stdin < /dev/null 2> tests/userprog/write-stdin.errors |tee tests/userprog/write-stdin.output
Copying tests/userprog/write-stdin to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-stdin
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-stdin' into the file system...
Erasing ustar archive...
Executing 'write-stdin':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 77 72 69 74-65 2d 73 74 64 69 6e 00 |....write-stdin.|
(write-stdin) begin
(write-stdin) end
write-stdin : exit(0)
Execution of 'write-stdin' complete.
Timer: 300 ticks
Thread: 42 idle ticks, 213 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/write-stdin.ck tests/userprog/write-stdin tests/userprog/write-stdin.result
FAIL tests/userprog/write-stdin
Test output failed to match any acceptable form.

Acceptable output:
  (write-stdin) begin
  write-stdin: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 77 72 69 74-65 2d 73 74 64 69 6e 00 |....write-stdin.|
  (write-stdin) begin
- write-stdin: exit(-1)
+ (write-stdin) end
+ write-stdin : exit(0)
Acceptable output:
  (write-stdin) begin
  (write-stdin) end
  write-stdin: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 77 72 69 74-65 2d 73 74 64 69 6e 00 |....write-stdin.|
  (write-stdin) begin
  (write-stdin) end
- write-stdin: exit(0)
+ write-stdin : exit(0)
gcc -c ../../tests/userprog/write-bad-fd.c -o tests/userprog/write-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-bad-fd.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-bad-fd
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/write-bad-fd -a write-bad-fd -- -q    -f run write-bad-fd < /dev/null 2> tests/userprog/write-bad-fd.errors |tee tests/userprog/write-bad-fd.output
Copying tests/userprog/write-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-fd' into the file system...
Erasing ustar archive...
Executing 'write-bad-fd':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 77 72 69 74 65-2d 62 61 64 2d 66 64 00 |...write-bad-fd.|
(write-bad-fd) begin
PAGE FAULT!!!
write-bad-fd : exit(-1)
Execution of 'write-bad-fd' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 214 kernel ticks, 57 user ticks
hda2 (filesys): 65 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1133 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/write-bad-fd.ck tests/userprog/write-bad-fd tests/userprog/write-bad-fd.result
FAIL tests/userprog/write-bad-fd
Test output failed to match any acceptable form.

Acceptable output:
  (write-bad-fd) begin
  write-bad-fd: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 72 69 74 65-2d 62 61 64 2d 66 64 00 |...write-bad-fd.|
  (write-bad-fd) begin
- write-bad-fd: exit(-1)
+ PAGE FAULT!!!
+ write-bad-fd : exit(-1)
Acceptable output:
  (write-bad-fd) begin
  (write-bad-fd) end
  write-bad-fd: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 72 69 74 65-2d 62 61 64 2d 66 64 00 |...write-bad-fd.|
  (write-bad-fd) begin
- (write-bad-fd) end
- write-bad-fd: exit(0)
+ PAGE FAULT!!!
+ write-bad-fd : exit(-1)
gcc -c ../../tests/userprog/exec-once.c -o tests/userprog/exec-once.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-once.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-once.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-once
gcc -c ../../tests/userprog/child-simple.c -o tests/userprog/child-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-simple.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-simple.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-simple
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/exec-once -a exec-once -p tests/userprog/child-simple -a child-simple -- -q    -f run exec-once < /dev/null 2> tests/userprog/exec-once.errors |tee tests/userprog/exec-once.output
Copying tests/userprog/exec-once to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-once
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 180 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-once' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'exec-once':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 65 78-65 63 2d 6f 6e 63 65 00 |......exec-once.|
(exec-once) begin
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
(exec-once) end
exec-once : exit(0)
Execution of 'exec-once' complete.
Timer: 482 ticks
Thread: 81 idle ticks, 295 kernel ticks, 109 user ticks
hda2 (filesys): 126 reads, 366 writes
hda3 (scratch): 179 reads, 2 writes
Console: 1364 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/exec-once.ck tests/userprog/exec-once tests/userprog/exec-once.result
FAIL tests/userprog/exec-once
Test output failed to match any acceptable form.

Acceptable output:
  (exec-once) begin
  (child-simple) run
  child-simple: exit(81)
  (exec-once) end
  exec-once: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 65 78-65 63 2d 6f 6e 63 65 00 |......exec-once.|
  (exec-once) begin
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
  (exec-once) end
- exec-once: exit(0)
+ exec-once : exit(0)
gcc -c ../../tests/userprog/exec-arg.c -o tests/userprog/exec-arg.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-arg.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-arg.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-arg
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-args
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/exec-arg -a exec-arg -p tests/userprog/child-args -a child-args -- -q    -f run exec-arg < /dev/null 2> tests/userprog/exec-arg.errors |tee tests/userprog/exec-arg.output
Copying tests/userprog/exec-arg to scratch partition...
Copying tests/userprog/child-args to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-arg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 180 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-arg' into the file system...
Putting 'child-args' into the file system...
Erasing ustar archive...
Executing 'exec-arg':
bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
bffffff0  ff ff bf 00 00 00 00 65-78 65 63 2d 61 72 67 00 |.......exec-arg.|
(exec-arg) begin
bfffffd0              00 00 00 00-02 00 00 00 e0 ff ff bf |    ............|
bfffffe0  ec ff ff bf f7 ff ff bf-00 00 00 00 63 68 69 6c |............chil|
bffffff0  64 2d 61 72 67 73 00 63-68 69 6c 64 61 72 67 00 |d-args.childarg.|
(args) begin
(args) argc = 2
(args) argv[0] = 'child-args'
(args) argv[1] = 'childarg'
(args) argv[2] = null
(args) end
child-args : exit(0)
(exec-arg) end
exec-arg : exit(0)
Execution of 'exec-arg' complete.
Timer: 500 ticks
Thread: 80 idle ticks, 295 kernel ticks, 127 user ticks
hda2 (filesys): 126 reads, 366 writes
hda3 (scratch): 179 reads, 2 writes
Console: 1453 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/exec-arg.ck tests/userprog/exec-arg tests/userprog/exec-arg.result
FAIL tests/userprog/exec-arg
Test output failed to match any acceptable form.

Acceptable output:
  (exec-arg) begin
  (args) begin
  (args) argc = 2
  (args) argv[0] = 'child-args'
  (args) argv[1] = 'childarg'
  (args) argv[2] = null
  (args) end
  child-args: exit(0)
  (exec-arg) end
  exec-arg: exit(0)
Differences in `diff -u' format:
+ bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
+ bffffff0  ff ff bf 00 00 00 00 65-78 65 63 2d 61 72 67 00 |.......exec-arg.|
  (exec-arg) begin
+ bfffffd0              00 00 00 00-02 00 00 00 e0 ff ff bf |    ............|
+ bfffffe0  ec ff ff bf f7 ff ff bf-00 00 00 00 63 68 69 6c |............chil|
+ bffffff0  64 2d 61 72 67 73 00 63-68 69 6c 64 61 72 67 00 |d-args.childarg.|
  (args) begin
  (args) argc = 2
  (args) argv[0] = 'child-args'
  (args) argv[1] = 'childarg'
  (args) argv[2] = null
  (args) end
- child-args: exit(0)
+ child-args : exit(0)
  (exec-arg) end
- exec-arg: exit(0)
+ exec-arg : exit(0)
gcc -c ../../tests/userprog/exec-multiple.c -o tests/userprog/exec-multiple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-multiple.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-multiple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-multiple
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/exec-multiple -a exec-multiple -p tests/userprog/child-simple -a child-simple -- -q    -f run exec-multiple < /dev/null 2> tests/userprog/exec-multiple.errors |tee tests/userprog/exec-multiple.output
Copying tests/userprog/exec-multiple to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-multiple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 181 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-multiple' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'exec-multiple':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 65 78 65 63 2d 6d-75 6c 74 69 70 6c 65 00 |..exec-multiple.|
(exec-multiple) begin
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
(exec-multiple) end
exec-multiple : exit(0)
Execution of 'exec-multiple' complete.
Timer: 732 ticks
Thread: 83 idle ticks, 349 kernel ticks, 302 user ticks
hda2 (filesys): 240 reads, 368 writes
hda3 (scratch): 180 reads, 2 writes
Console: 2291 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/exec-multiple.ck tests/userprog/exec-multiple tests/userprog/exec-multiple.result
FAIL tests/userprog/exec-multiple
Test output failed to match any acceptable form.

Acceptable output:
  (exec-multiple) begin
  (child-simple) run
  child-simple: exit(81)
  (child-simple) run
  child-simple: exit(81)
  (child-simple) run
  child-simple: exit(81)
  (child-simple) run
  child-simple: exit(81)
  (exec-multiple) end
  exec-multiple: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 65 78 65 63 2d 6d-75 6c 74 69 70 6c 65 00 |..exec-multiple.|
  (exec-multiple) begin
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
  (exec-multiple) end
- exec-multiple: exit(0)
+ exec-multiple : exit(0)
gcc -c ../../tests/userprog/exec-missing.c -o tests/userprog/exec-missing.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-missing.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-missing.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-missing
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/exec-missing -a exec-missing -- -q    -f run exec-missing < /dev/null 2> tests/userprog/exec-missing.errors |tee tests/userprog/exec-missing.output
Copying tests/userprog/exec-missing to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-missing
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-missing' into the file system...
Erasing ustar archive...
Executing 'exec-missing':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
(exec-missing) begin
load: no-such-file: open failed
(exec-missing) exec("no-such-file"): -1
(exec-missing) end
exec-missing : exit(0)
Execution of 'exec-missing' complete.
Timer: 334 ticks
Thread: 42 idle ticks, 215 kernel ticks, 79 user ticks
hda2 (filesys): 80 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1209 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/exec-missing.ck tests/userprog/exec-missing tests/userprog/exec-missing.result
FAIL tests/userprog/exec-missing
Test output failed to match any acceptable form.

Acceptable output:
  (exec-missing) begin
  load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
  no-such-file: exit(-1)
  (exec-missing) end
  exec-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
  (exec-missing) begin
  load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
- no-such-file: exit(-1)
  (exec-missing) end
- exec-missing: exit(0)
+ exec-missing : exit(0)
Acceptable output:
  (exec-missing) begin
  load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
  exec-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
  (exec-missing) begin
  load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
- exec-missing: exit(0)
+ exec-missing : exit(0)
Acceptable output:
  (exec-missing) begin
  load: no-such-file: open failed
  no-such-file: exit(-1)
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
  exec-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
  (exec-missing) begin
  load: no-such-file: open failed
- no-such-file: exit(-1)
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
- exec-missing: exit(0)
+ exec-missing : exit(0)
Acceptable output:
  (exec-missing) begin
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
  exec-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
  (exec-missing) begin
+ load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
- exec-missing: exit(0)
+ exec-missing : exit(0)
gcc -c ../../tests/userprog/exec-bad-ptr.c -o tests/userprog/exec-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-bad-ptr.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-bad-ptr
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/exec-bad-ptr -a exec-bad-ptr -- -q    -f run exec-bad-ptr < /dev/null 2> tests/userprog/exec-bad-ptr.errors |tee tests/userprog/exec-bad-ptr.output
Copying tests/userprog/exec-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'exec-bad-ptr':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 65 78 65 63 2d-62 61 64 2d 70 74 72 00 |...exec-bad-ptr.|
(exec-bad-ptr) begin
PAGE FAULT!!!
exec-bad-ptr : exit(-1)
Execution of 'exec-bad-ptr' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 213 kernel ticks, 57 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1133 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/exec-bad-ptr.ck tests/userprog/exec-bad-ptr tests/userprog/exec-bad-ptr.result
FAIL tests/userprog/exec-bad-ptr
Test output failed to match any acceptable form.

Acceptable output:
  (exec-bad-ptr) begin
  (exec-bad-ptr) end
  exec-bad-ptr: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-62 61 64 2d 70 74 72 00 |...exec-bad-ptr.|
  (exec-bad-ptr) begin
- (exec-bad-ptr) end
- exec-bad-ptr: exit(0)
+ PAGE FAULT!!!
+ exec-bad-ptr : exit(-1)
Acceptable output:
  (exec-bad-ptr) begin
  exec-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-62 61 64 2d 70 74 72 00 |...exec-bad-ptr.|
  (exec-bad-ptr) begin
- exec-bad-ptr: exit(-1)
+ PAGE FAULT!!!
+ exec-bad-ptr : exit(-1)
gcc -c ../../tests/userprog/wait-simple.c -o tests/userprog/wait-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-simple.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-simple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-simple
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/wait-simple -a wait-simple -p tests/userprog/child-simple -a child-simple -- -q    -f run wait-simple < /dev/null 2> tests/userprog/wait-simple.errors |tee tests/userprog/wait-simple.output
Copying tests/userprog/wait-simple to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-simple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 180 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-simple' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-simple':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 77 61 69 74-2d 73 69 6d 70 6c 65 00 |....wait-simple.|
(wait-simple) begin
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
(wait-simple) wait(exec()) = 81
(wait-simple) end
wait-simple : exit(0)
Execution of 'wait-simple' complete.
Timer: 487 ticks
Thread: 83 idle ticks, 292 kernel ticks, 115 user ticks
hda2 (filesys): 126 reads, 366 writes
hda3 (scratch): 179 reads, 2 writes
Console: 1410 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/wait-simple.ck tests/userprog/wait-simple tests/userprog/wait-simple.result
FAIL tests/userprog/wait-simple
Test output failed to match any acceptable form.

Acceptable output:
  (wait-simple) begin
  (child-simple) run
  child-simple: exit(81)
  (wait-simple) wait(exec()) = 81
  (wait-simple) end
  wait-simple: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 77 61 69 74-2d 73 69 6d 70 6c 65 00 |....wait-simple.|
  (wait-simple) begin
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
  (wait-simple) wait(exec()) = 81
  (wait-simple) end
- wait-simple: exit(0)
+ wait-simple : exit(0)
gcc -c ../../tests/userprog/wait-twice.c -o tests/userprog/wait-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-twice.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-twice
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/wait-twice -a wait-twice -p tests/userprog/child-simple -a child-simple -- -q    -f run wait-twice < /dev/null 2> tests/userprog/wait-twice.errors |tee tests/userprog/wait-twice.output
Copying tests/userprog/wait-twice to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 181 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-twice' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-twice':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 77 61 69-74 2d 74 77 69 63 65 00 |.....wait-twice.|
(wait-twice) begin
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
(wait-twice) wait(exec()) = 81
(wait-twice) wait(exec()) = -1
(wait-twice) end
wait-twice : exit(0)
Execution of 'wait-twice' complete.
Timer: 490 ticks
Thread: 80 idle ticks, 297 kernel ticks, 116 user ticks
hda2 (filesys): 126 reads, 368 writes
hda3 (scratch): 180 reads, 2 writes
Console: 1433 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/wait-twice.ck tests/userprog/wait-twice tests/userprog/wait-twice.result
FAIL tests/userprog/wait-twice
Test output failed to match any acceptable form.

Acceptable output:
  (wait-twice) begin
  (child-simple) run
  child-simple: exit(81)
  (wait-twice) wait(exec()) = 81
  (wait-twice) wait(exec()) = -1
  (wait-twice) end
  wait-twice: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 77 61 69-74 2d 74 77 69 63 65 00 |.....wait-twice.|
  (wait-twice) begin
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
  (wait-twice) wait(exec()) = 81
  (wait-twice) wait(exec()) = -1
  (wait-twice) end
- wait-twice: exit(0)
+ wait-twice : exit(0)
gcc -c ../../tests/userprog/wait-killed.c -o tests/userprog/wait-killed.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-killed.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-killed.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-killed
gcc -c ../../tests/userprog/child-bad.c -o tests/userprog/child-bad.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-bad.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-bad.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-bad
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/wait-killed -a wait-killed -p tests/userprog/child-bad -a child-bad -- -q    -f run wait-killed < /dev/null 2> tests/userprog/wait-killed.errors |tee tests/userprog/wait-killed.output
Copying tests/userprog/wait-killed to scratch partition...
Copying tests/userprog/child-bad to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-killed
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 180 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Erasing ustar archive...
Executing 'wait-killed':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 77 61 69 74-2d 6b 69 6c 6c 65 64 00 |....wait-killed.|
(wait-killed) begin
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 63 68-69 6c 64 2d 62 61 64 00 |......child-bad.|
(child-bad) begin
PAGE FAULT!!!
child-bad : exit(-1)
(wait-killed) wait(exec()) = -1
(wait-killed) end
wait-killed : exit(0)
Execution of 'wait-killed' complete.
Timer: 480 ticks
Thread: 81 idle ticks, 294 kernel ticks, 108 user ticks
hda2 (filesys): 126 reads, 366 writes
hda3 (scratch): 179 reads, 2 writes
Console: 1340 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/wait-killed.ck tests/userprog/wait-killed tests/userprog/wait-killed.result
FAIL tests/userprog/wait-killed
Test output failed to match any acceptable form.

Acceptable output:
  (wait-killed) begin
  (child-bad) begin
  child-bad: exit(-1)
  (wait-killed) wait(exec()) = -1
  (wait-killed) end
  wait-killed: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 77 61 69 74-2d 6b 69 6c 6c 65 64 00 |....wait-killed.|
  (wait-killed) begin
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 63 68-69 6c 64 2d 62 61 64 00 |......child-bad.|
  (child-bad) begin
- child-bad: exit(-1)
+ PAGE FAULT!!!
+ child-bad : exit(-1)
  (wait-killed) wait(exec()) = -1
  (wait-killed) end
- wait-killed: exit(0)
+ wait-killed : exit(0)
gcc -c ../../tests/userprog/wait-bad-pid.c -o tests/userprog/wait-bad-pid.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-bad-pid.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-bad-pid.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-bad-pid
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/wait-bad-pid -a wait-bad-pid -- -q    -f run wait-bad-pid < /dev/null 2> tests/userprog/wait-bad-pid.errors |tee tests/userprog/wait-bad-pid.output
Copying tests/userprog/wait-bad-pid to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-bad-pid
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-bad-pid' into the file system...
Erasing ustar archive...
Executing 'wait-bad-pid':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 77 61 69 74 2d-62 61 64 2d 70 69 64 00 |...wait-bad-pid.|
(wait-bad-pid) begin
(wait-bad-pid) end
wait-bad-pid : exit(0)
Execution of 'wait-bad-pid' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 213 kernel ticks, 58 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1137 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/wait-bad-pid.ck tests/userprog/wait-bad-pid tests/userprog/wait-bad-pid.result
FAIL tests/userprog/wait-bad-pid
Test output failed to match any acceptable form.

Acceptable output:
  (wait-bad-pid) begin
  wait-bad-pid: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 61 69 74 2d-62 61 64 2d 70 69 64 00 |...wait-bad-pid.|
  (wait-bad-pid) begin
- wait-bad-pid: exit(-1)
+ (wait-bad-pid) end
+ wait-bad-pid : exit(0)
Acceptable output:
  (wait-bad-pid) begin
  (wait-bad-pid) end
  wait-bad-pid: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 61 69 74 2d-62 61 64 2d 70 69 64 00 |...wait-bad-pid.|
  (wait-bad-pid) begin
  (wait-bad-pid) end
- wait-bad-pid: exit(0)
+ wait-bad-pid : exit(0)
gcc -c ../../tests/userprog/multi-recurse.c -o tests/userprog/multi-recurse.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/multi-recurse.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/multi-recurse.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/multi-recurse
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/multi-recurse -a multi-recurse -- -q    -f run 'multi-recurse 15' < /dev/null 2> tests/userprog/multi-recurse.errors |tee tests/userprog/multi-recurse.output
Copying tests/userprog/multi-recurse to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'multi-recurse 15'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-recurse' into the file system...
Erasing ustar archive...
Executing 'multi-recurse 15':
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 35 00 |ulti-recurse.15.|
(multi-recurse) begin 15
(multi-recurse) exec("multi-recurse 14")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 34 00 |ulti-recurse.14.|
(multi-recurse) begin 14
(multi-recurse) exec("multi-recurse 13")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 33 00 |ulti-recurse.13.|
(multi-recurse) begin 13
(multi-recurse) exec("multi-recurse 12")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 32 00 |ulti-recurse.12.|
(multi-recurse) begin 12
(multi-recurse) exec("multi-recurse 11")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 31 00 |ulti-recurse.11.|
(multi-recurse) begin 11
(multi-recurse) exec("multi-recurse 10")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 30 00 |ulti-recurse.10.|
(multi-recurse) begin 10
(multi-recurse) exec("multi-recurse 9")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 39 00 |multi-recurse.9.|
(multi-recurse) begin 9
(multi-recurse) exec("multi-recurse 8")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 38 00 |multi-recurse.8.|
(multi-recurse) begin 8
(multi-recurse) exec("multi-recurse 7")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 37 00 |multi-recurse.7.|
(multi-recurse) begin 7
(multi-recurse) exec("multi-recurse 6")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 36 00 |multi-recurse.6.|
(multi-recurse) begin 6
(multi-recurse) exec("multi-recurse 5")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 35 00 |multi-recurse.5.|
(multi-recurse) begin 5
(multi-recurse) exec("multi-recurse 4")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 34 00 |multi-recurse.4.|
(multi-recurse) begin 4
(multi-recurse) exec("multi-recurse 3")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 33 00 |multi-recurse.3.|
(multi-recurse) begin 3
(multi-recurse) exec("multi-recurse 2")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 32 00 |multi-recurse.2.|
(multi-recurse) begin 2
(multi-recurse) exec("multi-recurse 1")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 31 00 |multi-recurse.1.|
(multi-recurse) begin 1
(multi-recurse) exec("multi-recurse 0")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 30 00 |multi-recurse.0.|
(multi-recurse) begin 0
(multi-recurse) end 0
multi-recurse : exit(0)
(multi-recurse) end 1
multi-recurse : exit(1)
(multi-recurse) end 2
multi-recurse : exit(2)
(multi-recurse) end 3
multi-recurse : exit(3)
(multi-recurse) end 4
multi-recurse : exit(4)
(multi-recurse) end 5
multi-recurse : exit(5)
(multi-recurse) end 6
multi-recurse : exit(6)
(multi-recurse) end 7
multi-recurse : exit(7)
(multi-recurse) end 8
multi-recurse : exit(8)
(multi-recurse) end 9
multi-recurse : exit(9)
(multi-recurse) end 10
multi-recurse : exit(10)
(multi-recurse) end 11
multi-recurse : exit(11)
(multi-recurse) end 12
multi-recurse : exit(12)
(multi-recurse) end 13
multi-recurse : exit(13)
(multi-recurse) end 14
multi-recurse : exit(14)
(multi-recurse) end 15
multi-recurse : exit(15)
Execution of 'multi-recurse 15' complete.
Timer: 1653 ticks
Thread: 45 idle ticks, 492 kernel ticks, 1119 user ticks
hda2 (filesys): 571 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 6303 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/multi-recurse.ck tests/userprog/multi-recurse tests/userprog/multi-recurse.result
FAIL tests/userprog/multi-recurse
Test output failed to match any acceptable form.

Acceptable output:
  (multi-recurse) begin 15
  (multi-recurse) exec("multi-recurse 14")
  (multi-recurse) begin 14
  (multi-recurse) exec("multi-recurse 13")
  (multi-recurse) begin 13
  (multi-recurse) exec("multi-recurse 12")
  (multi-recurse) begin 12
  (multi-recurse) exec("multi-recurse 11")
  (multi-recurse) begin 11
  (multi-recurse) exec("multi-recurse 10")
  (multi-recurse) begin 10
  (multi-recurse) exec("multi-recurse 9")
  (multi-recurse) begin 9
  (multi-recurse) exec("multi-recurse 8")
  (multi-recurse) begin 8
  (multi-recurse) exec("multi-recurse 7")
  (multi-recurse) begin 7
  (multi-recurse) exec("multi-recurse 6")
  (multi-recurse) begin 6
  (multi-recurse) exec("multi-recurse 5")
  (multi-recurse) begin 5
  (multi-recurse) exec("multi-recurse 4")
  (multi-recurse) begin 4
  (multi-recurse) exec("multi-recurse 3")
  (multi-recurse) begin 3
  (multi-recurse) exec("multi-recurse 2")
  (multi-recurse) begin 2
  (multi-recurse) exec("multi-recurse 1")
  (multi-recurse) begin 1
  (multi-recurse) exec("multi-recurse 0")
  (multi-recurse) begin 0
  (multi-recurse) end 0
  multi-recurse: exit(0)
  (multi-recurse) end 1
  multi-recurse: exit(1)
  (multi-recurse) end 2
  multi-recurse: exit(2)
  (multi-recurse) end 3
  multi-recurse: exit(3)
  (multi-recurse) end 4
  multi-recurse: exit(4)
  (multi-recurse) end 5
  multi-recurse: exit(5)
  (multi-recurse) end 6
  multi-recurse: exit(6)
  (multi-recurse) end 7
  multi-recurse: exit(7)
  (multi-recurse) end 8
  multi-recurse: exit(8)
  (multi-recurse) end 9
  multi-recurse: exit(9)
  (multi-recurse) end 10
  multi-recurse: exit(10)
  (multi-recurse) end 11
  multi-recurse: exit(11)
  (multi-recurse) end 12
  multi-recurse: exit(12)
  (multi-recurse) end 13
  multi-recurse: exit(13)
  (multi-recurse) end 14
  multi-recurse: exit(14)
  (multi-recurse) end 15
  multi-recurse: exit(15)
Differences in `diff -u' format:
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 35 00 |ulti-recurse.15.|
  (multi-recurse) begin 15
  (multi-recurse) exec("multi-recurse 14")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 34 00 |ulti-recurse.14.|
  (multi-recurse) begin 14
  (multi-recurse) exec("multi-recurse 13")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 33 00 |ulti-recurse.13.|
  (multi-recurse) begin 13
  (multi-recurse) exec("multi-recurse 12")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 32 00 |ulti-recurse.12.|
  (multi-recurse) begin 12
  (multi-recurse) exec("multi-recurse 11")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 31 00 |ulti-recurse.11.|
  (multi-recurse) begin 11
  (multi-recurse) exec("multi-recurse 10")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 30 00 |ulti-recurse.10.|
  (multi-recurse) begin 10
  (multi-recurse) exec("multi-recurse 9")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 39 00 |multi-recurse.9.|
  (multi-recurse) begin 9
  (multi-recurse) exec("multi-recurse 8")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 38 00 |multi-recurse.8.|
  (multi-recurse) begin 8
  (multi-recurse) exec("multi-recurse 7")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 37 00 |multi-recurse.7.|
  (multi-recurse) begin 7
  (multi-recurse) exec("multi-recurse 6")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 36 00 |multi-recurse.6.|
  (multi-recurse) begin 6
  (multi-recurse) exec("multi-recurse 5")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 35 00 |multi-recurse.5.|
  (multi-recurse) begin 5
  (multi-recurse) exec("multi-recurse 4")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 34 00 |multi-recurse.4.|
  (multi-recurse) begin 4
  (multi-recurse) exec("multi-recurse 3")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 33 00 |multi-recurse.3.|
  (multi-recurse) begin 3
  (multi-recurse) exec("multi-recurse 2")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 32 00 |multi-recurse.2.|
  (multi-recurse) begin 2
  (multi-recurse) exec("multi-recurse 1")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 31 00 |multi-recurse.1.|
  (multi-recurse) begin 1
  (multi-recurse) exec("multi-recurse 0")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 30 00 |multi-recurse.0.|
  (multi-recurse) begin 0
  (multi-recurse) end 0
- multi-recurse: exit(0)
+ multi-recurse : exit(0)
  (multi-recurse) end 1
- multi-recurse: exit(1)
+ multi-recurse : exit(1)
  (multi-recurse) end 2
- multi-recurse: exit(2)
+ multi-recurse : exit(2)
  (multi-recurse) end 3
- multi-recurse: exit(3)
+ multi-recurse : exit(3)
  (multi-recurse) end 4
- multi-recurse: exit(4)
+ multi-recurse : exit(4)
  (multi-recurse) end 5
- multi-recurse: exit(5)
+ multi-recurse : exit(5)
  (multi-recurse) end 6
- multi-recurse: exit(6)
+ multi-recurse : exit(6)
  (multi-recurse) end 7
- multi-recurse: exit(7)
+ multi-recurse : exit(7)
  (multi-recurse) end 8
- multi-recurse: exit(8)
+ multi-recurse : exit(8)
  (multi-recurse) end 9
- multi-recurse: exit(9)
+ multi-recurse : exit(9)
  (multi-recurse) end 10
- multi-recurse: exit(10)
+ multi-recurse : exit(10)
  (multi-recurse) end 11
- multi-recurse: exit(11)
+ multi-recurse : exit(11)
  (multi-recurse) end 12
- multi-recurse: exit(12)
+ multi-recurse : exit(12)
  (multi-recurse) end 13
- multi-recurse: exit(13)
+ multi-recurse : exit(13)
  (multi-recurse) end 14
- multi-recurse: exit(14)
+ multi-recurse : exit(14)
  (multi-recurse) end 15
- multi-recurse: exit(15)
+ multi-recurse : exit(15)
gcc -c ../../tests/userprog/multi-child-fd.c -o tests/userprog/multi-child-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/multi-child-fd.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/multi-child-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/multi-child-fd
gcc -c ../../tests/userprog/child-close.c -o tests/userprog/child-close.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-close.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-close.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-close
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/multi-child-fd -a multi-child-fd -p ../../tests/userprog/sample.txt -a sample.txt -p tests/userprog/child-close -a child-close -- -q    -f run multi-child-fd < /dev/null 2> tests/userprog/multi-child-fd.errors |tee tests/userprog/multi-child-fd.output
Copying tests/userprog/multi-child-fd to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
Copying tests/userprog/child-close to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-child-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 195 sectors (97 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Erasing ustar archive...
Executing 'multi-child-fd':
bfffffd0                                         00 00 00 |             ...|
bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
bffffff0  00 6d 75 6c 74 69 2d 63-68 69 6c 64 2d 66 64 00 |.multi-child-fd.|
(multi-child-fd) begin
(multi-child-fd) open "sample.txt"
bfffffd0                                00 00 00 00 02 00 |          ......|
bfffffe0  00 00 e6 ff ff bf f2 ff-ff bf fe ff ff bf 00 00 |................|
bffffff0  00 00 63 68 69 6c 64 2d-63 6c 6f 73 65 00 32 00 |..child-close.2.|
(child-close) begin
(child-close) end
child-close : exit(0)
(multi-child-fd) wait(exec()) = 0
(multi-child-fd) verified contents of "sample.txt"
(multi-child-fd) end
multi-child-fd : exit(0)
Execution of 'multi-child-fd' complete.
Timer: 551 ticks
Thread: 86 idle ticks, 325 kernel ticks, 143 user ticks
hda2 (filesys): 157 reads, 398 writes
hda3 (scratch): 194 reads, 2 writes
Console: 1657 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/multi-child-fd.ck tests/userprog/multi-child-fd tests/userprog/multi-child-fd.result
FAIL tests/userprog/multi-child-fd
Test output failed to match any acceptable form.

Acceptable output:
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
  (child-close) begin
  child-close: exit(-1)
  (multi-child-fd) wait(exec()) = -1
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
  multi-child-fd: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 6d 75 6c 74 69 2d 63-68 69 6c 64 2d 66 64 00 |.multi-child-fd.|
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
+ bfffffd0                                00 00 00 00 02 00 |          ......|
+ bfffffe0  00 00 e6 ff ff bf f2 ff-ff bf fe ff ff bf 00 00 |................|
+ bffffff0  00 00 63 68 69 6c 64 2d-63 6c 6f 73 65 00 32 00 |..child-close.2.|
  (child-close) begin
- child-close: exit(-1)
- (multi-child-fd) wait(exec()) = -1
+ (child-close) end
+ child-close : exit(0)
+ (multi-child-fd) wait(exec()) = 0
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
- multi-child-fd: exit(0)
+ multi-child-fd : exit(0)
Acceptable output:
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
  (child-close) begin
  (child-close) end
  child-close: exit(0)
  (multi-child-fd) wait(exec()) = 0
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
  multi-child-fd: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 6d 75 6c 74 69 2d 63-68 69 6c 64 2d 66 64 00 |.multi-child-fd.|
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
+ bfffffd0                                00 00 00 00 02 00 |          ......|
+ bfffffe0  00 00 e6 ff ff bf f2 ff-ff bf fe ff ff bf 00 00 |................|
+ bffffff0  00 00 63 68 69 6c 64 2d-63 6c 6f 73 65 00 32 00 |..child-close.2.|
  (child-close) begin
  (child-close) end
- child-close: exit(0)
+ child-close : exit(0)
  (multi-child-fd) wait(exec()) = 0
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
- multi-child-fd: exit(0)
+ multi-child-fd : exit(0)
gcc -c ../../tests/userprog/rox-simple.c -o tests/userprog/rox-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-simple.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-simple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-simple
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/rox-simple -a rox-simple -- -q    -f run rox-simple < /dev/null 2> tests/userprog/rox-simple.errors |tee tests/userprog/rox-simple.output
Copying tests/userprog/rox-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-simple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-simple' into the file system...
Erasing ustar archive...
Executing 'rox-simple':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 72 6f 78-2d 73 69 6d 70 6c 65 00 |.....rox-simple.|
(rox-simple) begin
(rox-simple) open "rox-simple"
(rox-simple) read "rox-simple"
(rox-simple) try to write "rox-simple"
(rox-simple) end
rox-simple : exit(0)
Execution of 'rox-simple' complete.
Timer: 315 ticks
Thread: 43 idle ticks, 212 kernel ticks, 62 user ticks
hda2 (filesys): 68 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1147 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/rox-simple.ck tests/userprog/rox-simple tests/userprog/rox-simple.result
FAIL tests/userprog/rox-simple
Test output failed to match any acceptable form.

Acceptable output:
  (rox-simple) begin
  (rox-simple) open "rox-simple"
  (rox-simple) read "rox-simple"
  (rox-simple) try to write "rox-simple"
  (rox-simple) end
  rox-simple: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 72 6f 78-2d 73 69 6d 70 6c 65 00 |.....rox-simple.|
  (rox-simple) begin
  (rox-simple) open "rox-simple"
  (rox-simple) read "rox-simple"
  (rox-simple) try to write "rox-simple"
  (rox-simple) end
- rox-simple: exit(0)
+ rox-simple : exit(0)
gcc -c ../../tests/userprog/rox-child.c -o tests/userprog/rox-child.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-child.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-child.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-child
gcc -c ../../tests/userprog/child-rox.c -o tests/userprog/child-rox.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-rox.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-rox.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-rox
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/rox-child -a rox-child -p tests/userprog/child-rox -a child-rox -- -q    -f run rox-child < /dev/null 2> tests/userprog/rox-child.errors |tee tests/userprog/rox-child.output
Copying tests/userprog/rox-child to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-child
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 195 sectors (97 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-child':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 72 6f-78 2d 63 68 69 6c 64 00 |......rox-child.|
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
(rox-child) write "child-rox"
(rox-child) exec "child-rox 1"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 31 00 |....child-rox.1.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(rox-child) write "child-rox"
(rox-child) end
rox-child : exit(0)
Execution of 'rox-child' complete.
Timer: 533 ticks
Thread: 87 idle ticks, 303 kernel ticks, 146 user ticks
hda2 (filesys): 138 reads, 398 writes
hda3 (scratch): 194 reads, 2 writes
Console: 1596 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/rox-child.ck tests/userprog/rox-child tests/userprog/rox-child.result
FAIL tests/userprog/rox-child
Test output failed to match any acceptable form.

Acceptable output:
  (rox-child) begin
  (rox-child) open "child-rox"
  (rox-child) read "child-rox"
  (rox-child) write "child-rox"
  (rox-child) exec "child-rox 1"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (rox-child) write "child-rox"
  (rox-child) end
  rox-child: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 72 6f-78 2d 63 68 69 6c 64 00 |......rox-child.|
  (rox-child) begin
  (rox-child) open "child-rox"
  (rox-child) read "child-rox"
  (rox-child) write "child-rox"
  (rox-child) exec "child-rox 1"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 31 00 |....child-rox.1.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (rox-child) write "child-rox"
  (rox-child) end
- rox-child: exit(0)
+ rox-child : exit(0)
gcc -c ../../tests/userprog/rox-multichild.c -o tests/userprog/rox-multichild.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-multichild.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-multichild.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-multichild
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/rox-multichild -a rox-multichild -p tests/userprog/child-rox -a child-rox -- -q    -f run rox-multichild < /dev/null 2> tests/userprog/rox-multichild.errors |tee tests/userprog/rox-multichild.output
Copying tests/userprog/rox-multichild to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-multichild
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 195 sectors (97 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-multichild':
bfffffd0                                         00 00 00 |             ...|
bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
bffffff0  00 72 6f 78 2d 6d 75 6c-74 69 63 68 69 6c 64 00 |.rox-multichild.|
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
(rox-multichild) write "child-rox"
(rox-multichild) exec "child-rox 5"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 35 00 |....child-rox.5.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 4"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 34 00 |....child-rox.4.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 3"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 33 00 |....child-rox.3.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 2"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 32 00 |....child-rox.2.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 1"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 31 00 |....child-rox.1.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(rox-multichild) write "child-rox"
(rox-multichild) end
rox-multichild : exit(0)
Execution of 'rox-multichild' complete.
Timer: 933 ticks
Thread: 88 idle ticks, 375 kernel ticks, 473 user ticks
hda2 (filesys): 302 reads, 398 writes
hda3 (scratch): 194 reads, 2 writes
Console: 3297 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/rox-multichild.ck tests/userprog/rox-multichild tests/userprog/rox-multichild.result
FAIL tests/userprog/rox-multichild
Test output failed to match any acceptable form.

Acceptable output:
  (rox-multichild) begin
  (rox-multichild) open "child-rox"
  (rox-multichild) read "child-rox"
  (rox-multichild) write "child-rox"
  (rox-multichild) exec "child-rox 5"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 4"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 3"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 2"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 1"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (rox-multichild) write "child-rox"
  (rox-multichild) end
  rox-multichild: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 72 6f 78 2d 6d 75 6c-74 69 63 68 69 6c 64 00 |.rox-multichild.|
  (rox-multichild) begin
  (rox-multichild) open "child-rox"
  (rox-multichild) read "child-rox"
  (rox-multichild) write "child-rox"
  (rox-multichild) exec "child-rox 5"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 35 00 |....child-rox.5.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 4"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 34 00 |....child-rox.4.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 3"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 33 00 |....child-rox.3.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 2"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 32 00 |....child-rox.2.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 1"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 31 00 |....child-rox.1.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (rox-multichild) write "child-rox"
  (rox-multichild) end
- rox-multichild: exit(0)
+ rox-multichild : exit(0)
gcc -c ../../tests/userprog/bad-read.c -o tests/userprog/bad-read.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-read.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-read.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-read
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/bad-read -a bad-read -- -q    -f run bad-read < /dev/null 2> tests/userprog/bad-read.errors |tee tests/userprog/bad-read.output
Copying tests/userprog/bad-read to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-read
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read' into the file system...
Erasing ustar archive...
Executing 'bad-read':
bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
bffffff0  ff ff bf 00 00 00 00 62-61 64 2d 72 65 61 64 00 |.......bad-read.|
(bad-read) begin
PAGE FAULT!!!
bad-read : exit(-1)
Execution of 'bad-read' complete.
Timer: 300 ticks
Thread: 42 idle ticks, 213 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1032 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/bad-read.ck tests/userprog/bad-read tests/userprog/bad-read.result
FAIL tests/userprog/bad-read
Test output failed to match any acceptable form.

Acceptable output:
  (bad-read) begin
  bad-read: exit(-1)
Differences in `diff -u' format:
+ bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
+ bffffff0  ff ff bf 00 00 00 00 62-61 64 2d 72 65 61 64 00 |.......bad-read.|
  (bad-read) begin
- bad-read: exit(-1)
+ PAGE FAULT!!!
+ bad-read : exit(-1)

(User fault messages are excluded for matching purposes.)
gcc -c ../../tests/userprog/bad-write.c -o tests/userprog/bad-write.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-write.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-write.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-write
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/bad-write -a bad-write -- -q    -f run bad-write < /dev/null 2> tests/userprog/bad-write.errors |tee tests/userprog/bad-write.output
Copying tests/userprog/bad-write to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-write
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write' into the file system...
Erasing ustar archive...
Executing 'bad-write':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 62 61-64 2d 77 72 69 74 65 00 |......bad-write.|
(bad-write) begin
PAGE FAULT!!!
bad-write : exit(-1)
Execution of 'bad-write' complete.
Timer: 299 ticks
Thread: 41 idle ticks, 212 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1038 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/bad-write.ck tests/userprog/bad-write tests/userprog/bad-write.result
FAIL tests/userprog/bad-write
Test output failed to match any acceptable form.

Acceptable output:
  (bad-write) begin
  bad-write: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 62 61-64 2d 77 72 69 74 65 00 |......bad-write.|
  (bad-write) begin
- bad-write: exit(-1)
+ PAGE FAULT!!!
+ bad-write : exit(-1)

(User fault messages are excluded for matching purposes.)
gcc -c ../../tests/userprog/bad-read2.c -o tests/userprog/bad-read2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-read2.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-read2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-read2
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/bad-read2 -a bad-read2 -- -q    -f run bad-read2 < /dev/null 2> tests/userprog/bad-read2.errors |tee tests/userprog/bad-read2.output
Copying tests/userprog/bad-read2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-read2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read2' into the file system...
Erasing ustar archive...
Executing 'bad-read2':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 62 61-64 2d 72 65 61 64 32 00 |......bad-read2.|
(bad-read2) begin
PAGE FAULT!!!
bad-read2 : exit(-1)
Execution of 'bad-read2' complete.
Timer: 300 ticks
Thread: 42 idle ticks, 211 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1038 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/bad-read2.ck tests/userprog/bad-read2 tests/userprog/bad-read2.result
FAIL tests/userprog/bad-read2
Test output failed to match any acceptable form.

Acceptable output:
  (bad-read2) begin
  bad-read2: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 62 61-64 2d 72 65 61 64 32 00 |......bad-read2.|
  (bad-read2) begin
- bad-read2: exit(-1)
+ PAGE FAULT!!!
+ bad-read2 : exit(-1)

(User fault messages are excluded for matching purposes.)
gcc -c ../../tests/userprog/bad-write2.c -o tests/userprog/bad-write2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-write2.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-write2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-write2
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/bad-write2 -a bad-write2 -- -q    -f run bad-write2 < /dev/null 2> tests/userprog/bad-write2.errors |tee tests/userprog/bad-write2.output
Copying tests/userprog/bad-write2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-write2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write2' into the file system...
Erasing ustar archive...
Executing 'bad-write2':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 62 61 64-2d 77 72 69 74 65 32 00 |.....bad-write2.|
(bad-write2) begin
PAGE FAULT!!!
bad-write2 : exit(-1)
Execution of 'bad-write2' complete.
Timer: 299 ticks
Thread: 42 idle ticks, 212 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1044 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/bad-write2.ck tests/userprog/bad-write2 tests/userprog/bad-write2.result
FAIL tests/userprog/bad-write2
Test output failed to match any acceptable form.

Acceptable output:
  (bad-write2) begin
  bad-write2: exit(-1)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 62 61 64-2d 77 72 69 74 65 32 00 |.....bad-write2.|
  (bad-write2) begin
- bad-write2: exit(-1)
+ PAGE FAULT!!!
+ bad-write2 : exit(-1)

(User fault messages are excluded for matching purposes.)
gcc -c ../../tests/userprog/bad-jump.c -o tests/userprog/bad-jump.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-jump.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-jump.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-jump
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/bad-jump -a bad-jump -- -q    -f run bad-jump < /dev/null 2> tests/userprog/bad-jump.errors |tee tests/userprog/bad-jump.output
Copying tests/userprog/bad-jump to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-jump
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump' into the file system...
Erasing ustar archive...
Executing 'bad-jump':
bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
bffffff0  ff ff bf 00 00 00 00 62-61 64 2d 6a 75 6d 70 00 |.......bad-jump.|
(bad-jump) begin
PAGE FAULT!!!
bad-jump : exit(-1)
Execution of 'bad-jump' complete.
Timer: 298 ticks
Thread: 41 idle ticks, 213 kernel ticks, 47 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1032 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/bad-jump.ck tests/userprog/bad-jump tests/userprog/bad-jump.result
FAIL tests/userprog/bad-jump
Test output failed to match any acceptable form.

Acceptable output:
  (bad-jump) begin
  bad-jump: exit(-1)
Differences in `diff -u' format:
+ bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
+ bffffff0  ff ff bf 00 00 00 00 62-61 64 2d 6a 75 6d 70 00 |.......bad-jump.|
  (bad-jump) begin
- bad-jump: exit(-1)
+ PAGE FAULT!!!
+ bad-jump : exit(-1)

(User fault messages are excluded for matching purposes.)
gcc -c ../../tests/userprog/bad-jump2.c -o tests/userprog/bad-jump2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-jump2.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-jump2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-jump2
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/userprog/bad-jump2 -a bad-jump2 -- -q    -f run bad-jump2 < /dev/null 2> tests/userprog/bad-jump2.errors |tee tests/userprog/bad-jump2.output
Copying tests/userprog/bad-jump2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-jump2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump2' into the file system...
Erasing ustar archive...
Executing 'bad-jump2':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 62 61-64 2d 6a 75 6d 70 32 00 |......bad-jump2.|
(bad-jump2) begin
PAGE FAULT!!!
bad-jump2 : exit(-1)
Execution of 'bad-jump2' complete.
Timer: 300 ticks
Thread: 42 idle ticks, 211 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1038 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/bad-jump2.ck tests/userprog/bad-jump2 tests/userprog/bad-jump2.result
FAIL tests/userprog/bad-jump2
Test output failed to match any acceptable form.

Acceptable output:
  (bad-jump2) begin
  bad-jump2: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 62 61-64 2d 6a 75 6d 70 32 00 |......bad-jump2.|
  (bad-jump2) begin
- bad-jump2: exit(-1)
+ PAGE FAULT!!!
+ bad-jump2 : exit(-1)

(User fault messages are excluded for matching purposes.)
gcc -c ../../tests/userprog/no-vm/multi-oom.c -o tests/userprog/no-vm/multi-oom.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/no-vm/multi-oom.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/no-vm/multi-oom.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/no-vm/multi-oom
pintos -v -k -T 360 --bochs  --filesys-size=2 -p tests/userprog/no-vm/multi-oom -a multi-oom -- -q    -f run multi-oom < /dev/null 2> tests/userprog/no-vm/multi-oom.errors |tee tests/userprog/no-vm/multi-oom.output
Copying tests/userprog/no-vm/multi-oom to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-oom
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-oom' into the file system...
Erasing ustar archive...
Executing 'multi-oom':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 6d 75-6c 74 69 2d 6f 6f 6d 00 |......multi-oom.|
(multi-oom) begin
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 31 00 |....multi-oom.1.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 32 00 |....multi-oom.2.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 33 00 |....multi-oom.3.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 34 00 |....multi-oom.4.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 35 00 |....multi-oom.5.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 36 00 |....multi-oom.6.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 37 00 |....multi-oom.7.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 38 00 |....multi-oom.8.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 39 00 |....multi-oom.9.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 30 00 |...multi-oom.10.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 31 00 |...multi-oom.11.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 32 00 |...multi-oom.12.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 33 00 |...multi-oom.13.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 34 00 |...multi-oom.14.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 35 00 |...multi-oom.15.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 36 00 |...multi-oom.16.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 31 37 00 2d 6b 00 |multi-oom.17.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 37 00 |...multi-oom.17.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 31 38 00 2d 6b 00 |multi-oom.18.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 38 00 |...multi-oom.18.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 31 39 00 2d 6b 00 |multi-oom.19.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 39 00 |...multi-oom.19.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 32 30 00 2d 6b 00 |multi-oom.20.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 32 30 00 |...multi-oom.20.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 32 31 00 2d 6b 00 |multi-oom.21.-k.|
PAGE FAULT!!!
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 32 31 00 |...multi-oom.21.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 32 32 00 2d 6b 00 |multi-oom.22.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
Kernel PANIC at ../../threads/malloc.c:246 in free(): assertion `a->free_cnt == d->blocks_per_arena' failed.
Call stack: 0xc002866e 0 0.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../threads/synch.c:197 in lock_acquire().
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FPiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-oom
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Erasing ustar archive...
Executing 'multi-oom':
load: multi-oom: open failed
Execution of 'multi-oom' complete.
Timer: 149 ticks
Thread: 2 idle ticks, 135 kernel ticks, 14 user ticks
hda2 (filesys): 20 reads, 6 writes
hda3 (scratch): 1 reads, 2 writes
Console: 813 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/userprog/no-vm/multi-oom.ck tests/userprog/no-vm/multi-oom tests/userprog/no-vm/multi-oom.result
FAIL tests/userprog/no-vm/multi-oom
Kernel panic in run: PANIC at ../../threads/malloc.c:246 in free(): assertion `a->free_cnt == d->blocks_per_arena' failed.
Call stack: 0xc002866e
Translation of call stack:
0xc002866e: debug_panic (.../../lib/kernel/debug.c:38)
gcc -c ../../tests/filesys/base/lg-create.c -o tests/filesys/base/lg-create.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-create.d
gcc -c ../../tests/filesys/seq-test.c -o tests/filesys/seq-test.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/seq-test.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-create.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-create
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/lg-create -a lg-create -- -q    -f run lg-create < /dev/null 2> tests/filesys/base/lg-create.errors |tee tests/filesys/base/lg-create.output
Copying tests/filesys/base/lg-create to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-create
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-create' into the file system...
Erasing ustar archive...
Executing 'lg-create':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 6c 67-2d 63 72 65 61 74 65 00 |......lg-create.|
(lg-create) begin
(lg-create) create "blargle"
(lg-create) open "blargle" for verification
(lg-create) verified contents of "blargle"
(lg-create) close "blargle"
(lg-create) end
lg-create : exit(0)
Execution of 'lg-create' complete.
Timer: 512 ticks
Thread: 43 idle ticks, 245 kernel ticks, 227 user ticks
hda2 (filesys): 237 reads, 346 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1185 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/lg-create.ck tests/filesys/base/lg-create tests/filesys/base/lg-create.result
FAIL tests/filesys/base/lg-create
Test output failed to match any acceptable form.

Acceptable output:
  (lg-create) begin
  (lg-create) create "blargle"
  (lg-create) open "blargle" for verification
  (lg-create) verified contents of "blargle"
  (lg-create) close "blargle"
  (lg-create) end
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 6c 67-2d 63 72 65 61 74 65 00 |......lg-create.|
  (lg-create) begin
  (lg-create) create "blargle"
  (lg-create) open "blargle" for verification
  (lg-create) verified contents of "blargle"
  (lg-create) close "blargle"
  (lg-create) end
+ lg-create : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/lg-full.c -o tests/filesys/base/lg-full.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-full.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-full.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-full
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/lg-full -a lg-full -- -q    -f run lg-full < /dev/null 2> tests/filesys/base/lg-full.errors |tee tests/filesys/base/lg-full.output
Copying tests/filesys/base/lg-full to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-full
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-full' into the file system...
Erasing ustar archive...
Executing 'lg-full':
bfffffe0              00 00 00 00-01 00 00 00 f0 ff ff bf |    ............|
bffffff0  f8 ff ff bf 00 00 00 00-6c 67 2d 66 75 6c 6c 00 |........lg-full.|
(lg-full) begin
(lg-full) create "quux"
(lg-full) open "quux"
(lg-full) writing "quux"
(lg-full) close "quux"
(lg-full) open "quux" for verification
(lg-full) verified contents of "quux"
(lg-full) close "quux"
(lg-full) end
lg-full : exit(0)
Execution of 'lg-full' complete.
Timer: 678 ticks
Thread: 47 idle ticks, 243 kernel ticks, 391 user ticks
hda2 (filesys): 242 reads, 494 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1221 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/lg-full.ck tests/filesys/base/lg-full tests/filesys/base/lg-full.result
FAIL tests/filesys/base/lg-full
Test output failed to match any acceptable form.

Acceptable output:
  (lg-full) begin
  (lg-full) create "quux"
  (lg-full) open "quux"
  (lg-full) writing "quux"
  (lg-full) close "quux"
  (lg-full) open "quux" for verification
  (lg-full) verified contents of "quux"
  (lg-full) close "quux"
  (lg-full) end
Differences in `diff -u' format:
+ bfffffe0              00 00 00 00-01 00 00 00 f0 ff ff bf |    ............|
+ bffffff0  f8 ff ff bf 00 00 00 00-6c 67 2d 66 75 6c 6c 00 |........lg-full.|
  (lg-full) begin
  (lg-full) create "quux"
  (lg-full) open "quux"
  (lg-full) writing "quux"
  (lg-full) close "quux"
  (lg-full) open "quux" for verification
  (lg-full) verified contents of "quux"
  (lg-full) close "quux"
  (lg-full) end
+ lg-full : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/lg-random.c -o tests/filesys/base/lg-random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-random.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-random.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-random
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/lg-random -a lg-random -- -q    -f run lg-random < /dev/null 2> tests/filesys/base/lg-random.errors |tee tests/filesys/base/lg-random.output
Copying tests/filesys/base/lg-random to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 97 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-random' into the file system...
Erasing ustar archive...
Executing 'lg-random':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 6c 67-2d 72 61 6e 64 6f 6d 00 |......lg-random.|
(lg-random) begin
(lg-random) create "bazzle"
(lg-random) open "bazzle"
(lg-random) write "bazzle" in random order
(lg-random) read "bazzle" in random order
(lg-random) close "bazzle"
(lg-random) end
lg-random : exit(0)
Execution of 'lg-random' complete.
Timer: 708 ticks
Thread: 51 idle ticks, 248 kernel ticks, 411 user ticks
hda2 (filesys): 233 reads, 502 writes
hda3 (scratch): 96 reads, 2 writes
Console: 1207 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/lg-random.ck tests/filesys/base/lg-random tests/filesys/base/lg-random.result
FAIL tests/filesys/base/lg-random
Test output failed to match any acceptable form.

Acceptable output:
  (lg-random) begin
  (lg-random) create "bazzle"
  (lg-random) open "bazzle"
  (lg-random) write "bazzle" in random order
  (lg-random) read "bazzle" in random order
  (lg-random) close "bazzle"
  (lg-random) end
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 6c 67-2d 72 61 6e 64 6f 6d 00 |......lg-random.|
  (lg-random) begin
  (lg-random) create "bazzle"
  (lg-random) open "bazzle"
  (lg-random) write "bazzle" in random order
  (lg-random) read "bazzle" in random order
  (lg-random) close "bazzle"
  (lg-random) end
+ lg-random : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/lg-seq-block.c -o tests/filesys/base/lg-seq-block.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-seq-block.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-seq-block.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-seq-block
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/lg-seq-block -a lg-seq-block -- -q    -f run lg-seq-block < /dev/null 2> tests/filesys/base/lg-seq-block.errors |tee tests/filesys/base/lg-seq-block.output
Copying tests/filesys/base/lg-seq-block to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-seq-block
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-block' into the file system...
Erasing ustar archive...
Executing 'lg-seq-block':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 6c 67 2d 73 65-71 2d 62 6c 6f 63 6b 00 |...lg-seq-block.|
(lg-seq-block) begin
(lg-seq-block) create "noodle"
(lg-seq-block) open "noodle"
(lg-seq-block) writing "noodle"
(lg-seq-block) close "noodle"
(lg-seq-block) open "noodle" for verification
(lg-seq-block) verified contents of "noodle"
(lg-seq-block) close "noodle"
(lg-seq-block) end
lg-seq-block : exit(0)
Execution of 'lg-seq-block' complete.
Timer: 855 ticks
Thread: 43 idle ticks, 246 kernel ticks, 569 user ticks
hda2 (filesys): 535 reads, 641 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1382 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/lg-seq-block.ck tests/filesys/base/lg-seq-block tests/filesys/base/lg-seq-block.result
FAIL tests/filesys/base/lg-seq-block
Test output failed to match any acceptable form.

Acceptable output:
  (lg-seq-block) begin
  (lg-seq-block) create "noodle"
  (lg-seq-block) open "noodle"
  (lg-seq-block) writing "noodle"
  (lg-seq-block) close "noodle"
  (lg-seq-block) open "noodle" for verification
  (lg-seq-block) verified contents of "noodle"
  (lg-seq-block) close "noodle"
  (lg-seq-block) end
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 6c 67 2d 73 65-71 2d 62 6c 6f 63 6b 00 |...lg-seq-block.|
  (lg-seq-block) begin
  (lg-seq-block) create "noodle"
  (lg-seq-block) open "noodle"
  (lg-seq-block) writing "noodle"
  (lg-seq-block) close "noodle"
  (lg-seq-block) open "noodle" for verification
  (lg-seq-block) verified contents of "noodle"
  (lg-seq-block) close "noodle"
  (lg-seq-block) end
+ lg-seq-block : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/lg-seq-random.c -o tests/filesys/base/lg-seq-random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-seq-random.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-seq-random.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-seq-random
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/lg-seq-random -a lg-seq-random -- -q    -f run lg-seq-random < /dev/null 2> tests/filesys/base/lg-seq-random.errors |tee tests/filesys/base/lg-seq-random.output
Copying tests/filesys/base/lg-seq-random to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-seq-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-random' into the file system...
Erasing ustar archive...
Executing 'lg-seq-random':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 6c 67 2d 73 65 71-2d 72 61 6e 64 6f 6d 00 |..lg-seq-random.|
(lg-seq-random) begin
(lg-seq-random) create "nibble"
(lg-seq-random) open "nibble"
(lg-seq-random) writing "nibble"
(lg-seq-random) close "nibble"
(lg-seq-random) open "nibble" for verification
(lg-seq-random) verified contents of "nibble"
(lg-seq-random) close "nibble"
(lg-seq-random) end
lg-seq-random : exit(0)
Execution of 'lg-seq-random' complete.
Timer: 848 ticks
Thread: 43 idle ticks, 246 kernel ticks, 561 user ticks
hda2 (filesys): 505 reads, 646 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1396 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/lg-seq-random.ck tests/filesys/base/lg-seq-random tests/filesys/base/lg-seq-random.result
FAIL tests/filesys/base/lg-seq-random
Test output failed to match any acceptable form.

Acceptable output:
  (lg-seq-random) begin
  (lg-seq-random) create "nibble"
  (lg-seq-random) open "nibble"
  (lg-seq-random) writing "nibble"
  (lg-seq-random) close "nibble"
  (lg-seq-random) open "nibble" for verification
  (lg-seq-random) verified contents of "nibble"
  (lg-seq-random) close "nibble"
  (lg-seq-random) end
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 6c 67 2d 73 65 71-2d 72 61 6e 64 6f 6d 00 |..lg-seq-random.|
  (lg-seq-random) begin
  (lg-seq-random) create "nibble"
  (lg-seq-random) open "nibble"
  (lg-seq-random) writing "nibble"
  (lg-seq-random) close "nibble"
  (lg-seq-random) open "nibble" for verification
  (lg-seq-random) verified contents of "nibble"
  (lg-seq-random) close "nibble"
  (lg-seq-random) end
+ lg-seq-random : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/sm-create.c -o tests/filesys/base/sm-create.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-create.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-create.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-create
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/sm-create -a sm-create -- -q    -f run sm-create < /dev/null 2> tests/filesys/base/sm-create.errors |tee tests/filesys/base/sm-create.output
Copying tests/filesys/base/sm-create to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-create
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-create' into the file system...
Erasing ustar archive...
Executing 'sm-create':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 73 6d-2d 63 72 65 61 74 65 00 |......sm-create.|
(sm-create) begin
(sm-create) create "blargle"
(sm-create) open "blargle" for verification
(sm-create) verified contents of "blargle"
(sm-create) close "blargle"
(sm-create) end
sm-create : exit(0)
Execution of 'sm-create' complete.
Timer: 348 ticks
Thread: 43 idle ticks, 216 kernel ticks, 92 user ticks
hda2 (filesys): 101 reads, 210 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1184 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/sm-create.ck tests/filesys/base/sm-create tests/filesys/base/sm-create.result
FAIL tests/filesys/base/sm-create
Test output failed to match any acceptable form.

Acceptable output:
  (sm-create) begin
  (sm-create) create "blargle"
  (sm-create) open "blargle" for verification
  (sm-create) verified contents of "blargle"
  (sm-create) close "blargle"
  (sm-create) end
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 73 6d-2d 63 72 65 61 74 65 00 |......sm-create.|
  (sm-create) begin
  (sm-create) create "blargle"
  (sm-create) open "blargle" for verification
  (sm-create) verified contents of "blargle"
  (sm-create) close "blargle"
  (sm-create) end
+ sm-create : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/sm-full.c -o tests/filesys/base/sm-full.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-full.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-full.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-full
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/sm-full -a sm-full -- -q    -f run sm-full < /dev/null 2> tests/filesys/base/sm-full.errors |tee tests/filesys/base/sm-full.output
Copying tests/filesys/base/sm-full to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-full
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-full' into the file system...
Erasing ustar archive...
Executing 'sm-full':
bfffffe0              00 00 00 00-01 00 00 00 f0 ff ff bf |    ............|
bffffff0  f8 ff ff bf 00 00 00 00-73 6d 2d 66 75 6c 6c 00 |........sm-full.|
(sm-full) begin
(sm-full) create "quux"
(sm-full) open "quux"
(sm-full) writing "quux"
(sm-full) close "quux"
(sm-full) open "quux" for verification
(sm-full) verified contents of "quux"
(sm-full) close "quux"
(sm-full) end
sm-full : exit(0)
Execution of 'sm-full' complete.
Timer: 372 ticks
Thread: 45 idle ticks, 214 kernel ticks, 116 user ticks
hda2 (filesys): 106 reads, 222 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1221 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/sm-full.ck tests/filesys/base/sm-full tests/filesys/base/sm-full.result
FAIL tests/filesys/base/sm-full
Test output failed to match any acceptable form.

Acceptable output:
  (sm-full) begin
  (sm-full) create "quux"
  (sm-full) open "quux"
  (sm-full) writing "quux"
  (sm-full) close "quux"
  (sm-full) open "quux" for verification
  (sm-full) verified contents of "quux"
  (sm-full) close "quux"
  (sm-full) end
Differences in `diff -u' format:
+ bfffffe0              00 00 00 00-01 00 00 00 f0 ff ff bf |    ............|
+ bffffff0  f8 ff ff bf 00 00 00 00-73 6d 2d 66 75 6c 6c 00 |........sm-full.|
  (sm-full) begin
  (sm-full) create "quux"
  (sm-full) open "quux"
  (sm-full) writing "quux"
  (sm-full) close "quux"
  (sm-full) open "quux" for verification
  (sm-full) verified contents of "quux"
  (sm-full) close "quux"
  (sm-full) end
+ sm-full : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/sm-random.c -o tests/filesys/base/sm-random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-random.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-random.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-random
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/sm-random -a sm-random -- -q    -f run sm-random < /dev/null 2> tests/filesys/base/sm-random.errors |tee tests/filesys/base/sm-random.output
Copying tests/filesys/base/sm-random to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 97 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-random' into the file system...
Erasing ustar archive...
Executing 'sm-random':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 73 6d-2d 72 61 6e 64 6f 6d 00 |......sm-random.|
(sm-random) begin
(sm-random) create "bazzle"
(sm-random) open "bazzle"
(sm-random) write "bazzle" in random order
(sm-random) read "bazzle" in random order
(sm-random) close "bazzle"
(sm-random) end
sm-random : exit(0)
Execution of 'sm-random' complete.
Timer: 507 ticks
Thread: 44 idle ticks, 216 kernel ticks, 249 user ticks
hda2 (filesys): 335 reads, 332 writes
hda3 (scratch): 96 reads, 2 writes
Console: 1207 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/sm-random.ck tests/filesys/base/sm-random tests/filesys/base/sm-random.result
FAIL tests/filesys/base/sm-random
Test output failed to match any acceptable form.

Acceptable output:
  (sm-random) begin
  (sm-random) create "bazzle"
  (sm-random) open "bazzle"
  (sm-random) write "bazzle" in random order
  (sm-random) read "bazzle" in random order
  (sm-random) close "bazzle"
  (sm-random) end
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 73 6d-2d 72 61 6e 64 6f 6d 00 |......sm-random.|
  (sm-random) begin
  (sm-random) create "bazzle"
  (sm-random) open "bazzle"
  (sm-random) write "bazzle" in random order
  (sm-random) read "bazzle" in random order
  (sm-random) close "bazzle"
  (sm-random) end
+ sm-random : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/sm-seq-block.c -o tests/filesys/base/sm-seq-block.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-seq-block.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-seq-block.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-seq-block
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/sm-seq-block -a sm-seq-block -- -q    -f run sm-seq-block < /dev/null 2> tests/filesys/base/sm-seq-block.errors |tee tests/filesys/base/sm-seq-block.output
Copying tests/filesys/base/sm-seq-block to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-seq-block
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-block' into the file system...
Erasing ustar archive...
Executing 'sm-seq-block':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 73 6d 2d 73 65-71 2d 62 6c 6f 63 6b 00 |...sm-seq-block.|
(sm-seq-block) begin
(sm-seq-block) create "noodle"
(sm-seq-block) open "noodle"
(sm-seq-block) writing "noodle"
(sm-seq-block) close "noodle"
(sm-seq-block) open "noodle" for verification
(sm-seq-block) verified contents of "noodle"
(sm-seq-block) close "noodle"
(sm-seq-block) end
sm-seq-block : exit(0)
Execution of 'sm-seq-block' complete.
Timer: 400 ticks
Thread: 43 idle ticks, 217 kernel ticks, 143 user ticks
hda2 (filesys): 127 reads, 233 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1382 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/sm-seq-block.ck tests/filesys/base/sm-seq-block tests/filesys/base/sm-seq-block.result
FAIL tests/filesys/base/sm-seq-block
Test output failed to match any acceptable form.

Acceptable output:
  (sm-seq-block) begin
  (sm-seq-block) create "noodle"
  (sm-seq-block) open "noodle"
  (sm-seq-block) writing "noodle"
  (sm-seq-block) close "noodle"
  (sm-seq-block) open "noodle" for verification
  (sm-seq-block) verified contents of "noodle"
  (sm-seq-block) close "noodle"
  (sm-seq-block) end
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 73 6d 2d 73 65-71 2d 62 6c 6f 63 6b 00 |...sm-seq-block.|
  (sm-seq-block) begin
  (sm-seq-block) create "noodle"
  (sm-seq-block) open "noodle"
  (sm-seq-block) writing "noodle"
  (sm-seq-block) close "noodle"
  (sm-seq-block) open "noodle" for verification
  (sm-seq-block) verified contents of "noodle"
  (sm-seq-block) close "noodle"
  (sm-seq-block) end
+ sm-seq-block : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/sm-seq-random.c -o tests/filesys/base/sm-seq-random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-seq-random.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-seq-random.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-seq-random
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/sm-seq-random -a sm-seq-random -- -q    -f run sm-seq-random < /dev/null 2> tests/filesys/base/sm-seq-random.errors |tee tests/filesys/base/sm-seq-random.output
Copying tests/filesys/base/sm-seq-random to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-seq-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-random' into the file system...
Erasing ustar archive...
Executing 'sm-seq-random':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 73 6d 2d 73 65 71-2d 72 61 6e 64 6f 6d 00 |..sm-seq-random.|
(sm-seq-random) begin
(sm-seq-random) create "nibble"
(sm-seq-random) open "nibble"
(sm-seq-random) writing "nibble"
(sm-seq-random) close "nibble"
(sm-seq-random) open "nibble" for verification
(sm-seq-random) verified contents of "nibble"
(sm-seq-random) close "nibble"
(sm-seq-random) end
sm-seq-random : exit(0)
Execution of 'sm-seq-random' complete.
Timer: 399 ticks
Thread: 43 idle ticks, 218 kernel ticks, 140 user ticks
hda2 (filesys): 120 reads, 230 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1396 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/sm-seq-random.ck tests/filesys/base/sm-seq-random tests/filesys/base/sm-seq-random.result
FAIL tests/filesys/base/sm-seq-random
Test output failed to match any acceptable form.

Acceptable output:
  (sm-seq-random) begin
  (sm-seq-random) create "nibble"
  (sm-seq-random) open "nibble"
  (sm-seq-random) writing "nibble"
  (sm-seq-random) close "nibble"
  (sm-seq-random) open "nibble" for verification
  (sm-seq-random) verified contents of "nibble"
  (sm-seq-random) close "nibble"
  (sm-seq-random) end
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 73 6d 2d 73 65 71-2d 72 61 6e 64 6f 6d 00 |..sm-seq-random.|
  (sm-seq-random) begin
  (sm-seq-random) create "nibble"
  (sm-seq-random) open "nibble"
  (sm-seq-random) writing "nibble"
  (sm-seq-random) close "nibble"
  (sm-seq-random) open "nibble" for verification
  (sm-seq-random) verified contents of "nibble"
  (sm-seq-random) close "nibble"
  (sm-seq-random) end
+ sm-seq-random : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/syn-read.c -o tests/filesys/base/syn-read.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/syn-read.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/syn-read.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/syn-read
gcc -c ../../tests/filesys/base/child-syn-read.c -o tests/filesys/base/child-syn-read.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/child-syn-read.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/child-syn-read.o tests/lib.o tests/filesys/seq-test.o lib/user/entry.o libc.a -o tests/filesys/base/child-syn-read
pintos -v -k -T 300 --bochs  --filesys-size=2 -p tests/filesys/base/syn-read -a syn-read -p tests/filesys/base/child-syn-read -a child-syn-read -- -q    -f run syn-read < /dev/null 2> tests/filesys/base/syn-read.errors |tee tests/filesys/base/syn-read.output
Copying tests/filesys/base/syn-read to scratch partition...
Copying tests/filesys/base/child-syn-read to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-read
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 200 sectors (100 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Erasing ustar archive...
Executing 'syn-read':
bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
bffffff0  ff ff bf 00 00 00 00 73-79 6e 2d 72 65 61 64 00 |.......syn-read.|
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
(syn-read) exec child 1 of 10: "child-syn-read 0"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .......(syn-read) exec child 2 of 10: "child-syn-read 1"
..|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 30 00 |hild-syn-read.0.|
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 31 00 |hild-syn-read.1.|
(syn-read) exec child 3 of 10: "child-syn-read 2"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 32 00 |hild-syn-read.2.|
(syn-read) exec child 4 of 10: "child-syn-read 3"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 33 00 |hild-syn-read.3.|
(syn-read) exec child 5 of 10: "child-syn-read 4"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 34 00 |hild-syn-read.4.|
(syn-read) exec child 6 of 10: "child-syn-read 5"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 35 00 |hild-syn-read.5.|
(syn-read) exec child 7 of 10: "child-syn-read 6"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 36 00 |hild-syn-read.6.|
(syn-read) exec child 8 of 10: "child-syn-read 7"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 37 00 |hild-syn-read.7.|
(syn-read) exec child 9 of 10: "child-syn-read 8"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 38 00 |hild-syn-read.8.|
(syn-read) exec child 10 of 10: "child-syn-read 9"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 39 00 |hild-syn-read.9.|
child-syn-read : exit(1)
child-syn-read : exit(2)
child-syn-read : exit(3)
child-syn-read : exit(6)
child-syn-read : exit(8)
child-syn-read : exit(0)
child-syn-read : exit(4)
(syn-read) wait for child 1 of 10 returned 0 (expected 0)
(syn-read) wait for child 2 of 10 returned 1 (expected 1)
(syn-read) wait for child 3 of 10 returned 2 (expected 2)
(syn-read) wait for child 4 of 10 returned 3 (expected 3)
(syn-read) wait for child 5 of 10 returned 4 (expected 4)
child-syn-read : exit(5)
(syn-read) wait for child 6 of 10 returned 5 (expected 5)
(syn-read) wait for child 7 of 10 returned 6 (expected 6)
child-syn-read : exit(7)
child-syn-read : exit(9)
(syn-read) wait for child 8 of 10 returned 7 (expected 7)
(syn-read) wait for child 9 of 10 returned 8 (expected 8)
(syn-read) wait for child 10 of 10 returned 9 (expected 9)
(syn-read) end
syn-read : exit(0)
Execution of 'syn-read' complete.
Timer: 7306 ticks
Thread: 89 idle ticks, 464 kernel ticks, 6756 user ticks
hda2 (filesys): 10762 reads, 414 writes
hda3 (scratch): 199 reads, 2 writes
Console: 4828 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/syn-read.ck tests/filesys/base/syn-read tests/filesys/base/syn-read.result
FAIL tests/filesys/base/syn-read
Test output failed to match any acceptable form.

Acceptable output:
  (syn-read) begin
  (syn-read) create "data"
  (syn-read) open "data"
  (syn-read) write "data"
  (syn-read) close "data"
  (syn-read) exec child 1 of 10: "child-syn-read 0"
  (syn-read) exec child 2 of 10: "child-syn-read 1"
  (syn-read) exec child 3 of 10: "child-syn-read 2"
  (syn-read) exec child 4 of 10: "child-syn-read 3"
  (syn-read) exec child 5 of 10: "child-syn-read 4"
  (syn-read) exec child 6 of 10: "child-syn-read 5"
  (syn-read) exec child 7 of 10: "child-syn-read 6"
  (syn-read) exec child 8 of 10: "child-syn-read 7"
  (syn-read) exec child 9 of 10: "child-syn-read 8"
  (syn-read) exec child 10 of 10: "child-syn-read 9"
  (syn-read) wait for child 1 of 10 returned 0 (expected 0)
  (syn-read) wait for child 2 of 10 returned 1 (expected 1)
  (syn-read) wait for child 3 of 10 returned 2 (expected 2)
  (syn-read) wait for child 4 of 10 returned 3 (expected 3)
  (syn-read) wait for child 5 of 10 returned 4 (expected 4)
  (syn-read) wait for child 6 of 10 returned 5 (expected 5)
  (syn-read) wait for child 7 of 10 returned 6 (expected 6)
  (syn-read) wait for child 8 of 10 returned 7 (expected 7)
  (syn-read) wait for child 9 of 10 returned 8 (expected 8)
  (syn-read) wait for child 10 of 10 returned 9 (expected 9)
  (syn-read) end
Differences in `diff -u' format:
+ bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
+ bffffff0  ff ff bf 00 00 00 00 73-79 6e 2d 72 65 61 64 00 |.......syn-read.|
  (syn-read) begin
  (syn-read) create "data"
  (syn-read) open "data"
  (syn-read) write "data"
  (syn-read) close "data"
  (syn-read) exec child 1 of 10: "child-syn-read 0"
- (syn-read) exec child 2 of 10: "child-syn-read 1"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .......(syn-read) exec child 2 of 10: "child-syn-read 1"
+ ..|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 30 00 |hild-syn-read.0.|
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 31 00 |hild-syn-read.1.|
  (syn-read) exec child 3 of 10: "child-syn-read 2"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 32 00 |hild-syn-read.2.|
  (syn-read) exec child 4 of 10: "child-syn-read 3"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 33 00 |hild-syn-read.3.|
  (syn-read) exec child 5 of 10: "child-syn-read 4"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 34 00 |hild-syn-read.4.|
  (syn-read) exec child 6 of 10: "child-syn-read 5"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 35 00 |hild-syn-read.5.|
  (syn-read) exec child 7 of 10: "child-syn-read 6"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 36 00 |hild-syn-read.6.|
  (syn-read) exec child 8 of 10: "child-syn-read 7"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 37 00 |hild-syn-read.7.|
  (syn-read) exec child 9 of 10: "child-syn-read 8"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 38 00 |hild-syn-read.8.|
  (syn-read) exec child 10 of 10: "child-syn-read 9"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 39 00 |hild-syn-read.9.|
+ child-syn-read : exit(1)
+ child-syn-read : exit(2)
+ child-syn-read : exit(3)
+ child-syn-read : exit(6)
+ child-syn-read : exit(8)
+ child-syn-read : exit(0)
+ child-syn-read : exit(4)
  (syn-read) wait for child 1 of 10 returned 0 (expected 0)
  (syn-read) wait for child 2 of 10 returned 1 (expected 1)
  (syn-read) wait for child 3 of 10 returned 2 (expected 2)
  (syn-read) wait for child 4 of 10 returned 3 (expected 3)
  (syn-read) wait for child 5 of 10 returned 4 (expected 4)
+ child-syn-read : exit(5)
  (syn-read) wait for child 6 of 10 returned 5 (expected 5)
  (syn-read) wait for child 7 of 10 returned 6 (expected 6)
+ child-syn-read : exit(7)
+ child-syn-read : exit(9)
  (syn-read) wait for child 8 of 10 returned 7 (expected 7)
  (syn-read) wait for child 9 of 10 returned 8 (expected 8)
  (syn-read) wait for child 10 of 10 returned 9 (expected 9)
  (syn-read) end
+ syn-read : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/syn-remove.c -o tests/filesys/base/syn-remove.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/syn-remove.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/syn-remove.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/syn-remove
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/syn-remove -a syn-remove -- -q    -f run syn-remove < /dev/null 2> tests/filesys/base/syn-remove.errors |tee tests/filesys/base/syn-remove.output
Copying tests/filesys/base/syn-remove to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-remove
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 96 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-remove' into the file system...
Erasing ustar archive...
Executing 'syn-remove':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 73 79 6e-2d 72 65 6d 6f 76 65 00 |.....syn-remove.|
(syn-remove) begin
(syn-remove) create "deleteme"
(syn-remove) open "deleteme"
(syn-remove) remove "deleteme"
(syn-remove) write "deleteme"
(syn-remove) seek "deleteme" to 0
(syn-remove) read "deleteme"
(syn-remove) close "deleteme"
(syn-remove) end
syn-remove : exit(0)
Execution of 'syn-remove' complete.
Timer: 356 ticks
Thread: 41 idle ticks, 217 kernel ticks, 101 user ticks
hda2 (filesys): 91 reads, 209 writes
hda3 (scratch): 95 reads, 2 writes
Console: 1261 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/syn-remove.ck tests/filesys/base/syn-remove tests/filesys/base/syn-remove.result
FAIL tests/filesys/base/syn-remove
Test output failed to match any acceptable form.

Acceptable output:
  (syn-remove) begin
  (syn-remove) create "deleteme"
  (syn-remove) open "deleteme"
  (syn-remove) remove "deleteme"
  (syn-remove) write "deleteme"
  (syn-remove) seek "deleteme" to 0
  (syn-remove) read "deleteme"
  (syn-remove) close "deleteme"
  (syn-remove) end
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 73 79 6e-2d 72 65 6d 6f 76 65 00 |.....syn-remove.|
  (syn-remove) begin
  (syn-remove) create "deleteme"
  (syn-remove) open "deleteme"
  (syn-remove) remove "deleteme"
  (syn-remove) write "deleteme"
  (syn-remove) seek "deleteme" to 0
  (syn-remove) read "deleteme"
  (syn-remove) close "deleteme"
  (syn-remove) end
+ syn-remove : exit(0)

(Process exit codes are excluded for matching purposes.)
gcc -c ../../tests/filesys/base/syn-write.c -o tests/filesys/base/syn-write.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/syn-write.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/syn-write.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/syn-write
gcc -c ../../tests/filesys/base/child-syn-wrt.c -o tests/filesys/base/child-syn-wrt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/child-syn-wrt.d
gcc  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/child-syn-wrt.o tests/lib.o tests/filesys/seq-test.o lib/user/entry.o libc.a -o tests/filesys/base/child-syn-wrt
pintos -v -k -T 60 --bochs  --filesys-size=2 -p tests/filesys/base/syn-write -a syn-write -p tests/filesys/base/child-syn-wrt -a child-syn-wrt -- -q    -f run syn-write < /dev/null 2> tests/filesys/base/syn-write.errors |tee tests/filesys/base/syn-write.output
Copying tests/filesys/base/syn-write to scratch partition...
Copying tests/filesys/base/child-syn-wrt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-write
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 199 sectors (99 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Erasing ustar archive...
Executing 'syn-write':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 73 79-6e 2d 77 72 69 74 65 00 |......syn-write.|
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  63 68 69 6c 64 2d 73 79-6e 2d 77 72 74 00 30 00 |child-syn-wrt.0.|
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  63 68 69 6c 64 2d 73 79-6e 2d 77 72 74 00 31 00 |child-syn-wrt.1.|
load: child-syn-wrt: open failed
child-syn-wrt : exit(0)
(syn-write) exec child 3 of 10: "child-syn-wrt 2": FAILED
syn-write : exit(1)
child-syn-wrt : exit(1)
Execution of 'syn-write' complete.
Timer: 659 ticks
Thread: 83 idle ticks, 339 kernel ticks, 242 user ticks
hda2 (filesys): 190 reads, 420 writes
hda3 (scratch): 198 reads, 2 writes
Console: 1853 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
perl -I../.. ../../tests/filesys/base/syn-write.ck tests/filesys/base/syn-write tests/filesys/base/syn-write.result
FAIL tests/filesys/base/syn-write
run: exec child 3 of 10: "child-syn-wrt 2": FAILED
../../tests/make-grade ../.. results ../../tests/userprog/Grading | tee grade
TOTAL TESTING SCORE: 1.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/userprog/Rubric.functionality             3/108   1.0%/ 35.0%
tests/userprog/Rubric.robustness                0/ 88   0.0%/ 25.0%
tests/userprog/no-vm/Rubric                     0/  1   0.0%/ 10.0%
tests/filesys/base/Rubric                       0/ 30   0.0%/ 30.0%
--------------------------------------------- --- --- ------ ------
Total                                                   1.0%/100.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	  ** 0/ 3 tests/userprog/args-none
	  ** 0/ 3 tests/userprog/args-single
	  ** 0/ 3 tests/userprog/args-multiple
	  ** 0/ 3 tests/userprog/args-many
	  ** 0/ 3 tests/userprog/args-dbl-space

	- Test "create" system call.
	  ** 0/ 3 tests/userprog/create-empty
	  ** 0/ 3 tests/userprog/create-long
	  ** 0/ 3 tests/userprog/create-normal
	  ** 0/ 3 tests/userprog/create-exists

	- Test "open" system call.
	  ** 0/ 3 tests/userprog/open-missing
	  ** 0/ 3 tests/userprog/open-normal
	  ** 0/ 3 tests/userprog/open-twice

	- Test "read" system call.
	  ** 0/ 3 tests/userprog/read-normal
	  ** 0/ 3 tests/userprog/read-zero

	- Test "write" system call.
	  ** 0/ 3 tests/userprog/write-normal
	  ** 0/ 3 tests/userprog/write-zero

	- Test "close" system call.
	  ** 0/ 3 tests/userprog/close-normal

	- Test "exec" system call.
	  ** 0/ 5 tests/userprog/exec-once
	  ** 0/ 5 tests/userprog/exec-multiple
	  ** 0/ 5 tests/userprog/exec-arg

	- Test "wait" system call.
	  ** 0/ 5 tests/userprog/wait-simple
	  ** 0/ 5 tests/userprog/wait-twice

	- Test "exit" system call.
	  ** 0/ 5 tests/userprog/exit

	- Test "halt" system call.
	     3/ 3 tests/userprog/halt

	- Test recursive execution of user programs.
	  ** 0/15 tests/userprog/multi-recurse

	- Test read-only executable feature.
	  ** 0/ 3 tests/userprog/rox-simple
	  ** 0/ 3 tests/userprog/rox-child
	  ** 0/ 3 tests/userprog/rox-multichild

	- Section summary.
	      1/ 28 tests passed
	      3/108 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	  ** 0/ 2 tests/userprog/close-stdin
	  ** 0/ 2 tests/userprog/close-stdout
	  ** 0/ 2 tests/userprog/close-bad-fd
	  ** 0/ 2 tests/userprog/close-twice
	  ** 0/ 2 tests/userprog/read-bad-fd
	  ** 0/ 2 tests/userprog/read-stdout
	  ** 0/ 2 tests/userprog/write-bad-fd
	  ** 0/ 2 tests/userprog/write-stdin
	  ** 0/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	  ** 0/ 3 tests/userprog/create-bad-ptr
	  ** 0/ 3 tests/userprog/exec-bad-ptr
	  ** 0/ 3 tests/userprog/open-bad-ptr
	  ** 0/ 3 tests/userprog/read-bad-ptr
	  ** 0/ 3 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	  ** 0/ 3 tests/userprog/create-bound
	  ** 0/ 3 tests/userprog/open-boundary
	  ** 0/ 3 tests/userprog/read-boundary
	  ** 0/ 3 tests/userprog/write-boundary

	- Test handling of null pointer and empty strings.
	  ** 0/ 2 tests/userprog/create-null
	  ** 0/ 2 tests/userprog/open-null
	  ** 0/ 2 tests/userprog/open-empty

	- Test robustness of system call implementation.
	  ** 0/ 3 tests/userprog/sc-bad-arg
	  ** 0/ 3 tests/userprog/sc-bad-sp
	  ** 0/ 5 tests/userprog/sc-boundary
	  ** 0/ 5 tests/userprog/sc-boundary-2

	- Test robustness of "exec" and "wait" system calls.
	  ** 0/ 5 tests/userprog/exec-missing
	  ** 0/ 5 tests/userprog/wait-bad-pid
	  ** 0/ 5 tests/userprog/wait-killed

	- Test robustness of exception handling.
	  ** 0/ 1 tests/userprog/bad-read
	  ** 0/ 1 tests/userprog/bad-write
	  ** 0/ 1 tests/userprog/bad-jump
	  ** 0/ 1 tests/userprog/bad-read2
	  ** 0/ 1 tests/userprog/bad-write2
	  ** 0/ 1 tests/userprog/bad-jump2

	- Section summary.
	      0/ 34 tests passed
	      0/ 88 points subtotal

Functionality of features that VM might break (tests/userprog/no-vm/Rubric):

	  ** 0/ 1 tests/userprog/no-vm/multi-oom

	- Section summary.
	      0/  1 tests passed
	      0/  1 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	  ** 0/ 1 tests/filesys/base/sm-create
	  ** 0/ 2 tests/filesys/base/sm-full
	  ** 0/ 2 tests/filesys/base/sm-random
	  ** 0/ 2 tests/filesys/base/sm-seq-block
	  ** 0/ 3 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	  ** 0/ 1 tests/filesys/base/lg-create
	  ** 0/ 2 tests/filesys/base/lg-full
	  ** 0/ 2 tests/filesys/base/lg-random
	  ** 0/ 2 tests/filesys/base/lg-seq-block
	  ** 0/ 3 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	  ** 0/ 4 tests/filesys/base/syn-read
	  ** 0/ 4 tests/filesys/base/syn-write
	  ** 0/ 2 tests/filesys/base/syn-remove

	- Section summary.
	      0/ 13 tests passed
	      0/ 30 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-none FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 1
  (args) argv[0] = 'args-none'
  (args) argv[1] = null
  (args) end
  args-none: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 61 72-67 73 2d 6e 6f 6e 65 00 |......args-none.|
  (args) begin
  (args) argc = 1
  (args) argv[0] = 'args-none'
  (args) argv[1] = null
  (args) end
- args-none: exit(0)
+ args-none : exit(0)

OUTPUT FROM tests/userprog/args-none:

Copying tests/userprog/args-none to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run args-none
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-none' into the file system...
Erasing ustar archive...
Executing 'args-none':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 61 72-67 73 2d 6e 6f 6e 65 00 |......args-none.|
(args) begin
(args) argc = 1
(args) argv[0] = 'args-none'
(args) argv[1] = null
(args) end
args-none : exit(0)
Execution of 'args-none' complete.
Timer: 307 ticks
Thread: 41 idle ticks, 212 kernel ticks, 56 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1096 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-single FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 2
  (args) argv[0] = 'args-single'
  (args) argv[1] = 'onearg'
  (args) argv[2] = null
  (args) end
  args-single: exit(0)
Differences in `diff -u' format:
+ bfffffd0                 00 00 00-00 02 00 00 00 e1 ff ff |     ...........|
+ bfffffe0  bf ed ff ff bf f9 ff ff-bf 00 00 00 00 61 72 67 |.............arg|
+ bffffff0  73 2d 73 69 6e 67 6c 65-00 6f 6e 65 61 72 67 00 |s-single.onearg.|
  (args) begin
  (args) argc = 2
  (args) argv[0] = 'args-single'
  (args) argv[1] = 'onearg'
  (args) argv[2] = null
  (args) end
- args-single: exit(0)
+ args-single : exit(0)

OUTPUT FROM tests/userprog/args-single:

Copying tests/userprog/args-single to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'args-single onearg'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-single' into the file system...
Erasing ustar archive...
Executing 'args-single onearg':
bfffffd0                 00 00 00-00 02 00 00 00 e1 ff ff |     ...........|
bfffffe0  bf ed ff ff bf f9 ff ff-bf 00 00 00 00 61 72 67 |.............arg|
bffffff0  73 2d 73 69 6e 67 6c 65-00 6f 6e 65 61 72 67 00 |s-single.onearg.|
(args) begin
(args) argc = 2
(args) argv[0] = 'args-single'
(args) argv[1] = 'onearg'
(args) argv[2] = null
(args) end
args-single : exit(0)
Execution of 'args-single onearg' complete.
Timer: 325 ticks
Thread: 42 idle ticks, 217 kernel ticks, 69 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1234 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-multiple FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 5
  (args) argv[0] = 'args-multiple'
  (args) argv[1] = 'some'
  (args) argv[2] = 'arguments'
  (args) argv[3] = 'for'
  (args) argv[4] = 'you!'
  (args) argv[5] = null
  (args) end
  args-multiple: exit(0)
Differences in `diff -u' format:
+ bfffffb0                    00 00-00 00 05 00 00 00 c2 ff |      ..........|
+ bfffffc0  ff bf da ff ff bf e8 ff-ff bf ed ff ff bf f7 ff |................|
+ bfffffd0  ff bf fb ff ff bf 00 00-00 00 61 72 67 73 2d 6d |..........args-m|
+ bfffffe0  75 6c 74 69 70 6c 65 00-73 6f 6d 65 00 61 72 67 |ultiple.some.arg|
+ bffffff0  75 6d 65 6e 74 73 00 66-6f 72 00 79 6f 75 21 00 |uments.for.you!.|
  (args) begin
  (args) argc = 5
  (args) argv[0] = 'args-multiple'
  (args) argv[1] = 'some'
  (args) argv[2] = 'arguments'
  (args) argv[3] = 'for'
  (args) argv[4] = 'you!'
  (args) argv[5] = null
  (args) end
- args-multiple: exit(0)
+ args-multiple : exit(0)

OUTPUT FROM tests/userprog/args-multiple:

Copying tests/userprog/args-multiple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'args-multiple some arguments for you!'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-multiple' into the file system...
Erasing ustar archive...
Executing 'args-multiple some arguments for you!':
bfffffb0                    00 00-00 00 05 00 00 00 c2 ff |      ..........|
bfffffc0  ff bf da ff ff bf e8 ff-ff bf ed ff ff bf f7 ff |................|
bfffffd0  ff bf fb ff ff bf 00 00-00 00 61 72 67 73 2d 6d |..........args-m|
bfffffe0  75 6c 74 69 70 6c 65 00-73 6f 6d 65 00 61 72 67 |ultiple.some.arg|
bffffff0  75 6d 65 6e 74 73 00 66-6f 72 00 79 6f 75 21 00 |uments.for.you!.|
(args) begin
(args) argc = 5
(args) argv[0] = 'args-multiple'
(args) argv[1] = 'some'
(args) argv[2] = 'arguments'
(args) argv[3] = 'for'
(args) argv[4] = 'you!'
(args) argv[5] = null
(args) end
args-multiple : exit(0)
Execution of 'args-multiple some arguments for you!' complete.
Timer: 360 ticks
Thread: 40 idle ticks, 222 kernel ticks, 101 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1526 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-many FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 23
  (args) argv[0] = 'args-many'
  (args) argv[1] = 'a'
  (args) argv[2] = 'b'
  (args) argv[3] = 'c'
  (args) argv[4] = 'd'
  (args) argv[5] = 'e'
  (args) argv[6] = 'f'
  (args) argv[7] = 'g'
  (args) argv[8] = 'h'
  (args) argv[9] = 'i'
  (args) argv[10] = 'j'
  (args) argv[11] = 'k'
  (args) argv[12] = 'l'
  (args) argv[13] = 'm'
  (args) argv[14] = 'n'
  (args) argv[15] = 'o'
  (args) argv[16] = 'p'
  (args) argv[17] = 'q'
  (args) argv[18] = 'r'
  (args) argv[19] = 's'
  (args) argv[20] = 't'
  (args) argv[21] = 'u'
  (args) argv[22] = 'v'
  (args) argv[23] = null
  (args) end
  args-many: exit(0)
Differences in `diff -u' format:
+ bfffff50                                            00 00 |              ..|
+ bfffff60  00 00 17 00 00 00 6a ff-ff bf ca ff ff bf d4 ff |......j.........|
+ bfffff70  ff bf d6 ff ff bf d8 ff-ff bf da ff ff bf dc ff |................|
+ bfffff80  ff bf de ff ff bf e0 ff-ff bf e2 ff ff bf e4 ff |................|
+ bfffff90  ff bf e6 ff ff bf e8 ff-ff bf ea ff ff bf ec ff |................|
+ bfffffa0  ff bf ee ff ff bf f0 ff-ff bf f2 ff ff bf f4 ff |................|
+ bfffffb0  ff bf f6 ff ff bf f8 ff-ff bf fa ff ff bf fc ff |................|
+ bfffffc0  ff bf fe ff ff bf 00 00-00 00 61 72 67 73 2d 6d |..........args-m|
+ bfffffd0  61 6e 79 00 61 00 62 00-63 00 64 00 65 00 66 00 |any.a.b.c.d.e.f.|
+ bfffffe0  67 00 68 00 69 00 6a 00-6b 00 6c 00 6d 00 6e 00 |g.h.i.j.k.l.m.n.|
+ bffffff0  6f 00 70 00 71 00 72 00-73 00 74 00 75 00 76 00 |o.p.q.r.s.t.u.v.|
  (args) begin
  (args) argc = 23
  (args) argv[0] = 'args-many'
  (args) argv[1] = 'a'
  (args) argv[2] = 'b'
  (args) argv[3] = 'c'
  (args) argv[4] = 'd'
  (args) argv[5] = 'e'
  (args) argv[6] = 'f'
  (args) argv[7] = 'g'
  (args) argv[8] = 'h'
  (args) argv[9] = 'i'
  (args) argv[10] = 'j'
  (args) argv[11] = 'k'
  (args) argv[12] = 'l'
  (args) argv[13] = 'm'
  (args) argv[14] = 'n'
  (args) argv[15] = 'o'
  (args) argv[16] = 'p'
  (args) argv[17] = 'q'
  (args) argv[18] = 'r'
  (args) argv[19] = 's'
  (args) argv[20] = 't'
  (args) argv[21] = 'u'
  (args) argv[22] = 'v'
  (args) argv[23] = null
  (args) end
- args-many: exit(0)
+ args-many : exit(0)

OUTPUT FROM tests/userprog/args-many:

Copying tests/userprog/args-many to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'args-many a b c d e f g h i j k l m n o p q r s t u v'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-many' into the file system...
Erasing ustar archive...
Executing 'args-many a b c d e f g h i j k l m n o p q r s t u v':
bfffff50                                            00 00 |              ..|
bfffff60  00 00 17 00 00 00 6a ff-ff bf ca ff ff bf d4 ff |......j.........|
bfffff70  ff bf d6 ff ff bf d8 ff-ff bf da ff ff bf dc ff |................|
bfffff80  ff bf de ff ff bf e0 ff-ff bf e2 ff ff bf e4 ff |................|
bfffff90  ff bf e6 ff ff bf e8 ff-ff bf ea ff ff bf ec ff |................|
bfffffa0  ff bf ee ff ff bf f0 ff-ff bf f2 ff ff bf f4 ff |................|
bfffffb0  ff bf f6 ff ff bf f8 ff-ff bf fa ff ff bf fc ff |................|
bfffffc0  ff bf fe ff ff bf 00 00-00 00 61 72 67 73 2d 6d |..........args-m|
bfffffd0  61 6e 79 00 61 00 62 00-63 00 64 00 65 00 66 00 |any.a.b.c.d.e.f.|
bfffffe0  67 00 68 00 69 00 6a 00-6b 00 6c 00 6d 00 6e 00 |g.h.i.j.k.l.m.n.|
bffffff0  6f 00 70 00 71 00 72 00-73 00 74 00 75 00 76 00 |o.p.q.r.s.t.u.v.|
(args) begin
(args) argc = 23
(args) argv[0] = 'args-many'
(args) argv[1] = 'a'
(args) argv[2] = 'b'
(args) argv[3] = 'c'
(args) argv[4] = 'd'
(args) argv[5] = 'e'
(args) argv[6] = 'f'
(args) argv[7] = 'g'
(args) argv[8] = 'h'
(args) argv[9] = 'i'
(args) argv[10] = 'j'
(args) argv[11] = 'k'
(args) argv[12] = 'l'
(args) argv[13] = 'm'
(args) argv[14] = 'n'
(args) argv[15] = 'o'
(args) argv[16] = 'p'
(args) argv[17] = 'q'
(args) argv[18] = 'r'
(args) argv[19] = 's'
(args) argv[20] = 't'
(args) argv[21] = 'u'
(args) argv[22] = 'v'
(args) argv[23] = null
(args) end
args-many : exit(0)
Execution of 'args-many a b c d e f g h i j k l m n o p q r s t u v' complete.
Timer: 482 ticks
Thread: 41 idle ticks, 230 kernel ticks, 214 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 2401 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-dbl-space FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (args) begin
  (args) argc = 3
  (args) argv[0] = 'args-dbl-space'
  (args) argv[1] = 'two'
  (args) argv[2] = 'spaces!'
  (args) argv[3] = null
  (args) end
  args-dbl-space: exit(0)
Differences in `diff -u' format:
+ bfffffc0                             00 00 00 00 03 00 00 |         .......|
+ bfffffd0  00 d5 ff ff bf e5 ff ff-bf f4 ff ff bf f8 ff ff |................|
+ bfffffe0  bf 00 00 00 00 61 72 67-73 2d 64 62 6c 2d 73 70 |.....args-dbl-sp|
+ bffffff0  61 63 65 00 74 77 6f 00-73 70 61 63 65 73 21 00 |ace.two.spaces!.|
  (args) begin
  (args) argc = 3
  (args) argv[0] = 'args-dbl-space'
  (args) argv[1] = 'two'
  (args) argv[2] = 'spaces!'
  (args) argv[3] = null
  (args) end
- args-dbl-space: exit(0)
+ args-dbl-space : exit(0)

OUTPUT FROM tests/userprog/args-dbl-space:

Copying tests/userprog/args-dbl-space to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'args-dbl-space two  spaces!'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-dbl-space' into the file system...
Erasing ustar archive...
Executing 'args-dbl-space two  spaces!':
bfffffc0                             00 00 00 00 03 00 00 |         .......|
bfffffd0  00 d5 ff ff bf e5 ff ff-bf f4 ff ff bf f8 ff ff |................|
bfffffe0  bf 00 00 00 00 61 72 67-73 2d 64 62 6c 2d 73 70 |.....args-dbl-sp|
bffffff0  61 63 65 00 74 77 6f 00-73 70 61 63 65 73 21 00 |ace.two.spaces!.|
(args) begin
(args) argc = 3
(args) argv[0] = 'args-dbl-space'
(args) argv[1] = 'two'
(args) argv[2] = 'spaces!'
(args) argv[3] = null
(args) end
args-dbl-space : exit(0)
Execution of 'args-dbl-space two  spaces!' complete.
Timer: 341 ticks
Thread: 41 idle ticks, 220 kernel ticks, 83 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1371 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-empty FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (create-empty) begin
  create-empty: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 72 65 61 74-65 2d 65 6d 70 74 79 00 |...create-empty.|
  (create-empty) begin
- create-empty: exit(-1)
+ (create-empty) create(""): 0
+ (create-empty) end
+ create-empty : exit(0)
Acceptable output:
  (create-empty) begin
  (create-empty) create(""): 0
  (create-empty) end
  create-empty: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 72 65 61 74-65 2d 65 6d 70 74 79 00 |...create-empty.|
  (create-empty) begin
  (create-empty) create(""): 0
  (create-empty) end
- create-empty: exit(0)
+ create-empty : exit(0)

OUTPUT FROM tests/userprog/create-empty:

Copying tests/userprog/create-empty to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-empty
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-empty' into the file system...
Erasing ustar archive...
Executing 'create-empty':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 72 65 61 74-65 2d 65 6d 70 74 79 00 |...create-empty.|
(create-empty) begin
(create-empty) create(""): 0
(create-empty) end
create-empty : exit(0)
Execution of 'create-empty' complete.
Timer: 316 ticks
Thread: 42 idle ticks, 213 kernel ticks, 64 user ticks
hda2 (filesys): 64 reads, 190 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1166 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-long FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (create-long) begin
  (create-long) create("x..."): 0
  (create-long) end
  create-long: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 72 65 61-74 65 2d 6c 6f 6e 67 00 |....create-long.|
  (create-long) begin
  (create-long) create("x..."): 0
  (create-long) end
- create-long: exit(0)
+ create-long : exit(0)

OUTPUT FROM tests/userprog/create-long:

Copying tests/userprog/create-long to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-long
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-long' into the file system...
Erasing ustar archive...
Executing 'create-long':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 63 72 65 61-74 65 2d 6c 6f 6e 67 00 |....create-long.|
(create-long) begin
(create-long) create("x..."): 0
(create-long) end
create-long : exit(0)
Execution of 'create-long' complete.
Timer: 307 ticks
Thread: 42 idle ticks, 213 kernel ticks, 54 user ticks
hda2 (filesys): 64 reads, 192 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1085 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-normal FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (create-normal) begin
  (create-normal) create quux.dat
  (create-normal) end
  create-normal: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 63 72 65 61 74 65-2d 6e 6f 72 6d 61 6c 00 |..create-normal.|
  (create-normal) begin
  (create-normal) create quux.dat
  (create-normal) end
- create-normal: exit(0)
+ create-normal : exit(0)

OUTPUT FROM tests/userprog/create-normal:

Copying tests/userprog/create-normal to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-normal' into the file system...
Erasing ustar archive...
Executing 'create-normal':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 63 72 65 61 74 65-2d 6e 6f 72 6d 61 6c 00 |..create-normal.|
(create-normal) begin
(create-normal) create quux.dat
(create-normal) end
create-normal : exit(0)
Execution of 'create-normal' complete.
Timer: 326 ticks
Thread: 39 idle ticks, 216 kernel ticks, 74 user ticks
hda2 (filesys): 83 reads, 190 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1176 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-exists FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (create-exists) begin
  (create-exists) create quux.dat
  (create-exists) create warble.dat
  (create-exists) try to re-create quux.dat
  (create-exists) create baffle.dat
  (create-exists) try to re-create quux.dat
  (create-exists) end
  create-exists: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 63 72 65 61 74 65-2d 65 78 69 73 74 73 00 |..create-exists.|
  (create-exists) begin
  (create-exists) create quux.dat
  (create-exists) create warble.dat
  (create-exists) try to re-create quux.dat
  (create-exists) create baffle.dat
  (create-exists) try to re-create quux.dat
  (create-exists) end
- create-exists: exit(0)
+ create-exists : exit(0)

OUTPUT FROM tests/userprog/create-exists:

Copying tests/userprog/create-exists to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-exists
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-exists' into the file system...
Erasing ustar archive...
Executing 'create-exists':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 63 72 65 61 74 65-2d 65 78 69 73 74 73 00 |..create-exists.|
(create-exists) begin
(create-exists) create quux.dat
(create-exists) create warble.dat
(create-exists) try to re-create quux.dat
(create-exists) create baffle.dat
(create-exists) try to re-create quux.dat
(create-exists) end
create-exists : exit(0)
Execution of 'create-exists' complete.
Timer: 377 ticks
Thread: 42 idle ticks, 214 kernel ticks, 124 user ticks
hda2 (filesys): 135 reads, 208 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1330 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-missing FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (open-missing) begin
  (open-missing) end
  open-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 6f 70 65 6e 2d-6d 69 73 73 69 6e 67 00 |...open-missing.|
  (open-missing) begin
  (open-missing) end
- open-missing: exit(0)
+ open-missing : exit(0)

OUTPUT FROM tests/userprog/open-missing:

Copying tests/userprog/open-missing to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-missing
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-missing' into the file system...
Erasing ustar archive...
Executing 'open-missing':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 6f 70 65 6e 2d-6d 69 73 73 69 6e 67 00 |...open-missing.|
(open-missing) begin
(open-missing) end
open-missing : exit(0)
Execution of 'open-missing' complete.
Timer: 319 ticks
Thread: 42 idle ticks, 214 kernel ticks, 66 user ticks
hda2 (filesys): 80 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1137 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-normal FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (open-normal) begin
  (open-normal) end
  open-normal: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 6f 70 65 6e-2d 6e 6f 72 6d 61 6c 00 |....open-normal.|
  (open-normal) begin
  (open-normal) end
- open-normal: exit(0)
+ open-normal : exit(0)

OUTPUT FROM tests/userprog/open-normal:

Copying tests/userprog/open-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-normal':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 6f 70 65 6e-2d 6e 6f 72 6d 61 6c 00 |....open-normal.|
(open-normal) begin
(open-normal) end
open-normal : exit(0)
Execution of 'open-normal' complete.
Timer: 329 ticks
Thread: 43 idle ticks, 235 kernel ticks, 53 user ticks
hda2 (filesys): 92 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1098 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-twice FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (open-twice) begin
  (open-twice) open "sample.txt" once
  (open-twice) open "sample.txt" again
  (open-twice) end
  open-twice: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 6f 70 65-6e 2d 74 77 69 63 65 00 |.....open-twice.|
  (open-twice) begin
  (open-twice) open "sample.txt" once
  (open-twice) open "sample.txt" again
  (open-twice) end
- open-twice: exit(0)
+ open-twice : exit(0)

OUTPUT FROM tests/userprog/open-twice:

Copying tests/userprog/open-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-twice':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 6f 70 65-6e 2d 74 77 69 63 65 00 |.....open-twice.|
(open-twice) begin
(open-twice) open "sample.txt" once
(open-twice) open "sample.txt" again
(open-twice) end
open-twice : exit(0)
Execution of 'open-twice' complete.
Timer: 342 ticks
Thread: 44 idle ticks, 234 kernel ticks, 67 user ticks
hda2 (filesys): 103 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1165 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-normal FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (read-normal) begin
  (read-normal) open "sample.txt" for verification
  (read-normal) verified contents of "sample.txt"
  (read-normal) close "sample.txt"
  (read-normal) end
  read-normal: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 6e 6f 72 6d 61 6c 00 |....read-normal.|
  (read-normal) begin
  (read-normal) open "sample.txt" for verification
  (read-normal) verified contents of "sample.txt"
  (read-normal) close "sample.txt"
  (read-normal) end
- read-normal: exit(0)
+ read-normal : exit(0)

OUTPUT FROM tests/userprog/read-normal:

Copying tests/userprog/read-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-normal':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 72 65 61 64-2d 6e 6f 72 6d 61 6c 00 |....read-normal.|
(read-normal) begin
(read-normal) open "sample.txt" for verification
(read-normal) verified contents of "sample.txt"
(read-normal) close "sample.txt"
(read-normal) end
read-normal : exit(0)
Execution of 'read-normal' complete.
Timer: 344 ticks
Thread: 46 idle ticks, 233 kernel ticks, 68 user ticks
hda2 (filesys): 94 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1228 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-zero FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (read-zero) begin
  (read-zero) open "sample.txt"
  (read-zero) end
  read-zero: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 72 65-61 64 2d 7a 65 72 6f 00 |......read-zero.|
  (read-zero) begin
  (read-zero) open "sample.txt"
  (read-zero) end
- read-zero: exit(0)
+ read-zero : exit(0)

OUTPUT FROM tests/userprog/read-zero:

Copying tests/userprog/read-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-zero':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 72 65-61 64 2d 7a 65 72 6f 00 |......read-zero.|
(read-zero) begin
(read-zero) open "sample.txt"
(read-zero) end
read-zero : exit(0)
Execution of 'read-zero' complete.
Timer: 331 ticks
Thread: 44 idle ticks, 234 kernel ticks, 56 user ticks
hda2 (filesys): 94 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1114 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-normal FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (write-normal) begin
  (write-normal) create "test.txt"
  (write-normal) open "test.txt"
  (write-normal) end
  write-normal: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 72 69 74 65-2d 6e 6f 72 6d 61 6c 00 |...write-normal.|
  (write-normal) begin
  (write-normal) create "test.txt"
  (write-normal) open "test.txt"
  (write-normal) end
- write-normal: exit(0)
+ write-normal : exit(0)

OUTPUT FROM tests/userprog/write-normal:

Copying tests/userprog/write-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-normal':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 77 72 69 74 65-2d 6e 6f 72 6d 61 6c 00 |...write-normal.|
(write-normal) begin
(write-normal) create "test.txt"
(write-normal) open "test.txt"
(write-normal) end
write-normal : exit(0)
Execution of 'write-normal' complete.
Timer: 361 ticks
Thread: 45 idle ticks, 235 kernel ticks, 84 user ticks
hda2 (filesys): 117 reads, 202 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1247 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-zero FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (write-zero) begin
  (write-zero) open "sample.txt"
  (write-zero) end
  write-zero: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 77 72 69-74 65 2d 7a 65 72 6f 00 |.....write-zero.|
  (write-zero) begin
  (write-zero) open "sample.txt"
  (write-zero) end
- write-zero: exit(0)
+ write-zero : exit(0)

OUTPUT FROM tests/userprog/write-zero:

Copying tests/userprog/write-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-zero':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 77 72 69-74 65 2d 7a 65 72 6f 00 |.....write-zero.|
(write-zero) begin
(write-zero) open "sample.txt"
(write-zero) end
write-zero : exit(0)
Execution of 'write-zero' complete.
Timer: 331 ticks
Thread: 44 idle ticks, 234 kernel ticks, 56 user ticks
hda2 (filesys): 92 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1122 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-normal FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (close-normal) begin
  (close-normal) open "sample.txt"
  (close-normal) close "sample.txt"
  (close-normal) end
  close-normal: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 6e 6f 72 6d 61 6c 00 |...close-normal.|
  (close-normal) begin
  (close-normal) open "sample.txt"
  (close-normal) close "sample.txt"
  (close-normal) end
- close-normal: exit(0)
+ close-normal : exit(0)

OUTPUT FROM tests/userprog/close-normal:

Copying tests/userprog/close-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-normal':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 6c 6f 73 65-2d 6e 6f 72 6d 61 6c 00 |...close-normal.|
(close-normal) begin
(close-normal) open "sample.txt"
(close-normal) close "sample.txt"
(close-normal) end
close-normal : exit(0)
Execution of 'close-normal' complete.
Timer: 346 ticks
Thread: 45 idle ticks, 234 kernel ticks, 70 user ticks
hda2 (filesys): 92 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1249 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-once FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (exec-once) begin
  (child-simple) run
  child-simple: exit(81)
  (exec-once) end
  exec-once: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 65 78-65 63 2d 6f 6e 63 65 00 |......exec-once.|
  (exec-once) begin
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
  (exec-once) end
- exec-once: exit(0)
+ exec-once : exit(0)

OUTPUT FROM tests/userprog/exec-once:

Copying tests/userprog/exec-once to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-once
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 180 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-once' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'exec-once':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 65 78-65 63 2d 6f 6e 63 65 00 |......exec-once.|
(exec-once) begin
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
(exec-once) end
exec-once : exit(0)
Execution of 'exec-once' complete.
Timer: 482 ticks
Thread: 81 idle ticks, 295 kernel ticks, 109 user ticks
hda2 (filesys): 126 reads, 366 writes
hda3 (scratch): 179 reads, 2 writes
Console: 1364 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-multiple FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (exec-multiple) begin
  (child-simple) run
  child-simple: exit(81)
  (child-simple) run
  child-simple: exit(81)
  (child-simple) run
  child-simple: exit(81)
  (child-simple) run
  child-simple: exit(81)
  (exec-multiple) end
  exec-multiple: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 65 78 65 63 2d 6d-75 6c 74 69 70 6c 65 00 |..exec-multiple.|
  (exec-multiple) begin
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
  (exec-multiple) end
- exec-multiple: exit(0)
+ exec-multiple : exit(0)

OUTPUT FROM tests/userprog/exec-multiple:

Copying tests/userprog/exec-multiple to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-multiple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 181 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-multiple' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'exec-multiple':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 65 78 65 63 2d 6d-75 6c 74 69 70 6c 65 00 |..exec-multiple.|
(exec-multiple) begin
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
(exec-multiple) end
exec-multiple : exit(0)
Execution of 'exec-multiple' complete.
Timer: 732 ticks
Thread: 83 idle ticks, 349 kernel ticks, 302 user ticks
hda2 (filesys): 240 reads, 368 writes
hda3 (scratch): 180 reads, 2 writes
Console: 2291 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-arg FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (exec-arg) begin
  (args) begin
  (args) argc = 2
  (args) argv[0] = 'child-args'
  (args) argv[1] = 'childarg'
  (args) argv[2] = null
  (args) end
  child-args: exit(0)
  (exec-arg) end
  exec-arg: exit(0)
Differences in `diff -u' format:
+ bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
+ bffffff0  ff ff bf 00 00 00 00 65-78 65 63 2d 61 72 67 00 |.......exec-arg.|
  (exec-arg) begin
+ bfffffd0              00 00 00 00-02 00 00 00 e0 ff ff bf |    ............|
+ bfffffe0  ec ff ff bf f7 ff ff bf-00 00 00 00 63 68 69 6c |............chil|
+ bffffff0  64 2d 61 72 67 73 00 63-68 69 6c 64 61 72 67 00 |d-args.childarg.|
  (args) begin
  (args) argc = 2
  (args) argv[0] = 'child-args'
  (args) argv[1] = 'childarg'
  (args) argv[2] = null
  (args) end
- child-args: exit(0)
+ child-args : exit(0)
  (exec-arg) end
- exec-arg: exit(0)
+ exec-arg : exit(0)

OUTPUT FROM tests/userprog/exec-arg:

Copying tests/userprog/exec-arg to scratch partition...
Copying tests/userprog/child-args to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-arg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 180 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-arg' into the file system...
Putting 'child-args' into the file system...
Erasing ustar archive...
Executing 'exec-arg':
bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
bffffff0  ff ff bf 00 00 00 00 65-78 65 63 2d 61 72 67 00 |.......exec-arg.|
(exec-arg) begin
bfffffd0              00 00 00 00-02 00 00 00 e0 ff ff bf |    ............|
bfffffe0  ec ff ff bf f7 ff ff bf-00 00 00 00 63 68 69 6c |............chil|
bffffff0  64 2d 61 72 67 73 00 63-68 69 6c 64 61 72 67 00 |d-args.childarg.|
(args) begin
(args) argc = 2
(args) argv[0] = 'child-args'
(args) argv[1] = 'childarg'
(args) argv[2] = null
(args) end
child-args : exit(0)
(exec-arg) end
exec-arg : exit(0)
Execution of 'exec-arg' complete.
Timer: 500 ticks
Thread: 80 idle ticks, 295 kernel ticks, 127 user ticks
hda2 (filesys): 126 reads, 366 writes
hda3 (scratch): 179 reads, 2 writes
Console: 1453 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-simple FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (wait-simple) begin
  (child-simple) run
  child-simple: exit(81)
  (wait-simple) wait(exec()) = 81
  (wait-simple) end
  wait-simple: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 77 61 69 74-2d 73 69 6d 70 6c 65 00 |....wait-simple.|
  (wait-simple) begin
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
  (wait-simple) wait(exec()) = 81
  (wait-simple) end
- wait-simple: exit(0)
+ wait-simple : exit(0)

OUTPUT FROM tests/userprog/wait-simple:

Copying tests/userprog/wait-simple to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-simple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 180 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-simple' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-simple':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 77 61 69 74-2d 73 69 6d 70 6c 65 00 |....wait-simple.|
(wait-simple) begin
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
(wait-simple) wait(exec()) = 81
(wait-simple) end
wait-simple : exit(0)
Execution of 'wait-simple' complete.
Timer: 487 ticks
Thread: 83 idle ticks, 292 kernel ticks, 115 user ticks
hda2 (filesys): 126 reads, 366 writes
hda3 (scratch): 179 reads, 2 writes
Console: 1410 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-twice FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (wait-twice) begin
  (child-simple) run
  child-simple: exit(81)
  (wait-twice) wait(exec()) = 81
  (wait-twice) wait(exec()) = -1
  (wait-twice) end
  wait-twice: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 77 61 69-74 2d 74 77 69 63 65 00 |.....wait-twice.|
  (wait-twice) begin
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
  (child-simple) run
- child-simple: exit(81)
+ child-simple : exit(81)
  (wait-twice) wait(exec()) = 81
  (wait-twice) wait(exec()) = -1
  (wait-twice) end
- wait-twice: exit(0)
+ wait-twice : exit(0)

OUTPUT FROM tests/userprog/wait-twice:

Copying tests/userprog/wait-twice to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 181 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-twice' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-twice':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 77 61 69-74 2d 74 77 69 63 65 00 |.....wait-twice.|
(wait-twice) begin
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 68 69 6c 64-2d 73 69 6d 70 6c 65 00 |...child-simple.|
(child-simple) run
child-simple : exit(81)
(wait-twice) wait(exec()) = 81
(wait-twice) wait(exec()) = -1
(wait-twice) end
wait-twice : exit(0)
Execution of 'wait-twice' complete.
Timer: 490 ticks
Thread: 80 idle ticks, 297 kernel ticks, 116 user ticks
hda2 (filesys): 126 reads, 368 writes
hda3 (scratch): 180 reads, 2 writes
Console: 1433 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exit FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (exit) begin
  exit: exit(57)
Differences in `diff -u' format:
+ bfffffe0                       00-00 00 00 01 00 00 00 f3 |       .........|
+ bffffff0  ff ff bf fb ff ff bf 00-00 00 00 65 78 69 74 00 |...........exit.|
  (exit) begin
- exit: exit(57)
+ exit : exit(57)

OUTPUT FROM tests/userprog/exit:

Copying tests/userprog/exit to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exit
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exit' into the file system...
Erasing ustar archive...
Executing 'exit':
bfffffe0                       00-00 00 00 01 00 00 00 f3 |       .........|
bffffff0  ff ff bf fb ff ff bf 00-00 00 00 65 78 69 74 00 |...........exit.|
(exit) begin
exit : exit(57)
Execution of 'exit' complete.
Timer: 294 ticks
Thread: 39 idle ticks, 213 kernel ticks, 45 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 994 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/multi-recurse FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (multi-recurse) begin 15
  (multi-recurse) exec("multi-recurse 14")
  (multi-recurse) begin 14
  (multi-recurse) exec("multi-recurse 13")
  (multi-recurse) begin 13
  (multi-recurse) exec("multi-recurse 12")
  (multi-recurse) begin 12
  (multi-recurse) exec("multi-recurse 11")
  (multi-recurse) begin 11
  (multi-recurse) exec("multi-recurse 10")
  (multi-recurse) begin 10
  (multi-recurse) exec("multi-recurse 9")
  (multi-recurse) begin 9
  (multi-recurse) exec("multi-recurse 8")
  (multi-recurse) begin 8
  (multi-recurse) exec("multi-recurse 7")
  (multi-recurse) begin 7
  (multi-recurse) exec("multi-recurse 6")
  (multi-recurse) begin 6
  (multi-recurse) exec("multi-recurse 5")
  (multi-recurse) begin 5
  (multi-recurse) exec("multi-recurse 4")
  (multi-recurse) begin 4
  (multi-recurse) exec("multi-recurse 3")
  (multi-recurse) begin 3
  (multi-recurse) exec("multi-recurse 2")
  (multi-recurse) begin 2
  (multi-recurse) exec("multi-recurse 1")
  (multi-recurse) begin 1
  (multi-recurse) exec("multi-recurse 0")
  (multi-recurse) begin 0
  (multi-recurse) end 0
  multi-recurse: exit(0)
  (multi-recurse) end 1
  multi-recurse: exit(1)
  (multi-recurse) end 2
  multi-recurse: exit(2)
  (multi-recurse) end 3
  multi-recurse: exit(3)
  (multi-recurse) end 4
  multi-recurse: exit(4)
  (multi-recurse) end 5
  multi-recurse: exit(5)
  (multi-recurse) end 6
  multi-recurse: exit(6)
  (multi-recurse) end 7
  multi-recurse: exit(7)
  (multi-recurse) end 8
  multi-recurse: exit(8)
  (multi-recurse) end 9
  multi-recurse: exit(9)
  (multi-recurse) end 10
  multi-recurse: exit(10)
  (multi-recurse) end 11
  multi-recurse: exit(11)
  (multi-recurse) end 12
  multi-recurse: exit(12)
  (multi-recurse) end 13
  multi-recurse: exit(13)
  (multi-recurse) end 14
  multi-recurse: exit(14)
  (multi-recurse) end 15
  multi-recurse: exit(15)
Differences in `diff -u' format:
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 35 00 |ulti-recurse.15.|
  (multi-recurse) begin 15
  (multi-recurse) exec("multi-recurse 14")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 34 00 |ulti-recurse.14.|
  (multi-recurse) begin 14
  (multi-recurse) exec("multi-recurse 13")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 33 00 |ulti-recurse.13.|
  (multi-recurse) begin 13
  (multi-recurse) exec("multi-recurse 12")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 32 00 |ulti-recurse.12.|
  (multi-recurse) begin 12
  (multi-recurse) exec("multi-recurse 11")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 31 00 |ulti-recurse.11.|
  (multi-recurse) begin 11
  (multi-recurse) exec("multi-recurse 10")
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
+ bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 30 00 |ulti-recurse.10.|
  (multi-recurse) begin 10
  (multi-recurse) exec("multi-recurse 9")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 39 00 |multi-recurse.9.|
  (multi-recurse) begin 9
  (multi-recurse) exec("multi-recurse 8")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 38 00 |multi-recurse.8.|
  (multi-recurse) begin 8
  (multi-recurse) exec("multi-recurse 7")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 37 00 |multi-recurse.7.|
  (multi-recurse) begin 7
  (multi-recurse) exec("multi-recurse 6")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 36 00 |multi-recurse.6.|
  (multi-recurse) begin 6
  (multi-recurse) exec("multi-recurse 5")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 35 00 |multi-recurse.5.|
  (multi-recurse) begin 5
  (multi-recurse) exec("multi-recurse 4")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 34 00 |multi-recurse.4.|
  (multi-recurse) begin 4
  (multi-recurse) exec("multi-recurse 3")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 33 00 |multi-recurse.3.|
  (multi-recurse) begin 3
  (multi-recurse) exec("multi-recurse 2")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 32 00 |multi-recurse.2.|
  (multi-recurse) begin 2
  (multi-recurse) exec("multi-recurse 1")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 31 00 |multi-recurse.1.|
  (multi-recurse) begin 1
  (multi-recurse) exec("multi-recurse 0")
+ bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
+ bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
+ bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 30 00 |multi-recurse.0.|
  (multi-recurse) begin 0
  (multi-recurse) end 0
- multi-recurse: exit(0)
+ multi-recurse : exit(0)
  (multi-recurse) end 1
- multi-recurse: exit(1)
+ multi-recurse : exit(1)
  (multi-recurse) end 2
- multi-recurse: exit(2)
+ multi-recurse : exit(2)
  (multi-recurse) end 3
- multi-recurse: exit(3)
+ multi-recurse : exit(3)
  (multi-recurse) end 4
- multi-recurse: exit(4)
+ multi-recurse : exit(4)
  (multi-recurse) end 5
- multi-recurse: exit(5)
+ multi-recurse : exit(5)
  (multi-recurse) end 6
- multi-recurse: exit(6)
+ multi-recurse : exit(6)
  (multi-recurse) end 7
- multi-recurse: exit(7)
+ multi-recurse : exit(7)
  (multi-recurse) end 8
- multi-recurse: exit(8)
+ multi-recurse : exit(8)
  (multi-recurse) end 9
- multi-recurse: exit(9)
+ multi-recurse : exit(9)
  (multi-recurse) end 10
- multi-recurse: exit(10)
+ multi-recurse : exit(10)
  (multi-recurse) end 11
- multi-recurse: exit(11)
+ multi-recurse : exit(11)
  (multi-recurse) end 12
- multi-recurse: exit(12)
+ multi-recurse : exit(12)
  (multi-recurse) end 13
- multi-recurse: exit(13)
+ multi-recurse : exit(13)
  (multi-recurse) end 14
- multi-recurse: exit(14)
+ multi-recurse : exit(14)
  (multi-recurse) end 15
- multi-recurse: exit(15)
+ multi-recurse : exit(15)

OUTPUT FROM tests/userprog/multi-recurse:

Copying tests/userprog/multi-recurse to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run 'multi-recurse 15'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-recurse' into the file system...
Erasing ustar archive...
Executing 'multi-recurse 15':
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 35 00 |ulti-recurse.15.|
(multi-recurse) begin 15
(multi-recurse) exec("multi-recurse 14")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 34 00 |ulti-recurse.14.|
(multi-recurse) begin 14
(multi-recurse) exec("multi-recurse 13")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 33 00 |ulti-recurse.13.|
(multi-recurse) begin 13
(multi-recurse) exec("multi-recurse 12")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 32 00 |ulti-recurse.12.|
(multi-recurse) begin 12
(multi-recurse) exec("multi-recurse 11")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 31 00 |ulti-recurse.11.|
(multi-recurse) begin 11
(multi-recurse) exec("multi-recurse 10")
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fd-ff ff bf 00 00 00 00 6d |...............m|
bffffff0  75 6c 74 69 2d 72 65 63-75 72 73 65 00 31 30 00 |ulti-recurse.10.|
(multi-recurse) begin 10
(multi-recurse) exec("multi-recurse 9")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 39 00 |multi-recurse.9.|
(multi-recurse) begin 9
(multi-recurse) exec("multi-recurse 8")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 38 00 |multi-recurse.8.|
(multi-recurse) begin 8
(multi-recurse) exec("multi-recurse 7")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 37 00 |multi-recurse.7.|
(multi-recurse) begin 7
(multi-recurse) exec("multi-recurse 6")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 36 00 |multi-recurse.6.|
(multi-recurse) begin 6
(multi-recurse) exec("multi-recurse 5")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 35 00 |multi-recurse.5.|
(multi-recurse) begin 5
(multi-recurse) exec("multi-recurse 4")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 34 00 |multi-recurse.4.|
(multi-recurse) begin 4
(multi-recurse) exec("multi-recurse 3")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 33 00 |multi-recurse.3.|
(multi-recurse) begin 3
(multi-recurse) exec("multi-recurse 2")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 32 00 |multi-recurse.2.|
(multi-recurse) begin 2
(multi-recurse) exec("multi-recurse 1")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 31 00 |multi-recurse.1.|
(multi-recurse) begin 1
(multi-recurse) exec("multi-recurse 0")
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 72 65-63 75 72 73 65 00 30 00 |multi-recurse.0.|
(multi-recurse) begin 0
(multi-recurse) end 0
multi-recurse : exit(0)
(multi-recurse) end 1
multi-recurse : exit(1)
(multi-recurse) end 2
multi-recurse : exit(2)
(multi-recurse) end 3
multi-recurse : exit(3)
(multi-recurse) end 4
multi-recurse : exit(4)
(multi-recurse) end 5
multi-recurse : exit(5)
(multi-recurse) end 6
multi-recurse : exit(6)
(multi-recurse) end 7
multi-recurse : exit(7)
(multi-recurse) end 8
multi-recurse : exit(8)
(multi-recurse) end 9
multi-recurse : exit(9)
(multi-recurse) end 10
multi-recurse : exit(10)
(multi-recurse) end 11
multi-recurse : exit(11)
(multi-recurse) end 12
multi-recurse : exit(12)
(multi-recurse) end 13
multi-recurse : exit(13)
(multi-recurse) end 14
multi-recurse : exit(14)
(multi-recurse) end 15
multi-recurse : exit(15)
Execution of 'multi-recurse 15' complete.
Timer: 1653 ticks
Thread: 45 idle ticks, 492 kernel ticks, 1119 user ticks
hda2 (filesys): 571 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 6303 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-simple FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (rox-simple) begin
  (rox-simple) open "rox-simple"
  (rox-simple) read "rox-simple"
  (rox-simple) try to write "rox-simple"
  (rox-simple) end
  rox-simple: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 72 6f 78-2d 73 69 6d 70 6c 65 00 |.....rox-simple.|
  (rox-simple) begin
  (rox-simple) open "rox-simple"
  (rox-simple) read "rox-simple"
  (rox-simple) try to write "rox-simple"
  (rox-simple) end
- rox-simple: exit(0)
+ rox-simple : exit(0)

OUTPUT FROM tests/userprog/rox-simple:

Copying tests/userprog/rox-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-simple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-simple' into the file system...
Erasing ustar archive...
Executing 'rox-simple':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 72 6f 78-2d 73 69 6d 70 6c 65 00 |.....rox-simple.|
(rox-simple) begin
(rox-simple) open "rox-simple"
(rox-simple) read "rox-simple"
(rox-simple) try to write "rox-simple"
(rox-simple) end
rox-simple : exit(0)
Execution of 'rox-simple' complete.
Timer: 315 ticks
Thread: 43 idle ticks, 212 kernel ticks, 62 user ticks
hda2 (filesys): 68 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1147 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-child FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (rox-child) begin
  (rox-child) open "child-rox"
  (rox-child) read "child-rox"
  (rox-child) write "child-rox"
  (rox-child) exec "child-rox 1"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (rox-child) write "child-rox"
  (rox-child) end
  rox-child: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 72 6f-78 2d 63 68 69 6c 64 00 |......rox-child.|
  (rox-child) begin
  (rox-child) open "child-rox"
  (rox-child) read "child-rox"
  (rox-child) write "child-rox"
  (rox-child) exec "child-rox 1"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 31 00 |....child-rox.1.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (rox-child) write "child-rox"
  (rox-child) end
- rox-child: exit(0)
+ rox-child : exit(0)

OUTPUT FROM tests/userprog/rox-child:

Copying tests/userprog/rox-child to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-child
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 195 sectors (97 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-child':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 72 6f-78 2d 63 68 69 6c 64 00 |......rox-child.|
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
(rox-child) write "child-rox"
(rox-child) exec "child-rox 1"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 31 00 |....child-rox.1.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(rox-child) write "child-rox"
(rox-child) end
rox-child : exit(0)
Execution of 'rox-child' complete.
Timer: 533 ticks
Thread: 87 idle ticks, 303 kernel ticks, 146 user ticks
hda2 (filesys): 138 reads, 398 writes
hda3 (scratch): 194 reads, 2 writes
Console: 1596 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-multichild FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (rox-multichild) begin
  (rox-multichild) open "child-rox"
  (rox-multichild) read "child-rox"
  (rox-multichild) write "child-rox"
  (rox-multichild) exec "child-rox 5"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 4"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 3"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 2"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 1"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (rox-multichild) write "child-rox"
  (rox-multichild) end
  rox-multichild: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 72 6f 78 2d 6d 75 6c-74 69 63 68 69 6c 64 00 |.rox-multichild.|
  (rox-multichild) begin
  (rox-multichild) open "child-rox"
  (rox-multichild) read "child-rox"
  (rox-multichild) write "child-rox"
  (rox-multichild) exec "child-rox 5"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 35 00 |....child-rox.5.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 4"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 34 00 |....child-rox.4.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 3"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 33 00 |....child-rox.3.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 2"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 32 00 |....child-rox.2.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 1"
+ bfffffd0                                      00 00 00 00 |            ....|
+ bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
+ bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 31 00 |....child-rox.1.|
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
- child-rox: exit(12)
+ child-rox : exit(12)
  (rox-multichild) write "child-rox"
  (rox-multichild) end
- rox-multichild: exit(0)
+ rox-multichild : exit(0)

OUTPUT FROM tests/userprog/rox-multichild:

Copying tests/userprog/rox-multichild to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-multichild
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 195 sectors (97 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-multichild':
bfffffd0                                         00 00 00 |             ...|
bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
bffffff0  00 72 6f 78 2d 6d 75 6c-74 69 63 68 69 6c 64 00 |.rox-multichild.|
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
(rox-multichild) write "child-rox"
(rox-multichild) exec "child-rox 5"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 35 00 |....child-rox.5.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 4"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 34 00 |....child-rox.4.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 3"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 33 00 |....child-rox.3.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 2"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 32 00 |....child-rox.2.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 1"
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 63 68 69 6c-64 2d 72 6f 78 00 31 00 |....child-rox.1.|
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox : exit(12)
(rox-multichild) write "child-rox"
(rox-multichild) end
rox-multichild : exit(0)
Execution of 'rox-multichild' complete.
Timer: 933 ticks
Thread: 88 idle ticks, 375 kernel ticks, 473 user ticks
hda2 (filesys): 302 reads, 398 writes
hda3 (scratch): 194 reads, 2 writes
Console: 3297 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-stdin FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (close-stdin) begin
  close-stdin: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 6c 6f 73-65 2d 73 74 64 69 6e 00 |....close-stdin.|
  (close-stdin) begin
- close-stdin: exit(-1)
+ (close-stdin) end
+ close-stdin : exit(0)
Acceptable output:
  (close-stdin) begin
  (close-stdin) end
  close-stdin: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 6c 6f 73-65 2d 73 74 64 69 6e 00 |....close-stdin.|
  (close-stdin) begin
  (close-stdin) end
- close-stdin: exit(0)
+ close-stdin : exit(0)

OUTPUT FROM tests/userprog/close-stdin:

Copying tests/userprog/close-stdin to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-stdin
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-stdin' into the file system...
Erasing ustar archive...
Executing 'close-stdin':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 63 6c 6f 73-65 2d 73 74 64 69 6e 00 |....close-stdin.|
(close-stdin) begin
(close-stdin) end
close-stdin : exit(0)
Execution of 'close-stdin' complete.
Timer: 300 ticks
Thread: 43 idle ticks, 212 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-stdout FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (close-stdout) begin
  close-stdout: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 73 74 64 6f 75 74 00 |...close-stdout.|
  (close-stdout) begin
- close-stdout: exit(-1)
+ (close-stdout) end
+ close-stdout : exit(0)
Acceptable output:
  (close-stdout) begin
  (close-stdout) end
  close-stdout: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 73 74 64 6f 75 74 00 |...close-stdout.|
  (close-stdout) begin
  (close-stdout) end
- close-stdout: exit(0)
+ close-stdout : exit(0)

OUTPUT FROM tests/userprog/close-stdout:

Copying tests/userprog/close-stdout to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-stdout
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-stdout' into the file system...
Erasing ustar archive...
Executing 'close-stdout':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 6c 6f 73 65-2d 73 74 64 6f 75 74 00 |...close-stdout.|
(close-stdout) begin
(close-stdout) end
close-stdout : exit(0)
Execution of 'close-stdout' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 213 kernel ticks, 58 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1137 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-bad-fd FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (close-bad-fd) begin
  (close-bad-fd) end
  close-bad-fd: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 62 61 64 2d 66 64 00 |...close-bad-fd.|
  (close-bad-fd) begin
  (close-bad-fd) end
- close-bad-fd: exit(0)
+ close-bad-fd : exit(0)
Acceptable output:
  (close-bad-fd) begin
  close-bad-fd: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 6c 6f 73 65-2d 62 61 64 2d 66 64 00 |...close-bad-fd.|
  (close-bad-fd) begin
- close-bad-fd: exit(-1)
+ (close-bad-fd) end
+ close-bad-fd : exit(0)

OUTPUT FROM tests/userprog/close-bad-fd:

Copying tests/userprog/close-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-bad-fd' into the file system...
Erasing ustar archive...
Executing 'close-bad-fd':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 6c 6f 73 65-2d 62 61 64 2d 66 64 00 |...close-bad-fd.|
(close-bad-fd) begin
(close-bad-fd) end
close-bad-fd : exit(0)
Execution of 'close-bad-fd' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 213 kernel ticks, 58 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1137 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-twice FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (close-twice) begin
  (close-twice) open "sample.txt"
  (close-twice) close "sample.txt"
  (close-twice) close "sample.txt" again
  (close-twice) end
  close-twice: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 6c 6f 73-65 2d 74 77 69 63 65 00 |....close-twice.|
  (close-twice) begin
  (close-twice) open "sample.txt"
  (close-twice) close "sample.txt"
  (close-twice) close "sample.txt" again
  (close-twice) end
- close-twice: exit(0)
+ close-twice : exit(0)
Acceptable output:
  (close-twice) begin
  (close-twice) open "sample.txt"
  (close-twice) close "sample.txt"
  (close-twice) close "sample.txt" again
  close-twice: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 6c 6f 73-65 2d 74 77 69 63 65 00 |....close-twice.|
  (close-twice) begin
  (close-twice) open "sample.txt"
  (close-twice) close "sample.txt"
  (close-twice) close "sample.txt" again
- close-twice: exit(-1)
+ (close-twice) end
+ close-twice : exit(0)

OUTPUT FROM tests/userprog/close-twice:

Copying tests/userprog/close-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run close-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-twice':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 63 6c 6f 73-65 2d 74 77 69 63 65 00 |....close-twice.|
(close-twice) begin
(close-twice) open "sample.txt"
(close-twice) close "sample.txt"
(close-twice) close "sample.txt" again
(close-twice) end
close-twice : exit(0)
Execution of 'close-twice' complete.
Timer: 341 ticks
Thread: 46 idle ticks, 233 kernel ticks, 65 user ticks
hda2 (filesys): 93 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1202 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-bad-fd FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (read-bad-fd) begin
  (read-bad-fd) end
  read-bad-fd: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 62 61 64 2d 66 64 00 |....read-bad-fd.|
  (read-bad-fd) begin
  (read-bad-fd) end
- read-bad-fd: exit(0)
+ read-bad-fd : exit(0)
Acceptable output:
  (read-bad-fd) begin
  read-bad-fd: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 62 61 64 2d 66 64 00 |....read-bad-fd.|
  (read-bad-fd) begin
- read-bad-fd: exit(-1)
+ (read-bad-fd) end
+ read-bad-fd : exit(0)

OUTPUT FROM tests/userprog/read-bad-fd:

Copying tests/userprog/read-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-fd' into the file system...
Erasing ustar archive...
Executing 'read-bad-fd':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 72 65 61 64-2d 62 61 64 2d 66 64 00 |....read-bad-fd.|
(read-bad-fd) begin
(read-bad-fd) end
read-bad-fd : exit(0)
Execution of 'read-bad-fd' complete.
Timer: 301 ticks
Thread: 42 idle ticks, 213 kernel ticks, 49 user ticks
hda2 (filesys): 64 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-stdout FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (read-stdout) begin
  (read-stdout) end
  read-stdout: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 73 74 64 6f 75 74 00 |....read-stdout.|
  (read-stdout) begin
  (read-stdout) end
- read-stdout: exit(0)
+ read-stdout : exit(0)
Acceptable output:
  (read-stdout) begin
  read-stdout: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 72 65 61 64-2d 73 74 64 6f 75 74 00 |....read-stdout.|
  (read-stdout) begin
- read-stdout: exit(-1)
+ (read-stdout) end
+ read-stdout : exit(0)

OUTPUT FROM tests/userprog/read-stdout:

Copying tests/userprog/read-stdout to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-stdout
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-stdout' into the file system...
Erasing ustar archive...
Executing 'read-stdout':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 72 65 61 64-2d 73 74 64 6f 75 74 00 |....read-stdout.|
(read-stdout) begin
(read-stdout) end
read-stdout : exit(0)
Execution of 'read-stdout' complete.
Timer: 301 ticks
Thread: 42 idle ticks, 213 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-bad-fd FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (write-bad-fd) begin
  write-bad-fd: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 72 69 74 65-2d 62 61 64 2d 66 64 00 |...write-bad-fd.|
  (write-bad-fd) begin
- write-bad-fd: exit(-1)
+ PAGE FAULT!!!
+ write-bad-fd : exit(-1)
Acceptable output:
  (write-bad-fd) begin
  (write-bad-fd) end
  write-bad-fd: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 72 69 74 65-2d 62 61 64 2d 66 64 00 |...write-bad-fd.|
  (write-bad-fd) begin
- (write-bad-fd) end
- write-bad-fd: exit(0)
+ PAGE FAULT!!!
+ write-bad-fd : exit(-1)

OUTPUT FROM tests/userprog/write-bad-fd:

Copying tests/userprog/write-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-fd' into the file system...
Erasing ustar archive...
Executing 'write-bad-fd':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 77 72 69 74 65-2d 62 61 64 2d 66 64 00 |...write-bad-fd.|
(write-bad-fd) begin
PAGE FAULT!!!
write-bad-fd : exit(-1)
Execution of 'write-bad-fd' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 214 kernel ticks, 57 user ticks
hda2 (filesys): 65 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1133 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-stdin FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (write-stdin) begin
  write-stdin: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 77 72 69 74-65 2d 73 74 64 69 6e 00 |....write-stdin.|
  (write-stdin) begin
- write-stdin: exit(-1)
+ (write-stdin) end
+ write-stdin : exit(0)
Acceptable output:
  (write-stdin) begin
  (write-stdin) end
  write-stdin: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 77 72 69 74-65 2d 73 74 64 69 6e 00 |....write-stdin.|
  (write-stdin) begin
  (write-stdin) end
- write-stdin: exit(0)
+ write-stdin : exit(0)

OUTPUT FROM tests/userprog/write-stdin:

Copying tests/userprog/write-stdin to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-stdin
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-stdin' into the file system...
Erasing ustar archive...
Executing 'write-stdin':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 77 72 69 74-65 2d 73 74 64 69 6e 00 |....write-stdin.|
(write-stdin) begin
(write-stdin) end
write-stdin : exit(0)
Execution of 'write-stdin' complete.
Timer: 300 ticks
Thread: 42 idle ticks, 213 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/multi-child-fd FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
  (child-close) begin
  child-close: exit(-1)
  (multi-child-fd) wait(exec()) = -1
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
  multi-child-fd: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 6d 75 6c 74 69 2d 63-68 69 6c 64 2d 66 64 00 |.multi-child-fd.|
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
+ bfffffd0                                00 00 00 00 02 00 |          ......|
+ bfffffe0  00 00 e6 ff ff bf f2 ff-ff bf fe ff ff bf 00 00 |................|
+ bffffff0  00 00 63 68 69 6c 64 2d-63 6c 6f 73 65 00 32 00 |..child-close.2.|
  (child-close) begin
- child-close: exit(-1)
- (multi-child-fd) wait(exec()) = -1
+ (child-close) end
+ child-close : exit(0)
+ (multi-child-fd) wait(exec()) = 0
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
- multi-child-fd: exit(0)
+ multi-child-fd : exit(0)
Acceptable output:
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
  (child-close) begin
  (child-close) end
  child-close: exit(0)
  (multi-child-fd) wait(exec()) = 0
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
  multi-child-fd: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 6d 75 6c 74 69 2d 63-68 69 6c 64 2d 66 64 00 |.multi-child-fd.|
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
+ bfffffd0                                00 00 00 00 02 00 |          ......|
+ bfffffe0  00 00 e6 ff ff bf f2 ff-ff bf fe ff ff bf 00 00 |................|
+ bffffff0  00 00 63 68 69 6c 64 2d-63 6c 6f 73 65 00 32 00 |..child-close.2.|
  (child-close) begin
  (child-close) end
- child-close: exit(0)
+ child-close : exit(0)
  (multi-child-fd) wait(exec()) = 0
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
- multi-child-fd: exit(0)
+ multi-child-fd : exit(0)

OUTPUT FROM tests/userprog/multi-child-fd:

Copying tests/userprog/multi-child-fd to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
Copying tests/userprog/child-close to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-child-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 195 sectors (97 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Erasing ustar archive...
Executing 'multi-child-fd':
bfffffd0                                         00 00 00 |             ...|
bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
bffffff0  00 6d 75 6c 74 69 2d 63-68 69 6c 64 2d 66 64 00 |.multi-child-fd.|
(multi-child-fd) begin
(multi-child-fd) open "sample.txt"
bfffffd0                                00 00 00 00 02 00 |          ......|
bfffffe0  00 00 e6 ff ff bf f2 ff-ff bf fe ff ff bf 00 00 |................|
bffffff0  00 00 63 68 69 6c 64 2d-63 6c 6f 73 65 00 32 00 |..child-close.2.|
(child-close) begin
(child-close) end
child-close : exit(0)
(multi-child-fd) wait(exec()) = 0
(multi-child-fd) verified contents of "sample.txt"
(multi-child-fd) end
multi-child-fd : exit(0)
Execution of 'multi-child-fd' complete.
Timer: 551 ticks
Thread: 86 idle ticks, 325 kernel ticks, 143 user ticks
hda2 (filesys): 157 reads, 398 writes
hda3 (scratch): 194 reads, 2 writes
Console: 1657 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-bad-ptr FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (create-bad-ptr) begin
  create-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 63 72 65 61 74 65 2d-62 61 64 2d 70 74 72 00 |.create-bad-ptr.|
  (create-bad-ptr) begin
- create-bad-ptr: exit(-1)
+ PAGE FAULT!!!
+ create-bad-ptr : exit(-1)

OUTPUT FROM tests/userprog/create-bad-ptr:

Copying tests/userprog/create-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'create-bad-ptr':
bfffffd0                                         00 00 00 |             ...|
bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
bffffff0  00 63 72 65 61 74 65 2d-62 61 64 2d 70 74 72 00 |.create-bad-ptr.|
(create-bad-ptr) begin
PAGE FAULT!!!
create-bad-ptr : exit(-1)
Execution of 'create-bad-ptr' complete.
Timer: 312 ticks
Thread: 40 idle ticks, 213 kernel ticks, 61 user ticks
hda2 (filesys): 64 reads, 189 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1145 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-bad-ptr FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (exec-bad-ptr) begin
  (exec-bad-ptr) end
  exec-bad-ptr: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-62 61 64 2d 70 74 72 00 |...exec-bad-ptr.|
  (exec-bad-ptr) begin
- (exec-bad-ptr) end
- exec-bad-ptr: exit(0)
+ PAGE FAULT!!!
+ exec-bad-ptr : exit(-1)
Acceptable output:
  (exec-bad-ptr) begin
  exec-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-62 61 64 2d 70 74 72 00 |...exec-bad-ptr.|
  (exec-bad-ptr) begin
- exec-bad-ptr: exit(-1)
+ PAGE FAULT!!!
+ exec-bad-ptr : exit(-1)

OUTPUT FROM tests/userprog/exec-bad-ptr:

Copying tests/userprog/exec-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'exec-bad-ptr':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 65 78 65 63 2d-62 61 64 2d 70 74 72 00 |...exec-bad-ptr.|
(exec-bad-ptr) begin
PAGE FAULT!!!
exec-bad-ptr : exit(-1)
Execution of 'exec-bad-ptr' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 213 kernel ticks, 57 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1133 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-bad-ptr FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (open-bad-ptr) begin
  (open-bad-ptr) end
  open-bad-ptr: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 6f 70 65 6e 2d-62 61 64 2d 70 74 72 00 |...open-bad-ptr.|
  (open-bad-ptr) begin
- (open-bad-ptr) end
- open-bad-ptr: exit(0)
+ PAGE FAULT!!!
+ open-bad-ptr : exit(-1)
Acceptable output:
  (open-bad-ptr) begin
  open-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 6f 70 65 6e 2d-62 61 64 2d 70 74 72 00 |...open-bad-ptr.|
  (open-bad-ptr) begin
- open-bad-ptr: exit(-1)
+ PAGE FAULT!!!
+ open-bad-ptr : exit(-1)

OUTPUT FROM tests/userprog/open-bad-ptr:

Copying tests/userprog/open-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'open-bad-ptr':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 6f 70 65 6e 2d-62 61 64 2d 70 74 72 00 |...open-bad-ptr.|
(open-bad-ptr) begin
PAGE FAULT!!!
open-bad-ptr : exit(-1)
Execution of 'open-bad-ptr' complete.
Timer: 309 ticks
Thread: 42 idle ticks, 211 kernel ticks, 58 user ticks
hda2 (filesys): 65 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1133 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-bad-ptr FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (read-bad-ptr) begin
  (read-bad-ptr) open "sample.txt"
  (read-bad-ptr) end
  read-bad-ptr: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 72 65 61 64 2d-62 61 64 2d 70 74 72 00 |...read-bad-ptr.|
  (read-bad-ptr) begin
  (read-bad-ptr) open "sample.txt"
- (read-bad-ptr) end
- read-bad-ptr: exit(0)
+ Invalid Memory Access : 0xc0100000
+ read-bad-ptr : exit(-1)
Acceptable output:
  (read-bad-ptr) begin
  (read-bad-ptr) open "sample.txt"
  read-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 72 65 61 64 2d-62 61 64 2d 70 74 72 00 |...read-bad-ptr.|
  (read-bad-ptr) begin
  (read-bad-ptr) open "sample.txt"
- read-bad-ptr: exit(-1)
+ Invalid Memory Access : 0xc0100000
+ read-bad-ptr : exit(-1)

OUTPUT FROM tests/userprog/read-bad-ptr:

Copying tests/userprog/read-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-bad-ptr':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 72 65 61 64 2d-62 61 64 2d 70 74 72 00 |...read-bad-ptr.|
(read-bad-ptr) begin
(read-bad-ptr) open "sample.txt"
Invalid Memory Access : 0xc0100000
read-bad-ptr : exit(-1)
Execution of 'read-bad-ptr' complete.
Timer: 344 ticks
Thread: 45 idle ticks, 233 kernel ticks, 68 user ticks
hda2 (filesys): 92 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1232 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-bad-ptr FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (write-bad-ptr) begin
  (write-bad-ptr) open "sample.txt"
  (write-bad-ptr) end
  write-bad-ptr: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 77 72 69 74 65 2d-62 61 64 2d 70 74 72 00 |..write-bad-ptr.|
  (write-bad-ptr) begin
  (write-bad-ptr) open "sample.txt"
- (write-bad-ptr) end
- write-bad-ptr: exit(0)
+ PAGE FAULT!!!
+ write-bad-ptr : exit(-1)
Acceptable output:
  (write-bad-ptr) begin
  (write-bad-ptr) open "sample.txt"
  write-bad-ptr: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 77 72 69 74 65 2d-62 61 64 2d 70 74 72 00 |..write-bad-ptr.|
  (write-bad-ptr) begin
  (write-bad-ptr) open "sample.txt"
- write-bad-ptr: exit(-1)
+ PAGE FAULT!!!
+ write-bad-ptr : exit(-1)

OUTPUT FROM tests/userprog/write-bad-ptr:

Copying tests/userprog/write-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-bad-ptr':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 77 72 69 74 65 2d-62 61 64 2d 70 74 72 00 |..write-bad-ptr.|
(write-bad-ptr) begin
(write-bad-ptr) open "sample.txt"
PAGE FAULT!!!
write-bad-ptr : exit(-1)
Execution of 'write-bad-ptr' complete.
Timer: 343 ticks
Thread: 46 idle ticks, 233 kernel ticks, 66 user ticks
hda2 (filesys): 93 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1218 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-bound FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (create-bound) begin
  (create-bound) create("quux.dat"): 1
  (create-bound) end
  create-bound: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 63 72 65 61 74-65 2d 62 6f 75 6e 64 00 |...create-bound.|
  (create-bound) begin
  (create-bound) create("quux.dat"): 1
  (create-bound) end
- create-bound: exit(0)
+ create-bound : exit(0)

OUTPUT FROM tests/userprog/create-bound:

Copying tests/userprog/create-bound to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-bound
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bound' into the file system...
Erasing ustar archive...
Executing 'create-bound':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 63 72 65 61 74-65 2d 62 6f 75 6e 64 00 |...create-bound.|
(create-bound) begin
(create-bound) create("quux.dat"): 1
(create-bound) end
create-bound : exit(0)
Execution of 'create-bound' complete.
Timer: 336 ticks
Thread: 43 idle ticks, 218 kernel ticks, 77 user ticks
hda2 (filesys): 85 reads, 196 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1174 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-boundary FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (open-boundary) begin
  (open-boundary) open "sample.txt"
  (open-boundary) end
  open-boundary: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 6f 70 65 6e 2d 62-6f 75 6e 64 61 72 79 00 |..open-boundary.|
  (open-boundary) begin
  (open-boundary) open "sample.txt"
  (open-boundary) end
- open-boundary: exit(0)
+ open-boundary : exit(0)

OUTPUT FROM tests/userprog/open-boundary:

Copying tests/userprog/open-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 96 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-boundary':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 6f 70 65 6e 2d 62-6f 75 6e 64 61 72 79 00 |..open-boundary.|
(open-boundary) begin
(open-boundary) open "sample.txt"
(open-boundary) end
open-boundary : exit(0)
Execution of 'open-boundary' complete.
Timer: 352 ticks
Thread: 47 idle ticks, 238 kernel ticks, 69 user ticks
hda2 (filesys): 94 reads, 198 writes
hda3 (scratch): 95 reads, 2 writes
Console: 1223 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-boundary FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (read-boundary) begin
  (read-boundary) open "sample.txt"
  (read-boundary) end
  read-boundary: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 72 65 61 64 2d 62-6f 75 6e 64 61 72 79 00 |..read-boundary.|
  (read-boundary) begin
  (read-boundary) open "sample.txt"
  (read-boundary) end
- read-boundary: exit(0)
+ read-boundary : exit(0)

OUTPUT FROM tests/userprog/read-boundary:

Copying tests/userprog/read-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 97 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-boundary':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 72 65 61 64 2d 62-6f 75 6e 64 61 72 79 00 |..read-boundary.|
(read-boundary) begin
(read-boundary) open "sample.txt"
(read-boundary) end
read-boundary : exit(0)
Execution of 'read-boundary' complete.
Timer: 354 ticks
Thread: 47 idle ticks, 239 kernel ticks, 70 user ticks
hda2 (filesys): 96 reads, 200 writes
hda3 (scratch): 96 reads, 2 writes
Console: 1223 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-boundary FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (write-boundary) begin
  (write-boundary) open "sample.txt"
  (write-boundary) end
  write-boundary: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                         00 00 00 |             ...|
+ bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
+ bffffff0  00 77 72 69 74 65 2d 62-6f 75 6e 64 61 72 79 00 |.write-boundary.|
  (write-boundary) begin
  (write-boundary) open "sample.txt"
  (write-boundary) end
- write-boundary: exit(0)
+ write-boundary : exit(0)

OUTPUT FROM tests/userprog/write-boundary:

Copying tests/userprog/write-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run write-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 97 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-boundary':
bfffffd0                                         00 00 00 |             ...|
bfffffe0  00 01 00 00 00 e9 ff ff-bf f1 ff ff bf 00 00 00 |................|
bffffff0  00 77 72 69 74 65 2d 62-6f 75 6e 64 61 72 79 00 |.write-boundary.|
(write-boundary) begin
(write-boundary) open "sample.txt"
(write-boundary) end
write-boundary : exit(0)
Execution of 'write-boundary' complete.
Timer: 354 ticks
Thread: 46 idle ticks, 238 kernel ticks, 73 user ticks
hda2 (filesys): 95 reads, 201 writes
hda3 (scratch): 96 reads, 2 writes
Console: 1231 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-null FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (create-null) begin
  create-null: exit(-1)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 63 72 65 61-74 65 2d 6e 75 6c 6c 00 |....create-null.|
  (create-null) begin
- create-null: exit(-1)
+ Invalid Memory Access : 0
+ create-null : exit(-1)

OUTPUT FROM tests/userprog/create-null:

Copying tests/userprog/create-null to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run create-null
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-null' into the file system...
Erasing ustar archive...
Executing 'create-null':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 63 72 65 61-74 65 2d 6e 75 6c 6c 00 |....create-null.|
(create-null) begin
Invalid Memory Access : 0
create-null : exit(-1)
Execution of 'create-null' complete.
Timer: 301 ticks
Thread: 42 idle ticks, 213 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1062 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-null FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (open-null) begin
  (open-null) end
  open-null: exit(0)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 6f 70-65 6e 2d 6e 75 6c 6c 00 |......open-null.|
  (open-null) begin
- (open-null) end
- open-null: exit(0)
+ Invalid Memory Access : 0
+ open-null : exit(-1)
Acceptable output:
  (open-null) begin
  open-null: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 6f 70-65 6e 2d 6e 75 6c 6c 00 |......open-null.|
  (open-null) begin
- open-null: exit(-1)
+ Invalid Memory Access : 0
+ open-null : exit(-1)

OUTPUT FROM tests/userprog/open-null:

Copying tests/userprog/open-null to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-null
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-null' into the file system...
Erasing ustar archive...
Executing 'open-null':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 6f 70-65 6e 2d 6e 75 6c 6c 00 |......open-null.|
(open-null) begin
Invalid Memory Access : 0
open-null : exit(-1)
Execution of 'open-null' complete.
Timer: 300 ticks
Thread: 41 idle ticks, 213 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1050 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-empty FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (open-empty) begin
  (open-empty) end
  open-empty: exit(0)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 6f 70 65-6e 2d 65 6d 70 74 79 00 |.....open-empty.|
  (open-empty) begin
  (open-empty) end
- open-empty: exit(0)
+ open-empty : exit(0)

OUTPUT FROM tests/userprog/open-empty:

Copying tests/userprog/open-empty to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-empty
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-empty' into the file system...
Erasing ustar archive...
Executing 'open-empty':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 6f 70 65-6e 2d 65 6d 70 74 79 00 |.....open-empty.|
(open-empty) begin
(open-empty) end
open-empty : exit(0)
Execution of 'open-empty' complete.
Timer: 309 ticks
Thread: 43 idle ticks, 211 kernel ticks, 57 user ticks
hda2 (filesys): 80 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1046 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/sc-bad-arg FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sc-bad-arg) begin
  sc-bad-arg: exit(-1)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 73 63 2d-62 61 64 2d 61 72 67 00 |.....sc-bad-arg.|
  (sc-bad-arg) begin
- sc-bad-arg: exit(-1)
+ Invalid Memory Access : 0xc0000000
+ sc-bad-arg : exit(-1)

OUTPUT FROM tests/userprog/sc-bad-arg:

Copying tests/userprog/sc-bad-arg to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-bad-arg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-arg' into the file system...
Erasing ustar archive...
Executing 'sc-bad-arg':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 73 63 2d-62 61 64 2d 61 72 67 00 |.....sc-bad-arg.|
(sc-bad-arg) begin
Invalid Memory Access : 0xc0000000
sc-bad-arg : exit(-1)
Execution of 'sc-bad-arg' complete.
Timer: 302 ticks
Thread: 43 idle ticks, 212 kernel ticks, 50 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1065 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/sc-bad-sp FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sc-bad-sp) begin
  sc-bad-sp: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 73 63-2d 62 61 64 2d 73 70 00 |......sc-bad-sp.|
  (sc-bad-sp) begin
- sc-bad-sp: exit(-1)
+ Invalid Memory Access : 0x40480a3
+ sc-bad-sp : exit(-1)

OUTPUT FROM tests/userprog/sc-bad-sp:

Copying tests/userprog/sc-bad-sp to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-bad-sp
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-sp' into the file system...
Erasing ustar archive...
Executing 'sc-bad-sp':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 73 63-2d 62 61 64 2d 73 70 00 |......sc-bad-sp.|
(sc-bad-sp) begin
Invalid Memory Access : 0x40480a3
sc-bad-sp : exit(-1)
Execution of 'sc-bad-sp' complete.
Timer: 301 ticks
Thread: 41 idle ticks, 212 kernel ticks, 50 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1058 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/sc-boundary FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sc-boundary) begin
  sc-boundary: exit(42)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 73 63 2d 62-6f 75 6e 64 61 72 79 00 |....sc-boundary.|
  (sc-boundary) begin
- sc-boundary: exit(42)
+ sc-boundary : exit(42)

OUTPUT FROM tests/userprog/sc-boundary:

Copying tests/userprog/sc-boundary to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-boundary' into the file system...
Erasing ustar archive...
Executing 'sc-boundary':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 73 63 2d 62-6f 75 6e 64 61 72 79 00 |....sc-boundary.|
(sc-boundary) begin
sc-boundary : exit(42)
Execution of 'sc-boundary' complete.
Timer: 307 ticks
Thread: 41 idle ticks, 219 kernel ticks, 50 user ticks
hda2 (filesys): 65 reads, 192 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1036 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/sc-boundary-2 FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sc-boundary-2) begin
  sc-boundary-2: exit(67)
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 73 63 2d 62 6f 75-6e 64 61 72 79 2d 32 00 |..sc-boundary-2.|
  (sc-boundary-2) begin
- sc-boundary-2: exit(67)
+ sc-boundary-2 : exit(67)

OUTPUT FROM tests/userprog/sc-boundary-2:

Copying tests/userprog/sc-boundary-2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-boundary-2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-boundary-2' into the file system...
Erasing ustar archive...
Executing 'sc-boundary-2':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 73 63 2d 62 6f 75-6e 64 61 72 79 2d 32 00 |..sc-boundary-2.|
(sc-boundary-2) begin
sc-boundary-2 : exit(67)
Execution of 'sc-boundary-2' complete.
Timer: 317 ticks
Thread: 43 idle ticks, 218 kernel ticks, 59 user ticks
hda2 (filesys): 65 reads, 192 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1125 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-missing FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (exec-missing) begin
  load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
  no-such-file: exit(-1)
  (exec-missing) end
  exec-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
  (exec-missing) begin
  load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
- no-such-file: exit(-1)
  (exec-missing) end
- exec-missing: exit(0)
+ exec-missing : exit(0)
Acceptable output:
  (exec-missing) begin
  load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
  exec-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
  (exec-missing) begin
  load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
- exec-missing: exit(0)
+ exec-missing : exit(0)
Acceptable output:
  (exec-missing) begin
  load: no-such-file: open failed
  no-such-file: exit(-1)
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
  exec-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
  (exec-missing) begin
  load: no-such-file: open failed
- no-such-file: exit(-1)
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
- exec-missing: exit(0)
+ exec-missing : exit(0)
Acceptable output:
  (exec-missing) begin
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
  exec-missing: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
  (exec-missing) begin
+ load: no-such-file: open failed
  (exec-missing) exec("no-such-file"): -1
  (exec-missing) end
- exec-missing: exit(0)
+ exec-missing : exit(0)

OUTPUT FROM tests/userprog/exec-missing:

Copying tests/userprog/exec-missing to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run exec-missing
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-missing' into the file system...
Erasing ustar archive...
Executing 'exec-missing':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 65 78 65 63 2d-6d 69 73 73 69 6e 67 00 |...exec-missing.|
(exec-missing) begin
load: no-such-file: open failed
(exec-missing) exec("no-such-file"): -1
(exec-missing) end
exec-missing : exit(0)
Execution of 'exec-missing' complete.
Timer: 334 ticks
Thread: 42 idle ticks, 215 kernel ticks, 79 user ticks
hda2 (filesys): 80 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1209 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-bad-pid FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (wait-bad-pid) begin
  wait-bad-pid: exit(-1)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 61 69 74 2d-62 61 64 2d 70 69 64 00 |...wait-bad-pid.|
  (wait-bad-pid) begin
- wait-bad-pid: exit(-1)
+ (wait-bad-pid) end
+ wait-bad-pid : exit(0)
Acceptable output:
  (wait-bad-pid) begin
  (wait-bad-pid) end
  wait-bad-pid: exit(0)
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 77 61 69 74 2d-62 61 64 2d 70 69 64 00 |...wait-bad-pid.|
  (wait-bad-pid) begin
  (wait-bad-pid) end
- wait-bad-pid: exit(0)
+ wait-bad-pid : exit(0)

OUTPUT FROM tests/userprog/wait-bad-pid:

Copying tests/userprog/wait-bad-pid to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-bad-pid
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-bad-pid' into the file system...
Erasing ustar archive...
Executing 'wait-bad-pid':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 77 61 69 74 2d-62 61 64 2d 70 69 64 00 |...wait-bad-pid.|
(wait-bad-pid) begin
(wait-bad-pid) end
wait-bad-pid : exit(0)
Execution of 'wait-bad-pid' complete.
Timer: 310 ticks
Thread: 42 idle ticks, 213 kernel ticks, 58 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1137 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-killed FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (wait-killed) begin
  (child-bad) begin
  child-bad: exit(-1)
  (wait-killed) wait(exec()) = -1
  (wait-killed) end
  wait-killed: exit(0)
Differences in `diff -u' format:
+ bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
+ bffffff0  00 00 00 00 77 61 69 74-2d 6b 69 6c 6c 65 64 00 |....wait-killed.|
  (wait-killed) begin
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 63 68-69 6c 64 2d 62 61 64 00 |......child-bad.|
  (child-bad) begin
- child-bad: exit(-1)
+ PAGE FAULT!!!
+ child-bad : exit(-1)
  (wait-killed) wait(exec()) = -1
  (wait-killed) end
- wait-killed: exit(0)
+ wait-killed : exit(0)

OUTPUT FROM tests/userprog/wait-killed:

Copying tests/userprog/wait-killed to scratch partition...
Copying tests/userprog/child-bad to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-killed
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 180 sectors (90 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Erasing ustar archive...
Executing 'wait-killed':
bfffffe0  00 00 00 00 01 00 00 00-ec ff ff bf f4 ff ff bf |................|
bffffff0  00 00 00 00 77 61 69 74-2d 6b 69 6c 6c 65 64 00 |....wait-killed.|
(wait-killed) begin
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 63 68-69 6c 64 2d 62 61 64 00 |......child-bad.|
(child-bad) begin
PAGE FAULT!!!
child-bad : exit(-1)
(wait-killed) wait(exec()) = -1
(wait-killed) end
wait-killed : exit(0)
Execution of 'wait-killed' complete.
Timer: 480 ticks
Thread: 81 idle ticks, 294 kernel ticks, 108 user ticks
hda2 (filesys): 126 reads, 366 writes
hda3 (scratch): 179 reads, 2 writes
Console: 1340 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-read FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-read) begin
  bad-read: exit(-1)
Differences in `diff -u' format:
+ bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
+ bffffff0  ff ff bf 00 00 00 00 62-61 64 2d 72 65 61 64 00 |.......bad-read.|
  (bad-read) begin
- bad-read: exit(-1)
+ PAGE FAULT!!!
+ bad-read : exit(-1)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-read:

Copying tests/userprog/bad-read to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-read
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read' into the file system...
Erasing ustar archive...
Executing 'bad-read':
bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
bffffff0  ff ff bf 00 00 00 00 62-61 64 2d 72 65 61 64 00 |.......bad-read.|
(bad-read) begin
PAGE FAULT!!!
bad-read : exit(-1)
Execution of 'bad-read' complete.
Timer: 300 ticks
Thread: 42 idle ticks, 213 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1032 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-write) begin
  bad-write: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 62 61-64 2d 77 72 69 74 65 00 |......bad-write.|
  (bad-write) begin
- bad-write: exit(-1)
+ PAGE FAULT!!!
+ bad-write : exit(-1)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-write:

Copying tests/userprog/bad-write to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-write
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write' into the file system...
Erasing ustar archive...
Executing 'bad-write':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 62 61-64 2d 77 72 69 74 65 00 |......bad-write.|
(bad-write) begin
PAGE FAULT!!!
bad-write : exit(-1)
Execution of 'bad-write' complete.
Timer: 299 ticks
Thread: 41 idle ticks, 212 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1038 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-jump FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-jump) begin
  bad-jump: exit(-1)
Differences in `diff -u' format:
+ bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
+ bffffff0  ff ff bf 00 00 00 00 62-61 64 2d 6a 75 6d 70 00 |.......bad-jump.|
  (bad-jump) begin
- bad-jump: exit(-1)
+ PAGE FAULT!!!
+ bad-jump : exit(-1)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-jump:

Copying tests/userprog/bad-jump to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-jump
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump' into the file system...
Erasing ustar archive...
Executing 'bad-jump':
bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
bffffff0  ff ff bf 00 00 00 00 62-61 64 2d 6a 75 6d 70 00 |.......bad-jump.|
(bad-jump) begin
PAGE FAULT!!!
bad-jump : exit(-1)
Execution of 'bad-jump' complete.
Timer: 298 ticks
Thread: 41 idle ticks, 213 kernel ticks, 47 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1032 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-read2 FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-read2) begin
  bad-read2: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 62 61-64 2d 72 65 61 64 32 00 |......bad-read2.|
  (bad-read2) begin
- bad-read2: exit(-1)
+ PAGE FAULT!!!
+ bad-read2 : exit(-1)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-read2:

Copying tests/userprog/bad-read2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-read2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read2' into the file system...
Erasing ustar archive...
Executing 'bad-read2':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 62 61-64 2d 72 65 61 64 32 00 |......bad-read2.|
(bad-read2) begin
PAGE FAULT!!!
bad-read2 : exit(-1)
Execution of 'bad-read2' complete.
Timer: 300 ticks
Thread: 42 idle ticks, 211 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1038 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write2 FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-write2) begin
  bad-write2: exit(-1)
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 62 61 64-2d 77 72 69 74 65 32 00 |.....bad-write2.|
  (bad-write2) begin
- bad-write2: exit(-1)
+ PAGE FAULT!!!
+ bad-write2 : exit(-1)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-write2:

Copying tests/userprog/bad-write2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-write2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write2' into the file system...
Erasing ustar archive...
Executing 'bad-write2':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 62 61 64-2d 77 72 69 74 65 32 00 |.....bad-write2.|
(bad-write2) begin
PAGE FAULT!!!
bad-write2 : exit(-1)
Execution of 'bad-write2' complete.
Timer: 299 ticks
Thread: 42 idle ticks, 212 kernel ticks, 48 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1044 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-jump2 FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-jump2) begin
  bad-jump2: exit(-1)
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 62 61-64 2d 6a 75 6d 70 32 00 |......bad-jump2.|
  (bad-jump2) begin
- bad-jump2: exit(-1)
+ PAGE FAULT!!!
+ bad-jump2 : exit(-1)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-jump2:

Copying tests/userprog/bad-jump2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-jump2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump2' into the file system...
Erasing ustar archive...
Executing 'bad-jump2':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 62 61-64 2d 6a 75 6d 70 32 00 |......bad-jump2.|
(bad-jump2) begin
PAGE FAULT!!!
bad-jump2 : exit(-1)
Execution of 'bad-jump2' complete.
Timer: 300 ticks
Thread: 42 idle ticks, 211 kernel ticks, 49 user ticks
hda2 (filesys): 63 reads, 188 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1038 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/no-vm/multi-oom FAILURE:

Kernel panic in run: PANIC at ../../threads/malloc.c:246 in free(): assertion `a->free_cnt == d->blocks_per_arena' failed.
Call stack: 0xc002866e
Translation of call stack:
0xc002866e: debug_panic (.../../lib/kernel/debug.c:38)

OUTPUT FROM tests/userprog/no-vm/multi-oom:

Copying tests/userprog/no-vm/multi-oom to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-oom
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-oom' into the file system...
Erasing ustar archive...
Executing 'multi-oom':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 6d 75-6c 74 69 2d 6f 6f 6d 00 |......multi-oom.|
(multi-oom) begin
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 31 00 |....multi-oom.1.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 32 00 |....multi-oom.2.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 33 00 |....multi-oom.3.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 34 00 |....multi-oom.4.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 35 00 |....multi-oom.5.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 36 00 |....multi-oom.6.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 37 00 |....multi-oom.7.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 38 00 |....multi-oom.8.|
bfffffd0                                      00 00 00 00 |            ....|
bfffffe0  02 00 00 00 e8 ff ff bf-f4 ff ff bf fe ff ff bf |................|
bffffff0  00 00 00 00 6d 75 6c 74-69 2d 6f 6f 6d 00 39 00 |....multi-oom.9.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 30 00 |...multi-oom.10.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 31 00 |...multi-oom.11.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 32 00 |...multi-oom.12.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 33 00 |...multi-oom.13.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 34 00 |...multi-oom.14.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 35 00 |...multi-oom.15.|
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 36 00 |...multi-oom.16.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 31 37 00 2d 6b 00 |multi-oom.17.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 37 00 |...multi-oom.17.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 31 38 00 2d 6b 00 |multi-oom.18.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 38 00 |...multi-oom.18.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 31 39 00 2d 6b 00 |multi-oom.19.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 31 39 00 |...multi-oom.19.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 32 30 00 2d 6b 00 |multi-oom.20.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 32 30 00 |...multi-oom.20.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 32 31 00 2d 6b 00 |multi-oom.21.-k.|
PAGE FAULT!!!
multi-oom : exit(-1)
bfffffd0                                   00 00 00 00 02 |           .....|
bfffffe0  00 00 00 e7 ff ff bf f3-ff ff bf fd ff ff bf 00 |................|
bffffff0  00 00 00 6d 75 6c 74 69-2d 6f 6f 6d 00 32 31 00 |...multi-oom.21.|
bfffffd0              00 00 00 00-03 00 00 00 e0 ff ff bf |    ............|
bfffffe0  f0 ff ff bf fa ff ff bf-fd ff ff bf 00 00 00 00 |................|
bffffff0  6d 75 6c 74 69 2d 6f 6f-6d 00 32 32 00 2d 6b 00 |multi-oom.22.-k.|
Invalid Memory Access : 0xc0000000
multi-oom : exit(-1)
Kernel PANIC at ../../threads/malloc.c:246 in free(): assertion `a->free_cnt == d->blocks_per_arena' failed.
Call stack: 0xc002866e 0 0.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../threads/synch.c:197 in lock_acquire().
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FAULT!!!
multi-oom : exit(-1)
PAGE FPiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-oom
Pintos booting with 4,096 kB RAM...
[...details of reboot(s) omitted...]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-create FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sm-create) begin
  (sm-create) create "blargle"
  (sm-create) open "blargle" for verification
  (sm-create) verified contents of "blargle"
  (sm-create) close "blargle"
  (sm-create) end
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 73 6d-2d 63 72 65 61 74 65 00 |......sm-create.|
  (sm-create) begin
  (sm-create) create "blargle"
  (sm-create) open "blargle" for verification
  (sm-create) verified contents of "blargle"
  (sm-create) close "blargle"
  (sm-create) end
+ sm-create : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/sm-create:

Copying tests/filesys/base/sm-create to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-create
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-create' into the file system...
Erasing ustar archive...
Executing 'sm-create':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 73 6d-2d 63 72 65 61 74 65 00 |......sm-create.|
(sm-create) begin
(sm-create) create "blargle"
(sm-create) open "blargle" for verification
(sm-create) verified contents of "blargle"
(sm-create) close "blargle"
(sm-create) end
sm-create : exit(0)
Execution of 'sm-create' complete.
Timer: 348 ticks
Thread: 43 idle ticks, 216 kernel ticks, 92 user ticks
hda2 (filesys): 101 reads, 210 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1184 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-full FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sm-full) begin
  (sm-full) create "quux"
  (sm-full) open "quux"
  (sm-full) writing "quux"
  (sm-full) close "quux"
  (sm-full) open "quux" for verification
  (sm-full) verified contents of "quux"
  (sm-full) close "quux"
  (sm-full) end
Differences in `diff -u' format:
+ bfffffe0              00 00 00 00-01 00 00 00 f0 ff ff bf |    ............|
+ bffffff0  f8 ff ff bf 00 00 00 00-73 6d 2d 66 75 6c 6c 00 |........sm-full.|
  (sm-full) begin
  (sm-full) create "quux"
  (sm-full) open "quux"
  (sm-full) writing "quux"
  (sm-full) close "quux"
  (sm-full) open "quux" for verification
  (sm-full) verified contents of "quux"
  (sm-full) close "quux"
  (sm-full) end
+ sm-full : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/sm-full:

Copying tests/filesys/base/sm-full to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-full
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-full' into the file system...
Erasing ustar archive...
Executing 'sm-full':
bfffffe0              00 00 00 00-01 00 00 00 f0 ff ff bf |    ............|
bffffff0  f8 ff ff bf 00 00 00 00-73 6d 2d 66 75 6c 6c 00 |........sm-full.|
(sm-full) begin
(sm-full) create "quux"
(sm-full) open "quux"
(sm-full) writing "quux"
(sm-full) close "quux"
(sm-full) open "quux" for verification
(sm-full) verified contents of "quux"
(sm-full) close "quux"
(sm-full) end
sm-full : exit(0)
Execution of 'sm-full' complete.
Timer: 372 ticks
Thread: 45 idle ticks, 214 kernel ticks, 116 user ticks
hda2 (filesys): 106 reads, 222 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1221 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-random FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sm-random) begin
  (sm-random) create "bazzle"
  (sm-random) open "bazzle"
  (sm-random) write "bazzle" in random order
  (sm-random) read "bazzle" in random order
  (sm-random) close "bazzle"
  (sm-random) end
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 73 6d-2d 72 61 6e 64 6f 6d 00 |......sm-random.|
  (sm-random) begin
  (sm-random) create "bazzle"
  (sm-random) open "bazzle"
  (sm-random) write "bazzle" in random order
  (sm-random) read "bazzle" in random order
  (sm-random) close "bazzle"
  (sm-random) end
+ sm-random : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/sm-random:

Copying tests/filesys/base/sm-random to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 97 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-random' into the file system...
Erasing ustar archive...
Executing 'sm-random':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 73 6d-2d 72 61 6e 64 6f 6d 00 |......sm-random.|
(sm-random) begin
(sm-random) create "bazzle"
(sm-random) open "bazzle"
(sm-random) write "bazzle" in random order
(sm-random) read "bazzle" in random order
(sm-random) close "bazzle"
(sm-random) end
sm-random : exit(0)
Execution of 'sm-random' complete.
Timer: 507 ticks
Thread: 44 idle ticks, 216 kernel ticks, 249 user ticks
hda2 (filesys): 335 reads, 332 writes
hda3 (scratch): 96 reads, 2 writes
Console: 1207 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-seq-block FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sm-seq-block) begin
  (sm-seq-block) create "noodle"
  (sm-seq-block) open "noodle"
  (sm-seq-block) writing "noodle"
  (sm-seq-block) close "noodle"
  (sm-seq-block) open "noodle" for verification
  (sm-seq-block) verified contents of "noodle"
  (sm-seq-block) close "noodle"
  (sm-seq-block) end
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 73 6d 2d 73 65-71 2d 62 6c 6f 63 6b 00 |...sm-seq-block.|
  (sm-seq-block) begin
  (sm-seq-block) create "noodle"
  (sm-seq-block) open "noodle"
  (sm-seq-block) writing "noodle"
  (sm-seq-block) close "noodle"
  (sm-seq-block) open "noodle" for verification
  (sm-seq-block) verified contents of "noodle"
  (sm-seq-block) close "noodle"
  (sm-seq-block) end
+ sm-seq-block : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/sm-seq-block:

Copying tests/filesys/base/sm-seq-block to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-seq-block
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-block' into the file system...
Erasing ustar archive...
Executing 'sm-seq-block':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 73 6d 2d 73 65-71 2d 62 6c 6f 63 6b 00 |...sm-seq-block.|
(sm-seq-block) begin
(sm-seq-block) create "noodle"
(sm-seq-block) open "noodle"
(sm-seq-block) writing "noodle"
(sm-seq-block) close "noodle"
(sm-seq-block) open "noodle" for verification
(sm-seq-block) verified contents of "noodle"
(sm-seq-block) close "noodle"
(sm-seq-block) end
sm-seq-block : exit(0)
Execution of 'sm-seq-block' complete.
Timer: 400 ticks
Thread: 43 idle ticks, 217 kernel ticks, 143 user ticks
hda2 (filesys): 127 reads, 233 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1382 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-seq-random FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sm-seq-random) begin
  (sm-seq-random) create "nibble"
  (sm-seq-random) open "nibble"
  (sm-seq-random) writing "nibble"
  (sm-seq-random) close "nibble"
  (sm-seq-random) open "nibble" for verification
  (sm-seq-random) verified contents of "nibble"
  (sm-seq-random) close "nibble"
  (sm-seq-random) end
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 73 6d 2d 73 65 71-2d 72 61 6e 64 6f 6d 00 |..sm-seq-random.|
  (sm-seq-random) begin
  (sm-seq-random) create "nibble"
  (sm-seq-random) open "nibble"
  (sm-seq-random) writing "nibble"
  (sm-seq-random) close "nibble"
  (sm-seq-random) open "nibble" for verification
  (sm-seq-random) verified contents of "nibble"
  (sm-seq-random) close "nibble"
  (sm-seq-random) end
+ sm-seq-random : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/sm-seq-random:

Copying tests/filesys/base/sm-seq-random to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-seq-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-random' into the file system...
Erasing ustar archive...
Executing 'sm-seq-random':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 73 6d 2d 73 65 71-2d 72 61 6e 64 6f 6d 00 |..sm-seq-random.|
(sm-seq-random) begin
(sm-seq-random) create "nibble"
(sm-seq-random) open "nibble"
(sm-seq-random) writing "nibble"
(sm-seq-random) close "nibble"
(sm-seq-random) open "nibble" for verification
(sm-seq-random) verified contents of "nibble"
(sm-seq-random) close "nibble"
(sm-seq-random) end
sm-seq-random : exit(0)
Execution of 'sm-seq-random' complete.
Timer: 399 ticks
Thread: 43 idle ticks, 218 kernel ticks, 140 user ticks
hda2 (filesys): 120 reads, 230 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1396 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-create FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (lg-create) begin
  (lg-create) create "blargle"
  (lg-create) open "blargle" for verification
  (lg-create) verified contents of "blargle"
  (lg-create) close "blargle"
  (lg-create) end
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 6c 67-2d 63 72 65 61 74 65 00 |......lg-create.|
  (lg-create) begin
  (lg-create) create "blargle"
  (lg-create) open "blargle" for verification
  (lg-create) verified contents of "blargle"
  (lg-create) close "blargle"
  (lg-create) end
+ lg-create : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/lg-create:

Copying tests/filesys/base/lg-create to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-create
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-create' into the file system...
Erasing ustar archive...
Executing 'lg-create':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 6c 67-2d 63 72 65 61 74 65 00 |......lg-create.|
(lg-create) begin
(lg-create) create "blargle"
(lg-create) open "blargle" for verification
(lg-create) verified contents of "blargle"
(lg-create) close "blargle"
(lg-create) end
lg-create : exit(0)
Execution of 'lg-create' complete.
Timer: 512 ticks
Thread: 43 idle ticks, 245 kernel ticks, 227 user ticks
hda2 (filesys): 237 reads, 346 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1185 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-full FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (lg-full) begin
  (lg-full) create "quux"
  (lg-full) open "quux"
  (lg-full) writing "quux"
  (lg-full) close "quux"
  (lg-full) open "quux" for verification
  (lg-full) verified contents of "quux"
  (lg-full) close "quux"
  (lg-full) end
Differences in `diff -u' format:
+ bfffffe0              00 00 00 00-01 00 00 00 f0 ff ff bf |    ............|
+ bffffff0  f8 ff ff bf 00 00 00 00-6c 67 2d 66 75 6c 6c 00 |........lg-full.|
  (lg-full) begin
  (lg-full) create "quux"
  (lg-full) open "quux"
  (lg-full) writing "quux"
  (lg-full) close "quux"
  (lg-full) open "quux" for verification
  (lg-full) verified contents of "quux"
  (lg-full) close "quux"
  (lg-full) end
+ lg-full : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/lg-full:

Copying tests/filesys/base/lg-full to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-full
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-full' into the file system...
Erasing ustar archive...
Executing 'lg-full':
bfffffe0              00 00 00 00-01 00 00 00 f0 ff ff bf |    ............|
bffffff0  f8 ff ff bf 00 00 00 00-6c 67 2d 66 75 6c 6c 00 |........lg-full.|
(lg-full) begin
(lg-full) create "quux"
(lg-full) open "quux"
(lg-full) writing "quux"
(lg-full) close "quux"
(lg-full) open "quux" for verification
(lg-full) verified contents of "quux"
(lg-full) close "quux"
(lg-full) end
lg-full : exit(0)
Execution of 'lg-full' complete.
Timer: 678 ticks
Thread: 47 idle ticks, 243 kernel ticks, 391 user ticks
hda2 (filesys): 242 reads, 494 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1221 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-random FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (lg-random) begin
  (lg-random) create "bazzle"
  (lg-random) open "bazzle"
  (lg-random) write "bazzle" in random order
  (lg-random) read "bazzle" in random order
  (lg-random) close "bazzle"
  (lg-random) end
Differences in `diff -u' format:
+ bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
+ bffffff0  ff bf 00 00 00 00 6c 67-2d 72 61 6e 64 6f 6d 00 |......lg-random.|
  (lg-random) begin
  (lg-random) create "bazzle"
  (lg-random) open "bazzle"
  (lg-random) write "bazzle" in random order
  (lg-random) read "bazzle" in random order
  (lg-random) close "bazzle"
  (lg-random) end
+ lg-random : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/lg-random:

Copying tests/filesys/base/lg-random to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 97 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-random' into the file system...
Erasing ustar archive...
Executing 'lg-random':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 6c 67-2d 72 61 6e 64 6f 6d 00 |......lg-random.|
(lg-random) begin
(lg-random) create "bazzle"
(lg-random) open "bazzle"
(lg-random) write "bazzle" in random order
(lg-random) read "bazzle" in random order
(lg-random) close "bazzle"
(lg-random) end
lg-random : exit(0)
Execution of 'lg-random' complete.
Timer: 708 ticks
Thread: 51 idle ticks, 248 kernel ticks, 411 user ticks
hda2 (filesys): 233 reads, 502 writes
hda3 (scratch): 96 reads, 2 writes
Console: 1207 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-seq-block FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (lg-seq-block) begin
  (lg-seq-block) create "noodle"
  (lg-seq-block) open "noodle"
  (lg-seq-block) writing "noodle"
  (lg-seq-block) close "noodle"
  (lg-seq-block) open "noodle" for verification
  (lg-seq-block) verified contents of "noodle"
  (lg-seq-block) close "noodle"
  (lg-seq-block) end
Differences in `diff -u' format:
+ bfffffd0                                               00 |               .|
+ bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
+ bffffff0  00 00 00 6c 67 2d 73 65-71 2d 62 6c 6f 63 6b 00 |...lg-seq-block.|
  (lg-seq-block) begin
  (lg-seq-block) create "noodle"
  (lg-seq-block) open "noodle"
  (lg-seq-block) writing "noodle"
  (lg-seq-block) close "noodle"
  (lg-seq-block) open "noodle" for verification
  (lg-seq-block) verified contents of "noodle"
  (lg-seq-block) close "noodle"
  (lg-seq-block) end
+ lg-seq-block : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/lg-seq-block:

Copying tests/filesys/base/lg-seq-block to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-seq-block
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-block' into the file system...
Erasing ustar archive...
Executing 'lg-seq-block':
bfffffd0                                               00 |               .|
bfffffe0  00 00 00 01 00 00 00 eb-ff ff bf f3 ff ff bf 00 |................|
bffffff0  00 00 00 6c 67 2d 73 65-71 2d 62 6c 6f 63 6b 00 |...lg-seq-block.|
(lg-seq-block) begin
(lg-seq-block) create "noodle"
(lg-seq-block) open "noodle"
(lg-seq-block) writing "noodle"
(lg-seq-block) close "noodle"
(lg-seq-block) open "noodle" for verification
(lg-seq-block) verified contents of "noodle"
(lg-seq-block) close "noodle"
(lg-seq-block) end
lg-seq-block : exit(0)
Execution of 'lg-seq-block' complete.
Timer: 855 ticks
Thread: 43 idle ticks, 246 kernel ticks, 569 user ticks
hda2 (filesys): 535 reads, 641 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1382 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-seq-random FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (lg-seq-random) begin
  (lg-seq-random) create "nibble"
  (lg-seq-random) open "nibble"
  (lg-seq-random) writing "nibble"
  (lg-seq-random) close "nibble"
  (lg-seq-random) open "nibble" for verification
  (lg-seq-random) verified contents of "nibble"
  (lg-seq-random) close "nibble"
  (lg-seq-random) end
Differences in `diff -u' format:
+ bfffffd0                                            00 00 |              ..|
+ bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
+ bffffff0  00 00 6c 67 2d 73 65 71-2d 72 61 6e 64 6f 6d 00 |..lg-seq-random.|
  (lg-seq-random) begin
  (lg-seq-random) create "nibble"
  (lg-seq-random) open "nibble"
  (lg-seq-random) writing "nibble"
  (lg-seq-random) close "nibble"
  (lg-seq-random) open "nibble" for verification
  (lg-seq-random) verified contents of "nibble"
  (lg-seq-random) close "nibble"
  (lg-seq-random) end
+ lg-seq-random : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/lg-seq-random:

Copying tests/filesys/base/lg-seq-random to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-seq-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 95 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-random' into the file system...
Erasing ustar archive...
Executing 'lg-seq-random':
bfffffd0                                            00 00 |              ..|
bfffffe0  00 00 01 00 00 00 ea ff-ff bf f2 ff ff bf 00 00 |................|
bffffff0  00 00 6c 67 2d 73 65 71-2d 72 61 6e 64 6f 6d 00 |..lg-seq-random.|
(lg-seq-random) begin
(lg-seq-random) create "nibble"
(lg-seq-random) open "nibble"
(lg-seq-random) writing "nibble"
(lg-seq-random) close "nibble"
(lg-seq-random) open "nibble" for verification
(lg-seq-random) verified contents of "nibble"
(lg-seq-random) close "nibble"
(lg-seq-random) end
lg-seq-random : exit(0)
Execution of 'lg-seq-random' complete.
Timer: 848 ticks
Thread: 43 idle ticks, 246 kernel ticks, 561 user ticks
hda2 (filesys): 505 reads, 646 writes
hda3 (scratch): 94 reads, 2 writes
Console: 1396 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-read FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (syn-read) begin
  (syn-read) create "data"
  (syn-read) open "data"
  (syn-read) write "data"
  (syn-read) close "data"
  (syn-read) exec child 1 of 10: "child-syn-read 0"
  (syn-read) exec child 2 of 10: "child-syn-read 1"
  (syn-read) exec child 3 of 10: "child-syn-read 2"
  (syn-read) exec child 4 of 10: "child-syn-read 3"
  (syn-read) exec child 5 of 10: "child-syn-read 4"
  (syn-read) exec child 6 of 10: "child-syn-read 5"
  (syn-read) exec child 7 of 10: "child-syn-read 6"
  (syn-read) exec child 8 of 10: "child-syn-read 7"
  (syn-read) exec child 9 of 10: "child-syn-read 8"
  (syn-read) exec child 10 of 10: "child-syn-read 9"
  (syn-read) wait for child 1 of 10 returned 0 (expected 0)
  (syn-read) wait for child 2 of 10 returned 1 (expected 1)
  (syn-read) wait for child 3 of 10 returned 2 (expected 2)
  (syn-read) wait for child 4 of 10 returned 3 (expected 3)
  (syn-read) wait for child 5 of 10 returned 4 (expected 4)
  (syn-read) wait for child 6 of 10 returned 5 (expected 5)
  (syn-read) wait for child 7 of 10 returned 6 (expected 6)
  (syn-read) wait for child 8 of 10 returned 7 (expected 7)
  (syn-read) wait for child 9 of 10 returned 8 (expected 8)
  (syn-read) wait for child 10 of 10 returned 9 (expected 9)
  (syn-read) end
Differences in `diff -u' format:
+ bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
+ bffffff0  ff ff bf 00 00 00 00 73-79 6e 2d 72 65 61 64 00 |.......syn-read.|
  (syn-read) begin
  (syn-read) create "data"
  (syn-read) open "data"
  (syn-read) write "data"
  (syn-read) close "data"
  (syn-read) exec child 1 of 10: "child-syn-read 0"
- (syn-read) exec child 2 of 10: "child-syn-read 1"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .......(syn-read) exec child 2 of 10: "child-syn-read 1"
+ ..|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 30 00 |hild-syn-read.0.|
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 31 00 |hild-syn-read.1.|
  (syn-read) exec child 3 of 10: "child-syn-read 2"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 32 00 |hild-syn-read.2.|
  (syn-read) exec child 4 of 10: "child-syn-read 3"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 33 00 |hild-syn-read.3.|
  (syn-read) exec child 5 of 10: "child-syn-read 4"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 34 00 |hild-syn-read.4.|
  (syn-read) exec child 6 of 10: "child-syn-read 5"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 35 00 |hild-syn-read.5.|
  (syn-read) exec child 7 of 10: "child-syn-read 6"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 36 00 |hild-syn-read.6.|
  (syn-read) exec child 8 of 10: "child-syn-read 7"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 37 00 |hild-syn-read.7.|
  (syn-read) exec child 9 of 10: "child-syn-read 8"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 38 00 |hild-syn-read.8.|
  (syn-read) exec child 10 of 10: "child-syn-read 9"
+ bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
+ bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
+ bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 39 00 |hild-syn-read.9.|
+ child-syn-read : exit(1)
+ child-syn-read : exit(2)
+ child-syn-read : exit(3)
+ child-syn-read : exit(6)
+ child-syn-read : exit(8)
+ child-syn-read : exit(0)
+ child-syn-read : exit(4)
  (syn-read) wait for child 1 of 10 returned 0 (expected 0)
  (syn-read) wait for child 2 of 10 returned 1 (expected 1)
  (syn-read) wait for child 3 of 10 returned 2 (expected 2)
  (syn-read) wait for child 4 of 10 returned 3 (expected 3)
  (syn-read) wait for child 5 of 10 returned 4 (expected 4)
+ child-syn-read : exit(5)
  (syn-read) wait for child 6 of 10 returned 5 (expected 5)
  (syn-read) wait for child 7 of 10 returned 6 (expected 6)
+ child-syn-read : exit(7)
+ child-syn-read : exit(9)
  (syn-read) wait for child 8 of 10 returned 7 (expected 7)
  (syn-read) wait for child 9 of 10 returned 8 (expected 8)
  (syn-read) wait for child 10 of 10 returned 9 (expected 9)
  (syn-read) end
+ syn-read : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/syn-read:

Copying tests/filesys/base/syn-read to scratch partition...
Copying tests/filesys/base/child-syn-read to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-read
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 200 sectors (100 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Erasing ustar archive...
Executing 'syn-read':
bfffffe0           00 00 00 00 01-00 00 00 ef ff ff bf f7 |   .............|
bffffff0  ff ff bf 00 00 00 00 73-79 6e 2d 72 65 61 64 00 |.......syn-read.|
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
(syn-read) exec child 1 of 10: "child-syn-read 0"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .......(syn-read) exec child 2 of 10: "child-syn-read 1"
..|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 30 00 |hild-syn-read.0.|
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 31 00 |hild-syn-read.1.|
(syn-read) exec child 3 of 10: "child-syn-read 2"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 32 00 |hild-syn-read.2.|
(syn-read) exec child 4 of 10: "child-syn-read 3"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 33 00 |hild-syn-read.3.|
(syn-read) exec child 5 of 10: "child-syn-read 4"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 34 00 |hild-syn-read.4.|
(syn-read) exec child 6 of 10: "child-syn-read 5"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 35 00 |hild-syn-read.5.|
(syn-read) exec child 7 of 10: "child-syn-read 6"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 36 00 |hild-syn-read.6.|
(syn-read) exec child 8 of 10: "child-syn-read 7"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 37 00 |hild-syn-read.7.|
(syn-read) exec child 9 of 10: "child-syn-read 8"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 38 00 |hild-syn-read.8.|
(syn-read) exec child 10 of 10: "child-syn-read 9"
bfffffd0                       00-00 00 00 02 00 00 00 e3 |       .........|
bfffffe0  ff ff bf ef ff ff bf fe-ff ff bf 00 00 00 00 63 |...............c|
bffffff0  68 69 6c 64 2d 73 79 6e-2d 72 65 61 64 00 39 00 |hild-syn-read.9.|
child-syn-read : exit(1)
child-syn-read : exit(2)
child-syn-read : exit(3)
child-syn-read : exit(6)
child-syn-read : exit(8)
child-syn-read : exit(0)
child-syn-read : exit(4)
(syn-read) wait for child 1 of 10 returned 0 (expected 0)
(syn-read) wait for child 2 of 10 returned 1 (expected 1)
(syn-read) wait for child 3 of 10 returned 2 (expected 2)
(syn-read) wait for child 4 of 10 returned 3 (expected 3)
(syn-read) wait for child 5 of 10 returned 4 (expected 4)
child-syn-read : exit(5)
(syn-read) wait for child 6 of 10 returned 5 (expected 5)
(syn-read) wait for child 7 of 10 returned 6 (expected 6)
child-syn-read : exit(7)
child-syn-read : exit(9)
(syn-read) wait for child 8 of 10 returned 7 (expected 7)
(syn-read) wait for child 9 of 10 returned 8 (expected 8)
(syn-read) wait for child 10 of 10 returned 9 (expected 9)
(syn-read) end
syn-read : exit(0)
Execution of 'syn-read' complete.
Timer: 7306 ticks
Thread: 89 idle ticks, 464 kernel ticks, 6756 user ticks
hda2 (filesys): 10762 reads, 414 writes
hda3 (scratch): 199 reads, 2 writes
Console: 4828 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-write FAILURE:

run: exec child 3 of 10: "child-syn-wrt 2": FAILED

OUTPUT FROM tests/filesys/base/syn-write:

Copying tests/filesys/base/syn-write to scratch partition...
Copying tests/filesys/base/child-syn-wrt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-write
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 199 sectors (99 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Erasing ustar archive...
Executing 'syn-write':
bfffffe0        00 00 00 00 01 00-00 00 ee ff ff bf f6 ff |  ..............|
bffffff0  ff bf 00 00 00 00 73 79-6e 2d 77 72 69 74 65 00 |......syn-write.|
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  63 68 69 6c 64 2d 73 79-6e 2d 77 72 74 00 30 00 |child-syn-wrt.0.|
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
bfffffd0                          00 00 00 00 02 00 00 00 |        ........|
bfffffe0  e4 ff ff bf f0 ff ff bf-fe ff ff bf 00 00 00 00 |................|
bffffff0  63 68 69 6c 64 2d 73 79-6e 2d 77 72 74 00 31 00 |child-syn-wrt.1.|
load: child-syn-wrt: open failed
child-syn-wrt : exit(0)
(syn-write) exec child 3 of 10: "child-syn-wrt 2": FAILED
syn-write : exit(1)
child-syn-wrt : exit(1)
Execution of 'syn-write' complete.
Timer: 659 ticks
Thread: 83 idle ticks, 339 kernel ticks, 242 user ticks
hda2 (filesys): 190 reads, 420 writes
hda3 (scratch): 198 reads, 2 writes
Console: 1853 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-remove FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (syn-remove) begin
  (syn-remove) create "deleteme"
  (syn-remove) open "deleteme"
  (syn-remove) remove "deleteme"
  (syn-remove) write "deleteme"
  (syn-remove) seek "deleteme" to 0
  (syn-remove) read "deleteme"
  (syn-remove) close "deleteme"
  (syn-remove) end
Differences in `diff -u' format:
+ bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
+ bffffff0  bf 00 00 00 00 73 79 6e-2d 72 65 6d 6f 76 65 00 |.....syn-remove.|
  (syn-remove) begin
  (syn-remove) create "deleteme"
  (syn-remove) open "deleteme"
  (syn-remove) remove "deleteme"
  (syn-remove) write "deleteme"
  (syn-remove) seek "deleteme" to 0
  (syn-remove) read "deleteme"
  (syn-remove) close "deleteme"
  (syn-remove) end
+ syn-remove : exit(0)

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/syn-remove:

Copying tests/filesys/base/syn-remove to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-remove
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 96 sectors (48 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-remove' into the file system...
Erasing ustar archive...
Executing 'syn-remove':
bfffffe0     00 00 00 00 01 00 00-00 ed ff ff bf f5 ff ff | ...............|
bffffff0  bf 00 00 00 00 73 79 6e-2d 72 65 6d 6f 76 65 00 |.....syn-remove.|
(syn-remove) begin
(syn-remove) create "deleteme"
(syn-remove) open "deleteme"
(syn-remove) remove "deleteme"
(syn-remove) write "deleteme"
(syn-remove) seek "deleteme" to 0
(syn-remove) read "deleteme"
(syn-remove) close "deleteme"
(syn-remove) end
syn-remove : exit(0)
Execution of 'syn-remove' complete.
Timer: 356 ticks
Thread: 41 idle ticks, 217 kernel ticks, 101 user ticks
hda2 (filesys): 91 reads, 209 writes
hda3 (scratch): 95 reads, 2 writes
Console: 1261 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Jun  7 2015 at 19:24:37
========================================================================
make[1]: Leaving directory `/home/jata/pintos/src/userprog/build'
